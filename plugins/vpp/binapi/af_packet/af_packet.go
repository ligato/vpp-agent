// Code generated by govpp binapi-generator DO NOT EDIT.
// Package af_packet represents the VPP binary API of the 'af_packet' VPP module.
// Generated from '/usr/share/vpp/api/af_packet.api.json'
package af_packet

import "git.fd.io/govpp.git/api"

// AfPacketCreate represents the VPP binary API message 'af_packet_create'.
// Generated from '/usr/share/vpp/api/af_packet.api.json', line 4:
//
//            "af_packet_create",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "host_if_name",
//                64
//            ],
//            [
//                "u8",
//                "hw_addr",
//                6
//            ],
//            [
//                "u8",
//                "use_random_hw_addr"
//            ],
//            {
//                "crc": "0x6d5d30d6"
//            }
//
type AfPacketCreate struct {
	HostIfName      []byte `struc:"[64]byte"`
	HwAddr          []byte `struc:"[6]byte"`
	UseRandomHwAddr uint8
}

func (*AfPacketCreate) GetMessageName() string {
	return "af_packet_create"
}
func (*AfPacketCreate) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*AfPacketCreate) GetCrcString() string {
	return "6d5d30d6"
}
func NewAfPacketCreate() api.Message {
	return &AfPacketCreate{}
}

// AfPacketCreateReply represents the VPP binary API message 'af_packet_create_reply'.
// Generated from '/usr/share/vpp/api/af_packet.api.json', line 36:
//
//            "af_packet_create_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            {
//                "crc": "0xfda5941f"
//            }
//
type AfPacketCreateReply struct {
	Retval    int32
	SwIfIndex uint32
}

func (*AfPacketCreateReply) GetMessageName() string {
	return "af_packet_create_reply"
}
func (*AfPacketCreateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*AfPacketCreateReply) GetCrcString() string {
	return "fda5941f"
}
func NewAfPacketCreateReply() api.Message {
	return &AfPacketCreateReply{}
}

// AfPacketDelete represents the VPP binary API message 'af_packet_delete'.
// Generated from '/usr/share/vpp/api/af_packet.api.json', line 58:
//
//            "af_packet_delete",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "host_if_name",
//                64
//            ],
//            {
//                "crc": "0x3efceda3"
//            }
//
type AfPacketDelete struct {
	HostIfName []byte `struc:"[64]byte"`
}

func (*AfPacketDelete) GetMessageName() string {
	return "af_packet_delete"
}
func (*AfPacketDelete) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*AfPacketDelete) GetCrcString() string {
	return "3efceda3"
}
func NewAfPacketDelete() api.Message {
	return &AfPacketDelete{}
}

// AfPacketDeleteReply represents the VPP binary API message 'af_packet_delete_reply'.
// Generated from '/usr/share/vpp/api/af_packet.api.json', line 81:
//
//            "af_packet_delete_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type AfPacketDeleteReply struct {
	Retval int32
}

func (*AfPacketDeleteReply) GetMessageName() string {
	return "af_packet_delete_reply"
}
func (*AfPacketDeleteReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*AfPacketDeleteReply) GetCrcString() string {
	return "e8d4e804"
}
func NewAfPacketDeleteReply() api.Message {
	return &AfPacketDeleteReply{}
}

// AfPacketSetL4CksumOffload represents the VPP binary API message 'af_packet_set_l4_cksum_offload'.
// Generated from '/usr/share/vpp/api/af_packet.api.json', line 99:
//
//            "af_packet_set_l4_cksum_offload",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "sw_if_index"
//            ],
//            [
//                "u8",
//                "set"
//            ],
//            {
//                "crc": "0x86538585"
//            }
//
type AfPacketSetL4CksumOffload struct {
	SwIfIndex uint8
	Set       uint8
}

func (*AfPacketSetL4CksumOffload) GetMessageName() string {
	return "af_packet_set_l4_cksum_offload"
}
func (*AfPacketSetL4CksumOffload) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*AfPacketSetL4CksumOffload) GetCrcString() string {
	return "86538585"
}
func NewAfPacketSetL4CksumOffload() api.Message {
	return &AfPacketSetL4CksumOffload{}
}

// AfPacketSetL4CksumOffloadReply represents the VPP binary API message 'af_packet_set_l4_cksum_offload_reply'.
// Generated from '/usr/share/vpp/api/af_packet.api.json', line 125:
//
//            "af_packet_set_l4_cksum_offload_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type AfPacketSetL4CksumOffloadReply struct {
	Retval int32
}

func (*AfPacketSetL4CksumOffloadReply) GetMessageName() string {
	return "af_packet_set_l4_cksum_offload_reply"
}
func (*AfPacketSetL4CksumOffloadReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*AfPacketSetL4CksumOffloadReply) GetCrcString() string {
	return "e8d4e804"
}
func NewAfPacketSetL4CksumOffloadReply() api.Message {
	return &AfPacketSetL4CksumOffloadReply{}
}

// AfPacketDump represents the VPP binary API message 'af_packet_dump'.
// Generated from '/usr/share/vpp/api/af_packet.api.json', line 143:
//
//            "af_packet_dump",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type AfPacketDump struct {
}

func (*AfPacketDump) GetMessageName() string {
	return "af_packet_dump"
}
func (*AfPacketDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*AfPacketDump) GetCrcString() string {
	return "51077d14"
}
func NewAfPacketDump() api.Message {
	return &AfPacketDump{}
}

// AfPacketDetails represents the VPP binary API message 'af_packet_details'.
// Generated from '/usr/share/vpp/api/af_packet.api.json', line 161:
//
//            "af_packet_details",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u8",
//                "host_if_name",
//                64
//            ],
//            {
//                "crc": "0x057205fa"
//            }
//
type AfPacketDetails struct {
	SwIfIndex  uint32
	HostIfName []byte `struc:"[64]byte"`
}

func (*AfPacketDetails) GetMessageName() string {
	return "af_packet_details"
}
func (*AfPacketDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*AfPacketDetails) GetCrcString() string {
	return "057205fa"
}
func NewAfPacketDetails() api.Message {
	return &AfPacketDetails{}
}
