// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package vxlan

import "reflect"

var Types = map[string]reflect.Type{
	"Services": reflect.TypeOf((*Services)(nil)).Elem(),
	"SwInterfaceSetVxlanBypass": reflect.TypeOf((*SwInterfaceSetVxlanBypass)(nil)).Elem(),
	"SwInterfaceSetVxlanBypassReply": reflect.TypeOf((*SwInterfaceSetVxlanBypassReply)(nil)).Elem(),
	"VxlanAddDelTunnel": reflect.TypeOf((*VxlanAddDelTunnel)(nil)).Elem(),
	"VxlanAddDelTunnelReply": reflect.TypeOf((*VxlanAddDelTunnelReply)(nil)).Elem(),
	"VxlanOffloadRx": reflect.TypeOf((*VxlanOffloadRx)(nil)).Elem(),
	"VxlanOffloadRxReply": reflect.TypeOf((*VxlanOffloadRxReply)(nil)).Elem(),
	"VxlanTunnelDetails": reflect.TypeOf((*VxlanTunnelDetails)(nil)).Elem(),
	"VxlanTunnelDump": reflect.TypeOf((*VxlanTunnelDump)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"NewSwInterfaceSetVxlanBypass": reflect.ValueOf(NewSwInterfaceSetVxlanBypass),
	"NewSwInterfaceSetVxlanBypassReply": reflect.ValueOf(NewSwInterfaceSetVxlanBypassReply),
	"NewVxlanAddDelTunnel": reflect.ValueOf(NewVxlanAddDelTunnel),
	"NewVxlanAddDelTunnelReply": reflect.ValueOf(NewVxlanAddDelTunnelReply),
	"NewVxlanOffloadRx": reflect.ValueOf(NewVxlanOffloadRx),
	"NewVxlanOffloadRxReply": reflect.ValueOf(NewVxlanOffloadRxReply),
	"NewVxlanTunnelDetails": reflect.ValueOf(NewVxlanTunnelDetails),
	"NewVxlanTunnelDump": reflect.ValueOf(NewVxlanTunnelDump),
}

var Variables = map[string]reflect.Value{
}

var Consts = map[string]reflect.Value{
}

