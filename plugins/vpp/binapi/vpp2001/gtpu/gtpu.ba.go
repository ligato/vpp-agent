// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/plugins/gtpu.api.json

/*
Package gtpu is a generated VPP binary API for 'gtpu' module.

It consists of:
	  6 messages
	  3 services
*/
package gtpu

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "gtpu"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0x74b10f9
)

// GtpuAddDelTunnel represents VPP binary API message 'gtpu_add_del_tunnel'.
type GtpuAddDelTunnel struct {
	IsAdd          uint8
	IsIPv6         uint8
	SrcAddress     []byte `struc:"[16]byte"`
	DstAddress     []byte `struc:"[16]byte"`
	McastSwIfIndex uint32
	EncapVrfID     uint32
	DecapNextIndex uint32
	Teid           uint32
}

func (*GtpuAddDelTunnel) GetMessageName() string {
	return "gtpu_add_del_tunnel"
}
func (*GtpuAddDelTunnel) GetCrcString() string {
	return "7ce9952e"
}
func (*GtpuAddDelTunnel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GtpuAddDelTunnelReply represents VPP binary API message 'gtpu_add_del_tunnel_reply'.
type GtpuAddDelTunnelReply struct {
	Retval    int32
	SwIfIndex uint32
}

func (*GtpuAddDelTunnelReply) GetMessageName() string {
	return "gtpu_add_del_tunnel_reply"
}
func (*GtpuAddDelTunnelReply) GetCrcString() string {
	return "fda5941f"
}
func (*GtpuAddDelTunnelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GtpuTunnelDetails represents VPP binary API message 'gtpu_tunnel_details'.
type GtpuTunnelDetails struct {
	SwIfIndex      uint32
	IsIPv6         uint8
	SrcAddress     []byte `struc:"[16]byte"`
	DstAddress     []byte `struc:"[16]byte"`
	McastSwIfIndex uint32
	EncapVrfID     uint32
	DecapNextIndex uint32
	Teid           uint32
}

func (*GtpuTunnelDetails) GetMessageName() string {
	return "gtpu_tunnel_details"
}
func (*GtpuTunnelDetails) GetCrcString() string {
	return "68853c3d"
}
func (*GtpuTunnelDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GtpuTunnelDump represents VPP binary API message 'gtpu_tunnel_dump'.
type GtpuTunnelDump struct {
	SwIfIndex uint32
}

func (*GtpuTunnelDump) GetMessageName() string {
	return "gtpu_tunnel_dump"
}
func (*GtpuTunnelDump) GetCrcString() string {
	return "529cb13f"
}
func (*GtpuTunnelDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// SwInterfaceSetGtpuBypass represents VPP binary API message 'sw_interface_set_gtpu_bypass'.
type SwInterfaceSetGtpuBypass struct {
	SwIfIndex uint32
	IsIPv6    uint8
	Enable    uint8
}

func (*SwInterfaceSetGtpuBypass) GetMessageName() string {
	return "sw_interface_set_gtpu_bypass"
}
func (*SwInterfaceSetGtpuBypass) GetCrcString() string {
	return "e74ca095"
}
func (*SwInterfaceSetGtpuBypass) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// SwInterfaceSetGtpuBypassReply represents VPP binary API message 'sw_interface_set_gtpu_bypass_reply'.
type SwInterfaceSetGtpuBypassReply struct {
	Retval int32
}

func (*SwInterfaceSetGtpuBypassReply) GetMessageName() string {
	return "sw_interface_set_gtpu_bypass_reply"
}
func (*SwInterfaceSetGtpuBypassReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SwInterfaceSetGtpuBypassReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func init() {
	api.RegisterMessage((*GtpuAddDelTunnel)(nil), "gtpu.GtpuAddDelTunnel")
	api.RegisterMessage((*GtpuAddDelTunnelReply)(nil), "gtpu.GtpuAddDelTunnelReply")
	api.RegisterMessage((*GtpuTunnelDetails)(nil), "gtpu.GtpuTunnelDetails")
	api.RegisterMessage((*GtpuTunnelDump)(nil), "gtpu.GtpuTunnelDump")
	api.RegisterMessage((*SwInterfaceSetGtpuBypass)(nil), "gtpu.SwInterfaceSetGtpuBypass")
	api.RegisterMessage((*SwInterfaceSetGtpuBypassReply)(nil), "gtpu.SwInterfaceSetGtpuBypassReply")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*GtpuAddDelTunnel)(nil),
		(*GtpuAddDelTunnelReply)(nil),
		(*GtpuTunnelDetails)(nil),
		(*GtpuTunnelDump)(nil),
		(*SwInterfaceSetGtpuBypass)(nil),
		(*SwInterfaceSetGtpuBypassReply)(nil),
	}
}

// RPCService represents RPC service API for gtpu module.
type RPCService interface {
	DumpGtpuTunnel(ctx context.Context, in *GtpuTunnelDump) (RPCService_DumpGtpuTunnelClient, error)
	GtpuAddDelTunnel(ctx context.Context, in *GtpuAddDelTunnel) (*GtpuAddDelTunnelReply, error)
	SwInterfaceSetGtpuBypass(ctx context.Context, in *SwInterfaceSetGtpuBypass) (*SwInterfaceSetGtpuBypassReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpGtpuTunnel(ctx context.Context, in *GtpuTunnelDump) (RPCService_DumpGtpuTunnelClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGtpuTunnelClient{stream}
	return x, nil
}

type RPCService_DumpGtpuTunnelClient interface {
	Recv() (*GtpuTunnelDetails, error)
}

type serviceClient_DumpGtpuTunnelClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGtpuTunnelClient) Recv() (*GtpuTunnelDetails, error) {
	m := new(GtpuTunnelDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) GtpuAddDelTunnel(ctx context.Context, in *GtpuAddDelTunnel) (*GtpuAddDelTunnelReply, error) {
	out := new(GtpuAddDelTunnelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetGtpuBypass(ctx context.Context, in *SwInterfaceSetGtpuBypass) (*SwInterfaceSetGtpuBypassReply, error) {
	out := new(SwInterfaceSetGtpuBypassReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
