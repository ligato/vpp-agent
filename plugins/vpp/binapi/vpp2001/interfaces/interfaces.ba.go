// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/core/interface.api.json

/*
Package interfaces is a generated VPP binary API for 'interface' module.

It consists of:
	 10 enums
	  7 aliases
	  6 types
	  1 union
	 53 messages
	 26 services
*/
package interfaces

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"

	ethernet_types "go.ligato.io/vpp-agent/v3/plugins/vpp/binapi/vpp2001/ethernet_types"
	interface_types "go.ligato.io/vpp-agent/v3/plugins/vpp/binapi/vpp2001/interface_types"
	ip_types "go.ligato.io/vpp-agent/v3/plugins/vpp/binapi/vpp2001/ip_types"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "interface"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0xfebc3ffa
)

type AddressFamily = ip_types.AddressFamily

type IfStatusFlags = interface_types.IfStatusFlags

type IfType = interface_types.IfType

type IPDscp = ip_types.IPDscp

type IPEcn = ip_types.IPEcn

type IPProto = ip_types.IPProto

type LinkDuplex = interface_types.LinkDuplex

type MtuProto = interface_types.MtuProto

type RxMode = interface_types.RxMode

type SubIfFlags = interface_types.SubIfFlags

type AddressWithPrefix = ip_types.AddressWithPrefix

type InterfaceIndex = interface_types.InterfaceIndex

type IP4Address = ip_types.IP4Address

type IP4AddressWithPrefix = ip_types.IP4AddressWithPrefix

type IP6Address = ip_types.IP6Address

type IP6AddressWithPrefix = ip_types.IP6AddressWithPrefix

type MacAddress = ethernet_types.MacAddress

type Address = ip_types.Address

type IP4Prefix = ip_types.IP4Prefix

type IP6Prefix = ip_types.IP6Prefix

type Mprefix = ip_types.Mprefix

type Prefix = ip_types.Prefix

type PrefixMatcher = ip_types.PrefixMatcher

type AddressUnion = ip_types.AddressUnion

// CollectDetailedInterfaceStats represents VPP binary API message 'collect_detailed_interface_stats'.
type CollectDetailedInterfaceStats struct {
	SwIfIndex     InterfaceIndex
	EnableDisable bool
}

func (m *CollectDetailedInterfaceStats) Reset() { *m = CollectDetailedInterfaceStats{} }
func (*CollectDetailedInterfaceStats) GetMessageName() string {
	return "collect_detailed_interface_stats"
}
func (*CollectDetailedInterfaceStats) GetCrcString() string            { return "5501adee" }
func (*CollectDetailedInterfaceStats) GetMessageType() api.MessageType { return api.RequestMessage }

// CollectDetailedInterfaceStatsReply represents VPP binary API message 'collect_detailed_interface_stats_reply'.
type CollectDetailedInterfaceStatsReply struct {
	Retval int32
}

func (m *CollectDetailedInterfaceStatsReply) Reset() { *m = CollectDetailedInterfaceStatsReply{} }
func (*CollectDetailedInterfaceStatsReply) GetMessageName() string {
	return "collect_detailed_interface_stats_reply"
}
func (*CollectDetailedInterfaceStatsReply) GetCrcString() string            { return "e8d4e804" }
func (*CollectDetailedInterfaceStatsReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// CreateLoopback represents VPP binary API message 'create_loopback'.
type CreateLoopback struct {
	MacAddress MacAddress
}

func (m *CreateLoopback) Reset()                        { *m = CreateLoopback{} }
func (*CreateLoopback) GetMessageName() string          { return "create_loopback" }
func (*CreateLoopback) GetCrcString() string            { return "42bb5d22" }
func (*CreateLoopback) GetMessageType() api.MessageType { return api.RequestMessage }

// CreateLoopbackInstance represents VPP binary API message 'create_loopback_instance'.
type CreateLoopbackInstance struct {
	MacAddress   MacAddress
	IsSpecified  bool
	UserInstance uint32
}

func (m *CreateLoopbackInstance) Reset()                        { *m = CreateLoopbackInstance{} }
func (*CreateLoopbackInstance) GetMessageName() string          { return "create_loopback_instance" }
func (*CreateLoopbackInstance) GetCrcString() string            { return "d36a3ee2" }
func (*CreateLoopbackInstance) GetMessageType() api.MessageType { return api.RequestMessage }

// CreateLoopbackInstanceReply represents VPP binary API message 'create_loopback_instance_reply'.
type CreateLoopbackInstanceReply struct {
	Retval    int32
	SwIfIndex InterfaceIndex
}

func (m *CreateLoopbackInstanceReply) Reset()                        { *m = CreateLoopbackInstanceReply{} }
func (*CreateLoopbackInstanceReply) GetMessageName() string          { return "create_loopback_instance_reply" }
func (*CreateLoopbackInstanceReply) GetCrcString() string            { return "5383d31f" }
func (*CreateLoopbackInstanceReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// CreateLoopbackReply represents VPP binary API message 'create_loopback_reply'.
type CreateLoopbackReply struct {
	Retval    int32
	SwIfIndex InterfaceIndex
}

func (m *CreateLoopbackReply) Reset()                        { *m = CreateLoopbackReply{} }
func (*CreateLoopbackReply) GetMessageName() string          { return "create_loopback_reply" }
func (*CreateLoopbackReply) GetCrcString() string            { return "5383d31f" }
func (*CreateLoopbackReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// CreateSubif represents VPP binary API message 'create_subif'.
type CreateSubif struct {
	SwIfIndex   InterfaceIndex
	SubID       uint32
	SubIfFlags  SubIfFlags
	OuterVlanID uint16
	InnerVlanID uint16
}

func (m *CreateSubif) Reset()                        { *m = CreateSubif{} }
func (*CreateSubif) GetMessageName() string          { return "create_subif" }
func (*CreateSubif) GetCrcString() string            { return "cb371063" }
func (*CreateSubif) GetMessageType() api.MessageType { return api.RequestMessage }

// CreateSubifReply represents VPP binary API message 'create_subif_reply'.
type CreateSubifReply struct {
	Retval    int32
	SwIfIndex InterfaceIndex
}

func (m *CreateSubifReply) Reset()                        { *m = CreateSubifReply{} }
func (*CreateSubifReply) GetMessageName() string          { return "create_subif_reply" }
func (*CreateSubifReply) GetCrcString() string            { return "5383d31f" }
func (*CreateSubifReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// CreateVlanSubif represents VPP binary API message 'create_vlan_subif'.
type CreateVlanSubif struct {
	SwIfIndex InterfaceIndex
	VlanID    uint32
}

func (m *CreateVlanSubif) Reset()                        { *m = CreateVlanSubif{} }
func (*CreateVlanSubif) GetMessageName() string          { return "create_vlan_subif" }
func (*CreateVlanSubif) GetCrcString() string            { return "af34ac8b" }
func (*CreateVlanSubif) GetMessageType() api.MessageType { return api.RequestMessage }

// CreateVlanSubifReply represents VPP binary API message 'create_vlan_subif_reply'.
type CreateVlanSubifReply struct {
	Retval    int32
	SwIfIndex InterfaceIndex
}

func (m *CreateVlanSubifReply) Reset()                        { *m = CreateVlanSubifReply{} }
func (*CreateVlanSubifReply) GetMessageName() string          { return "create_vlan_subif_reply" }
func (*CreateVlanSubifReply) GetCrcString() string            { return "5383d31f" }
func (*CreateVlanSubifReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// DeleteLoopback represents VPP binary API message 'delete_loopback'.
type DeleteLoopback struct {
	SwIfIndex InterfaceIndex
}

func (m *DeleteLoopback) Reset()                        { *m = DeleteLoopback{} }
func (*DeleteLoopback) GetMessageName() string          { return "delete_loopback" }
func (*DeleteLoopback) GetCrcString() string            { return "f9e6675e" }
func (*DeleteLoopback) GetMessageType() api.MessageType { return api.RequestMessage }

// DeleteLoopbackReply represents VPP binary API message 'delete_loopback_reply'.
type DeleteLoopbackReply struct {
	Retval int32
}

func (m *DeleteLoopbackReply) Reset()                        { *m = DeleteLoopbackReply{} }
func (*DeleteLoopbackReply) GetMessageName() string          { return "delete_loopback_reply" }
func (*DeleteLoopbackReply) GetCrcString() string            { return "e8d4e804" }
func (*DeleteLoopbackReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// DeleteSubif represents VPP binary API message 'delete_subif'.
type DeleteSubif struct {
	SwIfIndex InterfaceIndex
}

func (m *DeleteSubif) Reset()                        { *m = DeleteSubif{} }
func (*DeleteSubif) GetMessageName() string          { return "delete_subif" }
func (*DeleteSubif) GetCrcString() string            { return "f9e6675e" }
func (*DeleteSubif) GetMessageType() api.MessageType { return api.RequestMessage }

// DeleteSubifReply represents VPP binary API message 'delete_subif_reply'.
type DeleteSubifReply struct {
	Retval int32
}

func (m *DeleteSubifReply) Reset()                        { *m = DeleteSubifReply{} }
func (*DeleteSubifReply) GetMessageName() string          { return "delete_subif_reply" }
func (*DeleteSubifReply) GetCrcString() string            { return "e8d4e804" }
func (*DeleteSubifReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// HwInterfaceSetMtu represents VPP binary API message 'hw_interface_set_mtu'.
type HwInterfaceSetMtu struct {
	SwIfIndex InterfaceIndex
	Mtu       uint16
}

func (m *HwInterfaceSetMtu) Reset()                        { *m = HwInterfaceSetMtu{} }
func (*HwInterfaceSetMtu) GetMessageName() string          { return "hw_interface_set_mtu" }
func (*HwInterfaceSetMtu) GetCrcString() string            { return "e6746899" }
func (*HwInterfaceSetMtu) GetMessageType() api.MessageType { return api.RequestMessage }

// HwInterfaceSetMtuReply represents VPP binary API message 'hw_interface_set_mtu_reply'.
type HwInterfaceSetMtuReply struct {
	Retval int32
}

func (m *HwInterfaceSetMtuReply) Reset()                        { *m = HwInterfaceSetMtuReply{} }
func (*HwInterfaceSetMtuReply) GetMessageName() string          { return "hw_interface_set_mtu_reply" }
func (*HwInterfaceSetMtuReply) GetCrcString() string            { return "e8d4e804" }
func (*HwInterfaceSetMtuReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// InterfaceNameRenumber represents VPP binary API message 'interface_name_renumber'.
type InterfaceNameRenumber struct {
	SwIfIndex          InterfaceIndex
	NewShowDevInstance uint32
}

func (m *InterfaceNameRenumber) Reset()                        { *m = InterfaceNameRenumber{} }
func (*InterfaceNameRenumber) GetMessageName() string          { return "interface_name_renumber" }
func (*InterfaceNameRenumber) GetCrcString() string            { return "2b8858b8" }
func (*InterfaceNameRenumber) GetMessageType() api.MessageType { return api.RequestMessage }

// InterfaceNameRenumberReply represents VPP binary API message 'interface_name_renumber_reply'.
type InterfaceNameRenumberReply struct {
	Retval int32
}

func (m *InterfaceNameRenumberReply) Reset()                        { *m = InterfaceNameRenumberReply{} }
func (*InterfaceNameRenumberReply) GetMessageName() string          { return "interface_name_renumber_reply" }
func (*InterfaceNameRenumberReply) GetCrcString() string            { return "e8d4e804" }
func (*InterfaceNameRenumberReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceAddDelAddress represents VPP binary API message 'sw_interface_add_del_address'.
type SwInterfaceAddDelAddress struct {
	SwIfIndex InterfaceIndex
	IsAdd     bool
	DelAll    bool
	Prefix    AddressWithPrefix
}

func (m *SwInterfaceAddDelAddress) Reset()                        { *m = SwInterfaceAddDelAddress{} }
func (*SwInterfaceAddDelAddress) GetMessageName() string          { return "sw_interface_add_del_address" }
func (*SwInterfaceAddDelAddress) GetCrcString() string            { return "5803d5c4" }
func (*SwInterfaceAddDelAddress) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceAddDelAddressReply represents VPP binary API message 'sw_interface_add_del_address_reply'.
type SwInterfaceAddDelAddressReply struct {
	Retval int32
}

func (m *SwInterfaceAddDelAddressReply) Reset() { *m = SwInterfaceAddDelAddressReply{} }
func (*SwInterfaceAddDelAddressReply) GetMessageName() string {
	return "sw_interface_add_del_address_reply"
}
func (*SwInterfaceAddDelAddressReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceAddDelAddressReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceAddDelMacAddress represents VPP binary API message 'sw_interface_add_del_mac_address'.
type SwInterfaceAddDelMacAddress struct {
	SwIfIndex uint32
	Addr      MacAddress
	IsAdd     uint8
}

func (m *SwInterfaceAddDelMacAddress) Reset()                        { *m = SwInterfaceAddDelMacAddress{} }
func (*SwInterfaceAddDelMacAddress) GetMessageName() string          { return "sw_interface_add_del_mac_address" }
func (*SwInterfaceAddDelMacAddress) GetCrcString() string            { return "638bb9f4" }
func (*SwInterfaceAddDelMacAddress) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceAddDelMacAddressReply represents VPP binary API message 'sw_interface_add_del_mac_address_reply'.
type SwInterfaceAddDelMacAddressReply struct {
	Retval int32
}

func (m *SwInterfaceAddDelMacAddressReply) Reset() { *m = SwInterfaceAddDelMacAddressReply{} }
func (*SwInterfaceAddDelMacAddressReply) GetMessageName() string {
	return "sw_interface_add_del_mac_address_reply"
}
func (*SwInterfaceAddDelMacAddressReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceAddDelMacAddressReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceClearStats represents VPP binary API message 'sw_interface_clear_stats'.
type SwInterfaceClearStats struct {
	SwIfIndex InterfaceIndex
}

func (m *SwInterfaceClearStats) Reset()                        { *m = SwInterfaceClearStats{} }
func (*SwInterfaceClearStats) GetMessageName() string          { return "sw_interface_clear_stats" }
func (*SwInterfaceClearStats) GetCrcString() string            { return "f9e6675e" }
func (*SwInterfaceClearStats) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceClearStatsReply represents VPP binary API message 'sw_interface_clear_stats_reply'.
type SwInterfaceClearStatsReply struct {
	Retval int32
}

func (m *SwInterfaceClearStatsReply) Reset()                        { *m = SwInterfaceClearStatsReply{} }
func (*SwInterfaceClearStatsReply) GetMessageName() string          { return "sw_interface_clear_stats_reply" }
func (*SwInterfaceClearStatsReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceClearStatsReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceDetails represents VPP binary API message 'sw_interface_details'.
type SwInterfaceDetails struct {
	SwIfIndex        InterfaceIndex
	SupSwIfIndex     uint32
	L2Address        MacAddress
	Flags            IfStatusFlags
	Type             IfType
	LinkDuplex       LinkDuplex
	LinkSpeed        uint32
	LinkMtu          uint16
	Mtu              []uint32 `struc:"[4]uint32"`
	SubID            uint32
	SubNumberOfTags  uint8
	SubOuterVlanID   uint16
	SubInnerVlanID   uint16
	SubIfFlags       SubIfFlags
	VtrOp            uint32
	VtrPushDot1q     uint32
	VtrTag1          uint32
	VtrTag2          uint32
	OuterTag         uint16
	BDmac            MacAddress
	BSmac            MacAddress
	BVlanid          uint16
	ISid             uint32
	InterfaceName    string `struc:"[64]byte"`
	InterfaceDevType string `struc:"[64]byte"`
	Tag              string `struc:"[64]byte"`
}

func (m *SwInterfaceDetails) Reset()                        { *m = SwInterfaceDetails{} }
func (*SwInterfaceDetails) GetMessageName() string          { return "sw_interface_details" }
func (*SwInterfaceDetails) GetCrcString() string            { return "17b69fa2" }
func (*SwInterfaceDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceDump represents VPP binary API message 'sw_interface_dump'.
type SwInterfaceDump struct {
	SwIfIndex         InterfaceIndex
	NameFilterValid   bool
	XXX_NameFilterLen uint32 `struc:"sizeof=NameFilter"`
	NameFilter        string
}

func (m *SwInterfaceDump) Reset()                        { *m = SwInterfaceDump{} }
func (*SwInterfaceDump) GetMessageName() string          { return "sw_interface_dump" }
func (*SwInterfaceDump) GetCrcString() string            { return "aa610c27" }
func (*SwInterfaceDump) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceEvent represents VPP binary API message 'sw_interface_event'.
type SwInterfaceEvent struct {
	PID       uint32
	SwIfIndex InterfaceIndex
	Flags     IfStatusFlags
	Deleted   bool
}

func (m *SwInterfaceEvent) Reset()                        { *m = SwInterfaceEvent{} }
func (*SwInterfaceEvent) GetMessageName() string          { return "sw_interface_event" }
func (*SwInterfaceEvent) GetCrcString() string            { return "f709f78d" }
func (*SwInterfaceEvent) GetMessageType() api.MessageType { return api.EventMessage }

// SwInterfaceGetMacAddress represents VPP binary API message 'sw_interface_get_mac_address'.
type SwInterfaceGetMacAddress struct {
	SwIfIndex InterfaceIndex
}

func (m *SwInterfaceGetMacAddress) Reset()                        { *m = SwInterfaceGetMacAddress{} }
func (*SwInterfaceGetMacAddress) GetMessageName() string          { return "sw_interface_get_mac_address" }
func (*SwInterfaceGetMacAddress) GetCrcString() string            { return "f9e6675e" }
func (*SwInterfaceGetMacAddress) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceGetMacAddressReply represents VPP binary API message 'sw_interface_get_mac_address_reply'.
type SwInterfaceGetMacAddressReply struct {
	Retval     int32
	MacAddress MacAddress
}

func (m *SwInterfaceGetMacAddressReply) Reset() { *m = SwInterfaceGetMacAddressReply{} }
func (*SwInterfaceGetMacAddressReply) GetMessageName() string {
	return "sw_interface_get_mac_address_reply"
}
func (*SwInterfaceGetMacAddressReply) GetCrcString() string            { return "40ef2c08" }
func (*SwInterfaceGetMacAddressReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceGetTable represents VPP binary API message 'sw_interface_get_table'.
type SwInterfaceGetTable struct {
	SwIfIndex InterfaceIndex
	IsIPv6    bool
}

func (m *SwInterfaceGetTable) Reset()                        { *m = SwInterfaceGetTable{} }
func (*SwInterfaceGetTable) GetMessageName() string          { return "sw_interface_get_table" }
func (*SwInterfaceGetTable) GetCrcString() string            { return "2d033de4" }
func (*SwInterfaceGetTable) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceGetTableReply represents VPP binary API message 'sw_interface_get_table_reply'.
type SwInterfaceGetTableReply struct {
	Retval int32
	VrfID  uint32
}

func (m *SwInterfaceGetTableReply) Reset()                        { *m = SwInterfaceGetTableReply{} }
func (*SwInterfaceGetTableReply) GetMessageName() string          { return "sw_interface_get_table_reply" }
func (*SwInterfaceGetTableReply) GetCrcString() string            { return "a6eb0109" }
func (*SwInterfaceGetTableReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceRxPlacementDetails represents VPP binary API message 'sw_interface_rx_placement_details'.
type SwInterfaceRxPlacementDetails struct {
	SwIfIndex InterfaceIndex
	QueueID   uint32
	WorkerID  uint32
	Mode      RxMode
}

func (m *SwInterfaceRxPlacementDetails) Reset() { *m = SwInterfaceRxPlacementDetails{} }
func (*SwInterfaceRxPlacementDetails) GetMessageName() string {
	return "sw_interface_rx_placement_details"
}
func (*SwInterfaceRxPlacementDetails) GetCrcString() string            { return "f6d7d024" }
func (*SwInterfaceRxPlacementDetails) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceRxPlacementDump represents VPP binary API message 'sw_interface_rx_placement_dump'.
type SwInterfaceRxPlacementDump struct {
	SwIfIndex InterfaceIndex
}

func (m *SwInterfaceRxPlacementDump) Reset()                        { *m = SwInterfaceRxPlacementDump{} }
func (*SwInterfaceRxPlacementDump) GetMessageName() string          { return "sw_interface_rx_placement_dump" }
func (*SwInterfaceRxPlacementDump) GetCrcString() string            { return "f9e6675e" }
func (*SwInterfaceRxPlacementDump) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetFlags represents VPP binary API message 'sw_interface_set_flags'.
type SwInterfaceSetFlags struct {
	SwIfIndex InterfaceIndex
	Flags     IfStatusFlags
}

func (m *SwInterfaceSetFlags) Reset()                        { *m = SwInterfaceSetFlags{} }
func (*SwInterfaceSetFlags) GetMessageName() string          { return "sw_interface_set_flags" }
func (*SwInterfaceSetFlags) GetCrcString() string            { return "6a2b491a" }
func (*SwInterfaceSetFlags) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetFlagsReply represents VPP binary API message 'sw_interface_set_flags_reply'.
type SwInterfaceSetFlagsReply struct {
	Retval int32
}

func (m *SwInterfaceSetFlagsReply) Reset()                        { *m = SwInterfaceSetFlagsReply{} }
func (*SwInterfaceSetFlagsReply) GetMessageName() string          { return "sw_interface_set_flags_reply" }
func (*SwInterfaceSetFlagsReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceSetFlagsReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceSetIPDirectedBroadcast represents VPP binary API message 'sw_interface_set_ip_directed_broadcast'.
type SwInterfaceSetIPDirectedBroadcast struct {
	SwIfIndex InterfaceIndex
	Enable    bool
}

func (m *SwInterfaceSetIPDirectedBroadcast) Reset() { *m = SwInterfaceSetIPDirectedBroadcast{} }
func (*SwInterfaceSetIPDirectedBroadcast) GetMessageName() string {
	return "sw_interface_set_ip_directed_broadcast"
}
func (*SwInterfaceSetIPDirectedBroadcast) GetCrcString() string            { return "ae6cfcfb" }
func (*SwInterfaceSetIPDirectedBroadcast) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetIPDirectedBroadcastReply represents VPP binary API message 'sw_interface_set_ip_directed_broadcast_reply'.
type SwInterfaceSetIPDirectedBroadcastReply struct {
	Retval int32
}

func (m *SwInterfaceSetIPDirectedBroadcastReply) Reset() {
	*m = SwInterfaceSetIPDirectedBroadcastReply{}
}
func (*SwInterfaceSetIPDirectedBroadcastReply) GetMessageName() string {
	return "sw_interface_set_ip_directed_broadcast_reply"
}
func (*SwInterfaceSetIPDirectedBroadcastReply) GetCrcString() string { return "e8d4e804" }
func (*SwInterfaceSetIPDirectedBroadcastReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// SwInterfaceSetMacAddress represents VPP binary API message 'sw_interface_set_mac_address'.
type SwInterfaceSetMacAddress struct {
	SwIfIndex  InterfaceIndex
	MacAddress MacAddress
}

func (m *SwInterfaceSetMacAddress) Reset()                        { *m = SwInterfaceSetMacAddress{} }
func (*SwInterfaceSetMacAddress) GetMessageName() string          { return "sw_interface_set_mac_address" }
func (*SwInterfaceSetMacAddress) GetCrcString() string            { return "6aca746a" }
func (*SwInterfaceSetMacAddress) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetMacAddressReply represents VPP binary API message 'sw_interface_set_mac_address_reply'.
type SwInterfaceSetMacAddressReply struct {
	Retval int32
}

func (m *SwInterfaceSetMacAddressReply) Reset() { *m = SwInterfaceSetMacAddressReply{} }
func (*SwInterfaceSetMacAddressReply) GetMessageName() string {
	return "sw_interface_set_mac_address_reply"
}
func (*SwInterfaceSetMacAddressReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceSetMacAddressReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceSetMtu represents VPP binary API message 'sw_interface_set_mtu'.
type SwInterfaceSetMtu struct {
	SwIfIndex InterfaceIndex
	Mtu       []uint32 `struc:"[4]uint32"`
}

func (m *SwInterfaceSetMtu) Reset()                        { *m = SwInterfaceSetMtu{} }
func (*SwInterfaceSetMtu) GetMessageName() string          { return "sw_interface_set_mtu" }
func (*SwInterfaceSetMtu) GetCrcString() string            { return "5cbe85e5" }
func (*SwInterfaceSetMtu) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetMtuReply represents VPP binary API message 'sw_interface_set_mtu_reply'.
type SwInterfaceSetMtuReply struct {
	Retval int32
}

func (m *SwInterfaceSetMtuReply) Reset()                        { *m = SwInterfaceSetMtuReply{} }
func (*SwInterfaceSetMtuReply) GetMessageName() string          { return "sw_interface_set_mtu_reply" }
func (*SwInterfaceSetMtuReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceSetMtuReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceSetRxMode represents VPP binary API message 'sw_interface_set_rx_mode'.
type SwInterfaceSetRxMode struct {
	SwIfIndex    InterfaceIndex
	QueueIDValid bool
	QueueID      uint32
	Mode         RxMode
}

func (m *SwInterfaceSetRxMode) Reset()                        { *m = SwInterfaceSetRxMode{} }
func (*SwInterfaceSetRxMode) GetMessageName() string          { return "sw_interface_set_rx_mode" }
func (*SwInterfaceSetRxMode) GetCrcString() string            { return "780f5cee" }
func (*SwInterfaceSetRxMode) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetRxModeReply represents VPP binary API message 'sw_interface_set_rx_mode_reply'.
type SwInterfaceSetRxModeReply struct {
	Retval int32
}

func (m *SwInterfaceSetRxModeReply) Reset()                        { *m = SwInterfaceSetRxModeReply{} }
func (*SwInterfaceSetRxModeReply) GetMessageName() string          { return "sw_interface_set_rx_mode_reply" }
func (*SwInterfaceSetRxModeReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceSetRxModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceSetRxPlacement represents VPP binary API message 'sw_interface_set_rx_placement'.
type SwInterfaceSetRxPlacement struct {
	SwIfIndex InterfaceIndex
	QueueID   uint32
	WorkerID  uint32
	IsMain    bool
}

func (m *SwInterfaceSetRxPlacement) Reset()                        { *m = SwInterfaceSetRxPlacement{} }
func (*SwInterfaceSetRxPlacement) GetMessageName() string          { return "sw_interface_set_rx_placement" }
func (*SwInterfaceSetRxPlacement) GetCrcString() string            { return "db65f3c9" }
func (*SwInterfaceSetRxPlacement) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetRxPlacementReply represents VPP binary API message 'sw_interface_set_rx_placement_reply'.
type SwInterfaceSetRxPlacementReply struct {
	Retval int32
}

func (m *SwInterfaceSetRxPlacementReply) Reset() { *m = SwInterfaceSetRxPlacementReply{} }
func (*SwInterfaceSetRxPlacementReply) GetMessageName() string {
	return "sw_interface_set_rx_placement_reply"
}
func (*SwInterfaceSetRxPlacementReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceSetRxPlacementReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceSetTable represents VPP binary API message 'sw_interface_set_table'.
type SwInterfaceSetTable struct {
	SwIfIndex InterfaceIndex
	IsIPv6    bool
	VrfID     uint32
}

func (m *SwInterfaceSetTable) Reset()                        { *m = SwInterfaceSetTable{} }
func (*SwInterfaceSetTable) GetMessageName() string          { return "sw_interface_set_table" }
func (*SwInterfaceSetTable) GetCrcString() string            { return "df42a577" }
func (*SwInterfaceSetTable) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetTableReply represents VPP binary API message 'sw_interface_set_table_reply'.
type SwInterfaceSetTableReply struct {
	Retval int32
}

func (m *SwInterfaceSetTableReply) Reset()                        { *m = SwInterfaceSetTableReply{} }
func (*SwInterfaceSetTableReply) GetMessageName() string          { return "sw_interface_set_table_reply" }
func (*SwInterfaceSetTableReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceSetTableReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceSetUnnumbered represents VPP binary API message 'sw_interface_set_unnumbered'.
type SwInterfaceSetUnnumbered struct {
	SwIfIndex           InterfaceIndex
	UnnumberedSwIfIndex InterfaceIndex
	IsAdd               bool
}

func (m *SwInterfaceSetUnnumbered) Reset()                        { *m = SwInterfaceSetUnnumbered{} }
func (*SwInterfaceSetUnnumbered) GetMessageName() string          { return "sw_interface_set_unnumbered" }
func (*SwInterfaceSetUnnumbered) GetCrcString() string            { return "938ef33b" }
func (*SwInterfaceSetUnnumbered) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetUnnumberedReply represents VPP binary API message 'sw_interface_set_unnumbered_reply'.
type SwInterfaceSetUnnumberedReply struct {
	Retval int32
}

func (m *SwInterfaceSetUnnumberedReply) Reset() { *m = SwInterfaceSetUnnumberedReply{} }
func (*SwInterfaceSetUnnumberedReply) GetMessageName() string {
	return "sw_interface_set_unnumbered_reply"
}
func (*SwInterfaceSetUnnumberedReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceSetUnnumberedReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// SwInterfaceTagAddDel represents VPP binary API message 'sw_interface_tag_add_del'.
type SwInterfaceTagAddDel struct {
	IsAdd     bool
	SwIfIndex InterfaceIndex
	Tag       string `struc:"[64]byte"`
}

func (m *SwInterfaceTagAddDel) Reset()                        { *m = SwInterfaceTagAddDel{} }
func (*SwInterfaceTagAddDel) GetMessageName() string          { return "sw_interface_tag_add_del" }
func (*SwInterfaceTagAddDel) GetCrcString() string            { return "426f8bc1" }
func (*SwInterfaceTagAddDel) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceTagAddDelReply represents VPP binary API message 'sw_interface_tag_add_del_reply'.
type SwInterfaceTagAddDelReply struct {
	Retval int32
}

func (m *SwInterfaceTagAddDelReply) Reset()                        { *m = SwInterfaceTagAddDelReply{} }
func (*SwInterfaceTagAddDelReply) GetMessageName() string          { return "sw_interface_tag_add_del_reply" }
func (*SwInterfaceTagAddDelReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceTagAddDelReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// WantInterfaceEvents represents VPP binary API message 'want_interface_events'.
type WantInterfaceEvents struct {
	EnableDisable uint32
	PID           uint32
}

func (m *WantInterfaceEvents) Reset()                        { *m = WantInterfaceEvents{} }
func (*WantInterfaceEvents) GetMessageName() string          { return "want_interface_events" }
func (*WantInterfaceEvents) GetCrcString() string            { return "476f5a08" }
func (*WantInterfaceEvents) GetMessageType() api.MessageType { return api.RequestMessage }

// WantInterfaceEventsReply represents VPP binary API message 'want_interface_events_reply'.
type WantInterfaceEventsReply struct {
	Retval int32
}

func (m *WantInterfaceEventsReply) Reset()                        { *m = WantInterfaceEventsReply{} }
func (*WantInterfaceEventsReply) GetMessageName() string          { return "want_interface_events_reply" }
func (*WantInterfaceEventsReply) GetCrcString() string            { return "e8d4e804" }
func (*WantInterfaceEventsReply) GetMessageType() api.MessageType { return api.ReplyMessage }

func init() {
	api.RegisterMessage((*CollectDetailedInterfaceStats)(nil), "interface.CollectDetailedInterfaceStats")
	api.RegisterMessage((*CollectDetailedInterfaceStatsReply)(nil), "interface.CollectDetailedInterfaceStatsReply")
	api.RegisterMessage((*CreateLoopback)(nil), "interface.CreateLoopback")
	api.RegisterMessage((*CreateLoopbackInstance)(nil), "interface.CreateLoopbackInstance")
	api.RegisterMessage((*CreateLoopbackInstanceReply)(nil), "interface.CreateLoopbackInstanceReply")
	api.RegisterMessage((*CreateLoopbackReply)(nil), "interface.CreateLoopbackReply")
	api.RegisterMessage((*CreateSubif)(nil), "interface.CreateSubif")
	api.RegisterMessage((*CreateSubifReply)(nil), "interface.CreateSubifReply")
	api.RegisterMessage((*CreateVlanSubif)(nil), "interface.CreateVlanSubif")
	api.RegisterMessage((*CreateVlanSubifReply)(nil), "interface.CreateVlanSubifReply")
	api.RegisterMessage((*DeleteLoopback)(nil), "interface.DeleteLoopback")
	api.RegisterMessage((*DeleteLoopbackReply)(nil), "interface.DeleteLoopbackReply")
	api.RegisterMessage((*DeleteSubif)(nil), "interface.DeleteSubif")
	api.RegisterMessage((*DeleteSubifReply)(nil), "interface.DeleteSubifReply")
	api.RegisterMessage((*HwInterfaceSetMtu)(nil), "interface.HwInterfaceSetMtu")
	api.RegisterMessage((*HwInterfaceSetMtuReply)(nil), "interface.HwInterfaceSetMtuReply")
	api.RegisterMessage((*InterfaceNameRenumber)(nil), "interface.InterfaceNameRenumber")
	api.RegisterMessage((*InterfaceNameRenumberReply)(nil), "interface.InterfaceNameRenumberReply")
	api.RegisterMessage((*SwInterfaceAddDelAddress)(nil), "interface.SwInterfaceAddDelAddress")
	api.RegisterMessage((*SwInterfaceAddDelAddressReply)(nil), "interface.SwInterfaceAddDelAddressReply")
	api.RegisterMessage((*SwInterfaceAddDelMacAddress)(nil), "interface.SwInterfaceAddDelMacAddress")
	api.RegisterMessage((*SwInterfaceAddDelMacAddressReply)(nil), "interface.SwInterfaceAddDelMacAddressReply")
	api.RegisterMessage((*SwInterfaceClearStats)(nil), "interface.SwInterfaceClearStats")
	api.RegisterMessage((*SwInterfaceClearStatsReply)(nil), "interface.SwInterfaceClearStatsReply")
	api.RegisterMessage((*SwInterfaceDetails)(nil), "interface.SwInterfaceDetails")
	api.RegisterMessage((*SwInterfaceDump)(nil), "interface.SwInterfaceDump")
	api.RegisterMessage((*SwInterfaceEvent)(nil), "interface.SwInterfaceEvent")
	api.RegisterMessage((*SwInterfaceGetMacAddress)(nil), "interface.SwInterfaceGetMacAddress")
	api.RegisterMessage((*SwInterfaceGetMacAddressReply)(nil), "interface.SwInterfaceGetMacAddressReply")
	api.RegisterMessage((*SwInterfaceGetTable)(nil), "interface.SwInterfaceGetTable")
	api.RegisterMessage((*SwInterfaceGetTableReply)(nil), "interface.SwInterfaceGetTableReply")
	api.RegisterMessage((*SwInterfaceRxPlacementDetails)(nil), "interface.SwInterfaceRxPlacementDetails")
	api.RegisterMessage((*SwInterfaceRxPlacementDump)(nil), "interface.SwInterfaceRxPlacementDump")
	api.RegisterMessage((*SwInterfaceSetFlags)(nil), "interface.SwInterfaceSetFlags")
	api.RegisterMessage((*SwInterfaceSetFlagsReply)(nil), "interface.SwInterfaceSetFlagsReply")
	api.RegisterMessage((*SwInterfaceSetIPDirectedBroadcast)(nil), "interface.SwInterfaceSetIPDirectedBroadcast")
	api.RegisterMessage((*SwInterfaceSetIPDirectedBroadcastReply)(nil), "interface.SwInterfaceSetIPDirectedBroadcastReply")
	api.RegisterMessage((*SwInterfaceSetMacAddress)(nil), "interface.SwInterfaceSetMacAddress")
	api.RegisterMessage((*SwInterfaceSetMacAddressReply)(nil), "interface.SwInterfaceSetMacAddressReply")
	api.RegisterMessage((*SwInterfaceSetMtu)(nil), "interface.SwInterfaceSetMtu")
	api.RegisterMessage((*SwInterfaceSetMtuReply)(nil), "interface.SwInterfaceSetMtuReply")
	api.RegisterMessage((*SwInterfaceSetRxMode)(nil), "interface.SwInterfaceSetRxMode")
	api.RegisterMessage((*SwInterfaceSetRxModeReply)(nil), "interface.SwInterfaceSetRxModeReply")
	api.RegisterMessage((*SwInterfaceSetRxPlacement)(nil), "interface.SwInterfaceSetRxPlacement")
	api.RegisterMessage((*SwInterfaceSetRxPlacementReply)(nil), "interface.SwInterfaceSetRxPlacementReply")
	api.RegisterMessage((*SwInterfaceSetTable)(nil), "interface.SwInterfaceSetTable")
	api.RegisterMessage((*SwInterfaceSetTableReply)(nil), "interface.SwInterfaceSetTableReply")
	api.RegisterMessage((*SwInterfaceSetUnnumbered)(nil), "interface.SwInterfaceSetUnnumbered")
	api.RegisterMessage((*SwInterfaceSetUnnumberedReply)(nil), "interface.SwInterfaceSetUnnumberedReply")
	api.RegisterMessage((*SwInterfaceTagAddDel)(nil), "interface.SwInterfaceTagAddDel")
	api.RegisterMessage((*SwInterfaceTagAddDelReply)(nil), "interface.SwInterfaceTagAddDelReply")
	api.RegisterMessage((*WantInterfaceEvents)(nil), "interface.WantInterfaceEvents")
	api.RegisterMessage((*WantInterfaceEventsReply)(nil), "interface.WantInterfaceEventsReply")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*CollectDetailedInterfaceStats)(nil),
		(*CollectDetailedInterfaceStatsReply)(nil),
		(*CreateLoopback)(nil),
		(*CreateLoopbackInstance)(nil),
		(*CreateLoopbackInstanceReply)(nil),
		(*CreateLoopbackReply)(nil),
		(*CreateSubif)(nil),
		(*CreateSubifReply)(nil),
		(*CreateVlanSubif)(nil),
		(*CreateVlanSubifReply)(nil),
		(*DeleteLoopback)(nil),
		(*DeleteLoopbackReply)(nil),
		(*DeleteSubif)(nil),
		(*DeleteSubifReply)(nil),
		(*HwInterfaceSetMtu)(nil),
		(*HwInterfaceSetMtuReply)(nil),
		(*InterfaceNameRenumber)(nil),
		(*InterfaceNameRenumberReply)(nil),
		(*SwInterfaceAddDelAddress)(nil),
		(*SwInterfaceAddDelAddressReply)(nil),
		(*SwInterfaceAddDelMacAddress)(nil),
		(*SwInterfaceAddDelMacAddressReply)(nil),
		(*SwInterfaceClearStats)(nil),
		(*SwInterfaceClearStatsReply)(nil),
		(*SwInterfaceDetails)(nil),
		(*SwInterfaceDump)(nil),
		(*SwInterfaceEvent)(nil),
		(*SwInterfaceGetMacAddress)(nil),
		(*SwInterfaceGetMacAddressReply)(nil),
		(*SwInterfaceGetTable)(nil),
		(*SwInterfaceGetTableReply)(nil),
		(*SwInterfaceRxPlacementDetails)(nil),
		(*SwInterfaceRxPlacementDump)(nil),
		(*SwInterfaceSetFlags)(nil),
		(*SwInterfaceSetFlagsReply)(nil),
		(*SwInterfaceSetIPDirectedBroadcast)(nil),
		(*SwInterfaceSetIPDirectedBroadcastReply)(nil),
		(*SwInterfaceSetMacAddress)(nil),
		(*SwInterfaceSetMacAddressReply)(nil),
		(*SwInterfaceSetMtu)(nil),
		(*SwInterfaceSetMtuReply)(nil),
		(*SwInterfaceSetRxMode)(nil),
		(*SwInterfaceSetRxModeReply)(nil),
		(*SwInterfaceSetRxPlacement)(nil),
		(*SwInterfaceSetRxPlacementReply)(nil),
		(*SwInterfaceSetTable)(nil),
		(*SwInterfaceSetTableReply)(nil),
		(*SwInterfaceSetUnnumbered)(nil),
		(*SwInterfaceSetUnnumberedReply)(nil),
		(*SwInterfaceTagAddDel)(nil),
		(*SwInterfaceTagAddDelReply)(nil),
		(*WantInterfaceEvents)(nil),
		(*WantInterfaceEventsReply)(nil),
	}
}

// RPCService represents RPC service API for interface module.
type RPCService interface {
	DumpSwInterface(ctx context.Context, in *SwInterfaceDump) (RPCService_DumpSwInterfaceClient, error)
	DumpSwInterfaceRxPlacement(ctx context.Context, in *SwInterfaceRxPlacementDump) (RPCService_DumpSwInterfaceRxPlacementClient, error)
	CollectDetailedInterfaceStats(ctx context.Context, in *CollectDetailedInterfaceStats) (*CollectDetailedInterfaceStatsReply, error)
	CreateLoopback(ctx context.Context, in *CreateLoopback) (*CreateLoopbackReply, error)
	CreateLoopbackInstance(ctx context.Context, in *CreateLoopbackInstance) (*CreateLoopbackInstanceReply, error)
	CreateSubif(ctx context.Context, in *CreateSubif) (*CreateSubifReply, error)
	CreateVlanSubif(ctx context.Context, in *CreateVlanSubif) (*CreateVlanSubifReply, error)
	DeleteLoopback(ctx context.Context, in *DeleteLoopback) (*DeleteLoopbackReply, error)
	DeleteSubif(ctx context.Context, in *DeleteSubif) (*DeleteSubifReply, error)
	HwInterfaceSetMtu(ctx context.Context, in *HwInterfaceSetMtu) (*HwInterfaceSetMtuReply, error)
	InterfaceNameRenumber(ctx context.Context, in *InterfaceNameRenumber) (*InterfaceNameRenumberReply, error)
	SwInterfaceAddDelAddress(ctx context.Context, in *SwInterfaceAddDelAddress) (*SwInterfaceAddDelAddressReply, error)
	SwInterfaceAddDelMacAddress(ctx context.Context, in *SwInterfaceAddDelMacAddress) (*SwInterfaceAddDelMacAddressReply, error)
	SwInterfaceClearStats(ctx context.Context, in *SwInterfaceClearStats) (*SwInterfaceClearStatsReply, error)
	SwInterfaceGetMacAddress(ctx context.Context, in *SwInterfaceGetMacAddress) (*SwInterfaceGetMacAddressReply, error)
	SwInterfaceGetTable(ctx context.Context, in *SwInterfaceGetTable) (*SwInterfaceGetTableReply, error)
	SwInterfaceSetFlags(ctx context.Context, in *SwInterfaceSetFlags) (*SwInterfaceSetFlagsReply, error)
	SwInterfaceSetIPDirectedBroadcast(ctx context.Context, in *SwInterfaceSetIPDirectedBroadcast) (*SwInterfaceSetIPDirectedBroadcastReply, error)
	SwInterfaceSetMacAddress(ctx context.Context, in *SwInterfaceSetMacAddress) (*SwInterfaceSetMacAddressReply, error)
	SwInterfaceSetMtu(ctx context.Context, in *SwInterfaceSetMtu) (*SwInterfaceSetMtuReply, error)
	SwInterfaceSetRxMode(ctx context.Context, in *SwInterfaceSetRxMode) (*SwInterfaceSetRxModeReply, error)
	SwInterfaceSetRxPlacement(ctx context.Context, in *SwInterfaceSetRxPlacement) (*SwInterfaceSetRxPlacementReply, error)
	SwInterfaceSetTable(ctx context.Context, in *SwInterfaceSetTable) (*SwInterfaceSetTableReply, error)
	SwInterfaceSetUnnumbered(ctx context.Context, in *SwInterfaceSetUnnumbered) (*SwInterfaceSetUnnumberedReply, error)
	SwInterfaceTagAddDel(ctx context.Context, in *SwInterfaceTagAddDel) (*SwInterfaceTagAddDelReply, error)
	WantInterfaceEvents(ctx context.Context, in *WantInterfaceEvents) (*WantInterfaceEventsReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpSwInterface(ctx context.Context, in *SwInterfaceDump) (RPCService_DumpSwInterfaceClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpSwInterfaceClient{stream}
	return x, nil
}

type RPCService_DumpSwInterfaceClient interface {
	Recv() (*SwInterfaceDetails, error)
}

type serviceClient_DumpSwInterfaceClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpSwInterfaceClient) Recv() (*SwInterfaceDetails, error) {
	m := new(SwInterfaceDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpSwInterfaceRxPlacement(ctx context.Context, in *SwInterfaceRxPlacementDump) (RPCService_DumpSwInterfaceRxPlacementClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpSwInterfaceRxPlacementClient{stream}
	return x, nil
}

type RPCService_DumpSwInterfaceRxPlacementClient interface {
	Recv() (*SwInterfaceRxPlacementDetails, error)
}

type serviceClient_DumpSwInterfaceRxPlacementClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpSwInterfaceRxPlacementClient) Recv() (*SwInterfaceRxPlacementDetails, error) {
	m := new(SwInterfaceRxPlacementDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) CollectDetailedInterfaceStats(ctx context.Context, in *CollectDetailedInterfaceStats) (*CollectDetailedInterfaceStatsReply, error) {
	out := new(CollectDetailedInterfaceStatsReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) CreateLoopback(ctx context.Context, in *CreateLoopback) (*CreateLoopbackReply, error) {
	out := new(CreateLoopbackReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) CreateLoopbackInstance(ctx context.Context, in *CreateLoopbackInstance) (*CreateLoopbackInstanceReply, error) {
	out := new(CreateLoopbackInstanceReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) CreateSubif(ctx context.Context, in *CreateSubif) (*CreateSubifReply, error) {
	out := new(CreateSubifReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) CreateVlanSubif(ctx context.Context, in *CreateVlanSubif) (*CreateVlanSubifReply, error) {
	out := new(CreateVlanSubifReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) DeleteLoopback(ctx context.Context, in *DeleteLoopback) (*DeleteLoopbackReply, error) {
	out := new(DeleteLoopbackReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) DeleteSubif(ctx context.Context, in *DeleteSubif) (*DeleteSubifReply, error) {
	out := new(DeleteSubifReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) HwInterfaceSetMtu(ctx context.Context, in *HwInterfaceSetMtu) (*HwInterfaceSetMtuReply, error) {
	out := new(HwInterfaceSetMtuReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) InterfaceNameRenumber(ctx context.Context, in *InterfaceNameRenumber) (*InterfaceNameRenumberReply, error) {
	out := new(InterfaceNameRenumberReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceAddDelAddress(ctx context.Context, in *SwInterfaceAddDelAddress) (*SwInterfaceAddDelAddressReply, error) {
	out := new(SwInterfaceAddDelAddressReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceAddDelMacAddress(ctx context.Context, in *SwInterfaceAddDelMacAddress) (*SwInterfaceAddDelMacAddressReply, error) {
	out := new(SwInterfaceAddDelMacAddressReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceClearStats(ctx context.Context, in *SwInterfaceClearStats) (*SwInterfaceClearStatsReply, error) {
	out := new(SwInterfaceClearStatsReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceGetMacAddress(ctx context.Context, in *SwInterfaceGetMacAddress) (*SwInterfaceGetMacAddressReply, error) {
	out := new(SwInterfaceGetMacAddressReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceGetTable(ctx context.Context, in *SwInterfaceGetTable) (*SwInterfaceGetTableReply, error) {
	out := new(SwInterfaceGetTableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetFlags(ctx context.Context, in *SwInterfaceSetFlags) (*SwInterfaceSetFlagsReply, error) {
	out := new(SwInterfaceSetFlagsReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetIPDirectedBroadcast(ctx context.Context, in *SwInterfaceSetIPDirectedBroadcast) (*SwInterfaceSetIPDirectedBroadcastReply, error) {
	out := new(SwInterfaceSetIPDirectedBroadcastReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetMacAddress(ctx context.Context, in *SwInterfaceSetMacAddress) (*SwInterfaceSetMacAddressReply, error) {
	out := new(SwInterfaceSetMacAddressReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetMtu(ctx context.Context, in *SwInterfaceSetMtu) (*SwInterfaceSetMtuReply, error) {
	out := new(SwInterfaceSetMtuReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetRxMode(ctx context.Context, in *SwInterfaceSetRxMode) (*SwInterfaceSetRxModeReply, error) {
	out := new(SwInterfaceSetRxModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetRxPlacement(ctx context.Context, in *SwInterfaceSetRxPlacement) (*SwInterfaceSetRxPlacementReply, error) {
	out := new(SwInterfaceSetRxPlacementReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetTable(ctx context.Context, in *SwInterfaceSetTable) (*SwInterfaceSetTableReply, error) {
	out := new(SwInterfaceSetTableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetUnnumbered(ctx context.Context, in *SwInterfaceSetUnnumbered) (*SwInterfaceSetUnnumberedReply, error) {
	out := new(SwInterfaceSetUnnumberedReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceTagAddDel(ctx context.Context, in *SwInterfaceTagAddDel) (*SwInterfaceTagAddDelReply, error) {
	out := new(SwInterfaceTagAddDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) WantInterfaceEvents(ctx context.Context, in *WantInterfaceEvents) (*WantInterfaceEventsReply, error) {
	out := new(WantInterfaceEventsReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
