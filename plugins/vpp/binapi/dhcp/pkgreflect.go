// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package dhcp

import "reflect"

var Types = map[string]reflect.Type{
	"DHCP6AddressInfo": reflect.TypeOf((*DHCP6AddressInfo)(nil)).Elem(),
	"DHCP6ClientsEnableDisable": reflect.TypeOf((*DHCP6ClientsEnableDisable)(nil)).Elem(),
	"DHCP6ClientsEnableDisableReply": reflect.TypeOf((*DHCP6ClientsEnableDisableReply)(nil)).Elem(),
	"DHCP6DuidLlSet": reflect.TypeOf((*DHCP6DuidLlSet)(nil)).Elem(),
	"DHCP6DuidLlSetReply": reflect.TypeOf((*DHCP6DuidLlSetReply)(nil)).Elem(),
	"DHCP6PdPrefixInfo": reflect.TypeOf((*DHCP6PdPrefixInfo)(nil)).Elem(),
	"DHCP6PdReplyEvent": reflect.TypeOf((*DHCP6PdReplyEvent)(nil)).Elem(),
	"DHCP6PdSendClientMessage": reflect.TypeOf((*DHCP6PdSendClientMessage)(nil)).Elem(),
	"DHCP6PdSendClientMessageReply": reflect.TypeOf((*DHCP6PdSendClientMessageReply)(nil)).Elem(),
	"DHCP6ReplyEvent": reflect.TypeOf((*DHCP6ReplyEvent)(nil)).Elem(),
	"DHCP6SendClientMessage": reflect.TypeOf((*DHCP6SendClientMessage)(nil)).Elem(),
	"DHCP6SendClientMessageReply": reflect.TypeOf((*DHCP6SendClientMessageReply)(nil)).Elem(),
	"DHCPClient": reflect.TypeOf((*DHCPClient)(nil)).Elem(),
	"DHCPClientConfig": reflect.TypeOf((*DHCPClientConfig)(nil)).Elem(),
	"DHCPClientConfigReply": reflect.TypeOf((*DHCPClientConfigReply)(nil)).Elem(),
	"DHCPClientDetails": reflect.TypeOf((*DHCPClientDetails)(nil)).Elem(),
	"DHCPClientDump": reflect.TypeOf((*DHCPClientDump)(nil)).Elem(),
	"DHCPComplEvent": reflect.TypeOf((*DHCPComplEvent)(nil)).Elem(),
	"DHCPLease": reflect.TypeOf((*DHCPLease)(nil)).Elem(),
	"DHCPProxyConfig": reflect.TypeOf((*DHCPProxyConfig)(nil)).Elem(),
	"DHCPProxyConfigReply": reflect.TypeOf((*DHCPProxyConfigReply)(nil)).Elem(),
	"DHCPProxyDetails": reflect.TypeOf((*DHCPProxyDetails)(nil)).Elem(),
	"DHCPProxyDump": reflect.TypeOf((*DHCPProxyDump)(nil)).Elem(),
	"DHCPProxySetVss": reflect.TypeOf((*DHCPProxySetVss)(nil)).Elem(),
	"DHCPProxySetVssReply": reflect.TypeOf((*DHCPProxySetVssReply)(nil)).Elem(),
	"DHCPServer": reflect.TypeOf((*DHCPServer)(nil)).Elem(),
	"Services": reflect.TypeOf((*Services)(nil)).Elem(),
	"WantDHCP6PdReplyEvents": reflect.TypeOf((*WantDHCP6PdReplyEvents)(nil)).Elem(),
	"WantDHCP6PdReplyEventsReply": reflect.TypeOf((*WantDHCP6PdReplyEventsReply)(nil)).Elem(),
	"WantDHCP6ReplyEvents": reflect.TypeOf((*WantDHCP6ReplyEvents)(nil)).Elem(),
	"WantDHCP6ReplyEventsReply": reflect.TypeOf((*WantDHCP6ReplyEventsReply)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"NewDHCP6ClientsEnableDisable": reflect.ValueOf(NewDHCP6ClientsEnableDisable),
	"NewDHCP6ClientsEnableDisableReply": reflect.ValueOf(NewDHCP6ClientsEnableDisableReply),
	"NewDHCP6DuidLlSet": reflect.ValueOf(NewDHCP6DuidLlSet),
	"NewDHCP6DuidLlSetReply": reflect.ValueOf(NewDHCP6DuidLlSetReply),
	"NewDHCP6PdReplyEvent": reflect.ValueOf(NewDHCP6PdReplyEvent),
	"NewDHCP6PdSendClientMessage": reflect.ValueOf(NewDHCP6PdSendClientMessage),
	"NewDHCP6PdSendClientMessageReply": reflect.ValueOf(NewDHCP6PdSendClientMessageReply),
	"NewDHCP6ReplyEvent": reflect.ValueOf(NewDHCP6ReplyEvent),
	"NewDHCP6SendClientMessage": reflect.ValueOf(NewDHCP6SendClientMessage),
	"NewDHCP6SendClientMessageReply": reflect.ValueOf(NewDHCP6SendClientMessageReply),
	"NewDHCPClientConfig": reflect.ValueOf(NewDHCPClientConfig),
	"NewDHCPClientConfigReply": reflect.ValueOf(NewDHCPClientConfigReply),
	"NewDHCPClientDetails": reflect.ValueOf(NewDHCPClientDetails),
	"NewDHCPClientDump": reflect.ValueOf(NewDHCPClientDump),
	"NewDHCPComplEvent": reflect.ValueOf(NewDHCPComplEvent),
	"NewDHCPProxyConfig": reflect.ValueOf(NewDHCPProxyConfig),
	"NewDHCPProxyConfigReply": reflect.ValueOf(NewDHCPProxyConfigReply),
	"NewDHCPProxyDetails": reflect.ValueOf(NewDHCPProxyDetails),
	"NewDHCPProxyDump": reflect.ValueOf(NewDHCPProxyDump),
	"NewDHCPProxySetVss": reflect.ValueOf(NewDHCPProxySetVss),
	"NewDHCPProxySetVssReply": reflect.ValueOf(NewDHCPProxySetVssReply),
	"NewWantDHCP6PdReplyEvents": reflect.ValueOf(NewWantDHCP6PdReplyEvents),
	"NewWantDHCP6PdReplyEventsReply": reflect.ValueOf(NewWantDHCP6PdReplyEventsReply),
	"NewWantDHCP6ReplyEvents": reflect.ValueOf(NewWantDHCP6ReplyEvents),
	"NewWantDHCP6ReplyEventsReply": reflect.ValueOf(NewWantDHCP6ReplyEventsReply),
}

var Variables = map[string]reflect.Value{
}

var Consts = map[string]reflect.Value{
}

