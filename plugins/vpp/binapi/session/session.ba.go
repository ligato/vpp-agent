// Code generated by GoVPP binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/session.api.json

/*
Package session is a generated VPP binary API of the 'session' VPP module.

It is generated from this file:
	session.api.json

It contains these VPP binary API objects:
	44 messages
	22 services
*/
package session

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

/* Messages */

// ApplicationAttach represents the VPP binary API message 'application_attach'.
// Generated from 'session.api.json', line 4:
//
//            "application_attach",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "initial_segment_size"
//            ],
//            [
//                "u64",
//                "options",
//                16
//            ],
//            [
//                "u8",
//                "namespace_id_len"
//            ],
//            [
//                "u8",
//                "namespace_id",
//                64
//            ],
//            {
//                "crc": "0x81d4f974"
//            }
//
type ApplicationAttach struct {
	InitialSegmentSize uint32
	Options            []uint64 `struc:"[16]uint64"`
	NamespaceIDLen     uint8
	NamespaceID        []byte `struc:"[64]byte"`
}

func (*ApplicationAttach) GetMessageName() string {
	return "application_attach"
}
func (*ApplicationAttach) GetCrcString() string {
	return "81d4f974"
}
func (*ApplicationAttach) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewApplicationAttach() api.Message {
	return &ApplicationAttach{}
}

// ApplicationAttachReply represents the VPP binary API message 'application_attach_reply'.
// Generated from 'session.api.json', line 40:
//
//            "application_attach_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u64",
//                "app_event_queue_address"
//            ],
//            [
//                "u8",
//                "n_fds"
//            ],
//            [
//                "u8",
//                "fd_flags"
//            ],
//            [
//                "u32",
//                "segment_size"
//            ],
//            [
//                "u8",
//                "segment_name_length"
//            ],
//            [
//                "u8",
//                "segment_name",
//                128
//            ],
//            {
//                "crc": "0x8d501943"
//            }
//
type ApplicationAttachReply struct {
	Retval               int32
	AppEventQueueAddress uint64
	NFds                 uint8
	FdFlags              uint8
	SegmentSize          uint32
	SegmentNameLength    uint8
	SegmentName          []byte `struc:"[128]byte"`
}

func (*ApplicationAttachReply) GetMessageName() string {
	return "application_attach_reply"
}
func (*ApplicationAttachReply) GetCrcString() string {
	return "8d501943"
}
func (*ApplicationAttachReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewApplicationAttachReply() api.Message {
	return &ApplicationAttachReply{}
}

// ApplicationTLSCertAdd represents the VPP binary API message 'application_tls_cert_add'.
// Generated from 'session.api.json', line 83:
//
//            "application_tls_cert_add",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "app_index"
//            ],
//            [
//                "u16",
//                "cert_len"
//            ],
//            [
//                "u8",
//                "cert",
//                0,
//                "cert_len"
//            ],
//            {
//                "crc": "0x3f5cfe45"
//            }
//
type ApplicationTLSCertAdd struct {
	AppIndex uint32
	CertLen  uint16 `struc:"sizeof=Cert"`
	Cert     []byte
}

func (*ApplicationTLSCertAdd) GetMessageName() string {
	return "application_tls_cert_add"
}
func (*ApplicationTLSCertAdd) GetCrcString() string {
	return "3f5cfe45"
}
func (*ApplicationTLSCertAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewApplicationTLSCertAdd() api.Message {
	return &ApplicationTLSCertAdd{}
}

// ApplicationTLSCertAddReply represents the VPP binary API message 'application_tls_cert_add_reply'.
// Generated from 'session.api.json', line 115:
//
//            "application_tls_cert_add_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type ApplicationTLSCertAddReply struct {
	Retval int32
}

func (*ApplicationTLSCertAddReply) GetMessageName() string {
	return "application_tls_cert_add_reply"
}
func (*ApplicationTLSCertAddReply) GetCrcString() string {
	return "e8d4e804"
}
func (*ApplicationTLSCertAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewApplicationTLSCertAddReply() api.Message {
	return &ApplicationTLSCertAddReply{}
}

// ApplicationTLSKeyAdd represents the VPP binary API message 'application_tls_key_add'.
// Generated from 'session.api.json', line 133:
//
//            "application_tls_key_add",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "app_index"
//            ],
//            [
//                "u16",
//                "key_len"
//            ],
//            [
//                "u8",
//                "key",
//                0,
//                "key_len"
//            ],
//            {
//                "crc": "0x5eaf70cd"
//            }
//
type ApplicationTLSKeyAdd struct {
	AppIndex uint32
	KeyLen   uint16 `struc:"sizeof=Key"`
	Key      []byte
}

func (*ApplicationTLSKeyAdd) GetMessageName() string {
	return "application_tls_key_add"
}
func (*ApplicationTLSKeyAdd) GetCrcString() string {
	return "5eaf70cd"
}
func (*ApplicationTLSKeyAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewApplicationTLSKeyAdd() api.Message {
	return &ApplicationTLSKeyAdd{}
}

// ApplicationTLSKeyAddReply represents the VPP binary API message 'application_tls_key_add_reply'.
// Generated from 'session.api.json', line 165:
//
//            "application_tls_key_add_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type ApplicationTLSKeyAddReply struct {
	Retval int32
}

func (*ApplicationTLSKeyAddReply) GetMessageName() string {
	return "application_tls_key_add_reply"
}
func (*ApplicationTLSKeyAddReply) GetCrcString() string {
	return "e8d4e804"
}
func (*ApplicationTLSKeyAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewApplicationTLSKeyAddReply() api.Message {
	return &ApplicationTLSKeyAddReply{}
}

// ApplicationDetach represents the VPP binary API message 'application_detach'.
// Generated from 'session.api.json', line 183:
//
//            "application_detach",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type ApplicationDetach struct{}

func (*ApplicationDetach) GetMessageName() string {
	return "application_detach"
}
func (*ApplicationDetach) GetCrcString() string {
	return "51077d14"
}
func (*ApplicationDetach) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewApplicationDetach() api.Message {
	return &ApplicationDetach{}
}

// ApplicationDetachReply represents the VPP binary API message 'application_detach_reply'.
// Generated from 'session.api.json', line 201:
//
//            "application_detach_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type ApplicationDetachReply struct {
	Retval int32
}

func (*ApplicationDetachReply) GetMessageName() string {
	return "application_detach_reply"
}
func (*ApplicationDetachReply) GetCrcString() string {
	return "e8d4e804"
}
func (*ApplicationDetachReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewApplicationDetachReply() api.Message {
	return &ApplicationDetachReply{}
}

// MapAnotherSegment represents the VPP binary API message 'map_another_segment'.
// Generated from 'session.api.json', line 219:
//
//            "map_another_segment",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "fd_flags"
//            ],
//            [
//                "u32",
//                "segment_size"
//            ],
//            [
//                "u8",
//                "segment_name",
//                128
//            ],
//            {
//                "crc": "0x2b743078"
//            }
//
type MapAnotherSegment struct {
	FdFlags     uint8
	SegmentSize uint32
	SegmentName []byte `struc:"[128]byte"`
}

func (*MapAnotherSegment) GetMessageName() string {
	return "map_another_segment"
}
func (*MapAnotherSegment) GetCrcString() string {
	return "2b743078"
}
func (*MapAnotherSegment) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewMapAnotherSegment() api.Message {
	return &MapAnotherSegment{}
}

// MapAnotherSegmentReply represents the VPP binary API message 'map_another_segment_reply'.
// Generated from 'session.api.json', line 250:
//
//            "map_another_segment_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type MapAnotherSegmentReply struct {
	Retval int32
}

func (*MapAnotherSegmentReply) GetMessageName() string {
	return "map_another_segment_reply"
}
func (*MapAnotherSegmentReply) GetCrcString() string {
	return "e8d4e804"
}
func (*MapAnotherSegmentReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMapAnotherSegmentReply() api.Message {
	return &MapAnotherSegmentReply{}
}

// UnmapSegment represents the VPP binary API message 'unmap_segment'.
// Generated from 'session.api.json', line 268:
//
//            "unmap_segment",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "segment_name",
//                128
//            ],
//            {
//                "crc": "0x15ffd8c6"
//            }
//
type UnmapSegment struct {
	SegmentName []byte `struc:"[128]byte"`
}

func (*UnmapSegment) GetMessageName() string {
	return "unmap_segment"
}
func (*UnmapSegment) GetCrcString() string {
	return "15ffd8c6"
}
func (*UnmapSegment) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewUnmapSegment() api.Message {
	return &UnmapSegment{}
}

// UnmapSegmentReply represents the VPP binary API message 'unmap_segment_reply'.
// Generated from 'session.api.json', line 291:
//
//            "unmap_segment_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type UnmapSegmentReply struct {
	Retval int32
}

func (*UnmapSegmentReply) GetMessageName() string {
	return "unmap_segment_reply"
}
func (*UnmapSegmentReply) GetCrcString() string {
	return "e8d4e804"
}
func (*UnmapSegmentReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewUnmapSegmentReply() api.Message {
	return &UnmapSegmentReply{}
}

// BindURI represents the VPP binary API message 'bind_uri'.
// Generated from 'session.api.json', line 309:
//
//            "bind_uri",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "accept_cookie"
//            ],
//            [
//                "u8",
//                "uri",
//                128
//            ],
//            {
//                "crc": "0xfae140cb"
//            }
//
type BindURI struct {
	AcceptCookie uint32
	URI          []byte `struc:"[128]byte"`
}

func (*BindURI) GetMessageName() string {
	return "bind_uri"
}
func (*BindURI) GetCrcString() string {
	return "fae140cb"
}
func (*BindURI) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewBindURI() api.Message {
	return &BindURI{}
}

// BindURIReply represents the VPP binary API message 'bind_uri_reply'.
// Generated from 'session.api.json', line 336:
//
//            "bind_uri_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u64",
//                "rx_fifo"
//            ],
//            [
//                "u64",
//                "tx_fifo"
//            ],
//            [
//                "u8",
//                "lcl_is_ip4"
//            ],
//            [
//                "u8",
//                "lcl_ip",
//                16
//            ],
//            [
//                "u16",
//                "lcl_port"
//            ],
//            [
//                "u64",
//                "vpp_evt_q"
//            ],
//            {
//                "crc": "0x528af6c0"
//            }
//
type BindURIReply struct {
	Handle   uint64
	Retval   int32
	RxFifo   uint64
	TxFifo   uint64
	LclIsIP4 uint8
	LclIP    []byte `struc:"[16]byte"`
	LclPort  uint16
	VppEvtQ  uint64
}

func (*BindURIReply) GetMessageName() string {
	return "bind_uri_reply"
}
func (*BindURIReply) GetCrcString() string {
	return "528af6c0"
}
func (*BindURIReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewBindURIReply() api.Message {
	return &BindURIReply{}
}

// UnbindURI represents the VPP binary API message 'unbind_uri'.
// Generated from 'session.api.json', line 383:
//
//            "unbind_uri",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "uri",
//                128
//            ],
//            {
//                "crc": "0x294cf07d"
//            }
//
type UnbindURI struct {
	URI []byte `struc:"[128]byte"`
}

func (*UnbindURI) GetMessageName() string {
	return "unbind_uri"
}
func (*UnbindURI) GetCrcString() string {
	return "294cf07d"
}
func (*UnbindURI) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewUnbindURI() api.Message {
	return &UnbindURI{}
}

// UnbindURIReply represents the VPP binary API message 'unbind_uri_reply'.
// Generated from 'session.api.json', line 406:
//
//            "unbind_uri_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type UnbindURIReply struct {
	Retval int32
}

func (*UnbindURIReply) GetMessageName() string {
	return "unbind_uri_reply"
}
func (*UnbindURIReply) GetCrcString() string {
	return "e8d4e804"
}
func (*UnbindURIReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewUnbindURIReply() api.Message {
	return &UnbindURIReply{}
}

// ConnectURI represents the VPP binary API message 'connect_uri'.
// Generated from 'session.api.json', line 424:
//
//            "connect_uri",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "client_queue_address"
//            ],
//            [
//                "u64",
//                "options",
//                16
//            ],
//            [
//                "u8",
//                "uri",
//                128
//            ],
//            {
//                "crc": "0xa36143d6"
//            }
//
type ConnectURI struct {
	ClientQueueAddress uint64
	Options            []uint64 `struc:"[16]uint64"`
	URI                []byte   `struc:"[128]byte"`
}

func (*ConnectURI) GetMessageName() string {
	return "connect_uri"
}
func (*ConnectURI) GetCrcString() string {
	return "a36143d6"
}
func (*ConnectURI) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewConnectURI() api.Message {
	return &ConnectURI{}
}

// ConnectURIReply represents the VPP binary API message 'connect_uri_reply'.
// Generated from 'session.api.json', line 456:
//
//            "connect_uri_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type ConnectURIReply struct {
	Retval int32
}

func (*ConnectURIReply) GetMessageName() string {
	return "connect_uri_reply"
}
func (*ConnectURIReply) GetCrcString() string {
	return "e8d4e804"
}
func (*ConnectURIReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewConnectURIReply() api.Message {
	return &ConnectURIReply{}
}

// AcceptSession represents the VPP binary API message 'accept_session'.
// Generated from 'session.api.json', line 474:
//
//            "accept_session",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "listener_handle"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            [
//                "u64",
//                "server_rx_fifo"
//            ],
//            [
//                "u64",
//                "server_tx_fifo"
//            ],
//            [
//                "u64",
//                "vpp_event_queue_address"
//            ],
//            [
//                "u64",
//                "server_event_queue_address"
//            ],
//            [
//                "u16",
//                "port"
//            ],
//            [
//                "u8",
//                "is_ip4"
//            ],
//            [
//                "u8",
//                "ip",
//                16
//            ],
//            {
//                "crc": "0xbd57a498"
//            }
//
type AcceptSession struct {
	ListenerHandle          uint64
	Handle                  uint64
	ServerRxFifo            uint64
	ServerTxFifo            uint64
	VppEventQueueAddress    uint64
	ServerEventQueueAddress uint64
	Port                    uint16
	IsIP4                   uint8
	IP                      []byte `struc:"[16]byte"`
}

func (*AcceptSession) GetMessageName() string {
	return "accept_session"
}
func (*AcceptSession) GetCrcString() string {
	return "bd57a498"
}
func (*AcceptSession) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewAcceptSession() api.Message {
	return &AcceptSession{}
}

// AcceptSessionReply represents the VPP binary API message 'accept_session_reply'.
// Generated from 'session.api.json', line 529:
//
//            "accept_session_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0xd6960a03"
//            }
//
type AcceptSessionReply struct {
	Retval int32
	Handle uint64
}

func (*AcceptSessionReply) GetMessageName() string {
	return "accept_session_reply"
}
func (*AcceptSessionReply) GetCrcString() string {
	return "d6960a03"
}
func (*AcceptSessionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewAcceptSessionReply() api.Message {
	return &AcceptSessionReply{}
}

// DisconnectSession represents the VPP binary API message 'disconnect_session'.
// Generated from 'session.api.json', line 551:
//
//            "disconnect_session",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0x7279205b"
//            }
//
type DisconnectSession struct {
	Handle uint64
}

func (*DisconnectSession) GetMessageName() string {
	return "disconnect_session"
}
func (*DisconnectSession) GetCrcString() string {
	return "7279205b"
}
func (*DisconnectSession) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewDisconnectSession() api.Message {
	return &DisconnectSession{}
}

// DisconnectSessionReply represents the VPP binary API message 'disconnect_session_reply'.
// Generated from 'session.api.json', line 573:
//
//            "disconnect_session_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0xd6960a03"
//            }
//
type DisconnectSessionReply struct {
	Retval int32
	Handle uint64
}

func (*DisconnectSessionReply) GetMessageName() string {
	return "disconnect_session_reply"
}
func (*DisconnectSessionReply) GetCrcString() string {
	return "d6960a03"
}
func (*DisconnectSessionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewDisconnectSessionReply() api.Message {
	return &DisconnectSessionReply{}
}

// ResetSession represents the VPP binary API message 'reset_session'.
// Generated from 'session.api.json', line 595:
//
//            "reset_session",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0x7279205b"
//            }
//
type ResetSession struct {
	Handle uint64
}

func (*ResetSession) GetMessageName() string {
	return "reset_session"
}
func (*ResetSession) GetCrcString() string {
	return "7279205b"
}
func (*ResetSession) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewResetSession() api.Message {
	return &ResetSession{}
}

// ResetSessionReply represents the VPP binary API message 'reset_session_reply'.
// Generated from 'session.api.json', line 617:
//
//            "reset_session_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0xd6960a03"
//            }
//
type ResetSessionReply struct {
	Retval int32
	Handle uint64
}

func (*ResetSessionReply) GetMessageName() string {
	return "reset_session_reply"
}
func (*ResetSessionReply) GetCrcString() string {
	return "d6960a03"
}
func (*ResetSessionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewResetSessionReply() api.Message {
	return &ResetSessionReply{}
}

// BindSock represents the VPP binary API message 'bind_sock'.
// Generated from 'session.api.json', line 639:
//
//            "bind_sock",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "wrk_index"
//            ],
//            [
//                "u32",
//                "vrf"
//            ],
//            [
//                "u8",
//                "is_ip4"
//            ],
//            [
//                "u8",
//                "ip",
//                16
//            ],
//            [
//                "u16",
//                "port"
//            ],
//            [
//                "u8",
//                "proto"
//            ],
//            [
//                "u64",
//                "options",
//                16
//            ],
//            {
//                "crc": "0x0394633f"
//            }
//
type BindSock struct {
	WrkIndex uint32
	Vrf      uint32
	IsIP4    uint8
	IP       []byte `struc:"[16]byte"`
	Port     uint16
	Proto    uint8
	Options  []uint64 `struc:"[16]uint64"`
}

func (*BindSock) GetMessageName() string {
	return "bind_sock"
}
func (*BindSock) GetCrcString() string {
	return "0394633f"
}
func (*BindSock) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewBindSock() api.Message {
	return &BindSock{}
}

// UnbindSock represents the VPP binary API message 'unbind_sock'.
// Generated from 'session.api.json', line 687:
//
//            "unbind_sock",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "wrk_index"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0x08880908"
//            }
//
type UnbindSock struct {
	WrkIndex uint32
	Handle   uint64
}

func (*UnbindSock) GetMessageName() string {
	return "unbind_sock"
}
func (*UnbindSock) GetCrcString() string {
	return "08880908"
}
func (*UnbindSock) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewUnbindSock() api.Message {
	return &UnbindSock{}
}

// UnbindSockReply represents the VPP binary API message 'unbind_sock_reply'.
// Generated from 'session.api.json', line 713:
//
//            "unbind_sock_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type UnbindSockReply struct {
	Retval int32
}

func (*UnbindSockReply) GetMessageName() string {
	return "unbind_sock_reply"
}
func (*UnbindSockReply) GetCrcString() string {
	return "e8d4e804"
}
func (*UnbindSockReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewUnbindSockReply() api.Message {
	return &UnbindSockReply{}
}

// ConnectSock represents the VPP binary API message 'connect_sock'.
// Generated from 'session.api.json', line 731:
//
//            "connect_sock",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "wrk_index"
//            ],
//            [
//                "u64",
//                "client_queue_address"
//            ],
//            [
//                "u64",
//                "options",
//                16
//            ],
//            [
//                "u32",
//                "vrf"
//            ],
//            [
//                "u8",
//                "is_ip4"
//            ],
//            [
//                "u8",
//                "ip",
//                16
//            ],
//            [
//                "u16",
//                "port"
//            ],
//            [
//                "u8",
//                "proto"
//            ],
//            [
//                "u8",
//                "hostname_len"
//            ],
//            [
//                "u8",
//                "hostname",
//                0,
//                "hostname_len"
//            ],
//            {
//                "crc": "0xa916aa77"
//            }
//
type ConnectSock struct {
	WrkIndex           uint32
	ClientQueueAddress uint64
	Options            []uint64 `struc:"[16]uint64"`
	Vrf                uint32
	IsIP4              uint8
	IP                 []byte `struc:"[16]byte"`
	Port               uint16
	Proto              uint8
	HostnameLen        uint8 `struc:"sizeof=Hostname"`
	Hostname           []byte
}

func (*ConnectSock) GetMessageName() string {
	return "connect_sock"
}
func (*ConnectSock) GetCrcString() string {
	return "a916aa77"
}
func (*ConnectSock) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewConnectSock() api.Message {
	return &ConnectSock{}
}

// ConnectSockReply represents the VPP binary API message 'connect_sock_reply'.
// Generated from 'session.api.json', line 793:
//
//            "connect_sock_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type ConnectSockReply struct {
	Retval int32
}

func (*ConnectSockReply) GetMessageName() string {
	return "connect_sock_reply"
}
func (*ConnectSockReply) GetCrcString() string {
	return "e8d4e804"
}
func (*ConnectSockReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewConnectSockReply() api.Message {
	return &ConnectSockReply{}
}

// BindSockReply represents the VPP binary API message 'bind_sock_reply'.
// Generated from 'session.api.json', line 811:
//
//            "bind_sock_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u8",
//                "lcl_is_ip4"
//            ],
//            [
//                "u8",
//                "lcl_ip",
//                16
//            ],
//            [
//                "u16",
//                "lcl_port"
//            ],
//            [
//                "u64",
//                "rx_fifo"
//            ],
//            [
//                "u64",
//                "tx_fifo"
//            ],
//            [
//                "u64",
//                "vpp_evt_q"
//            ],
//            [
//                "u32",
//                "segment_size"
//            ],
//            [
//                "u8",
//                "segment_name_length"
//            ],
//            [
//                "u8",
//                "segment_name",
//                128
//            ],
//            {
//                "crc": "0x5ca8f50a"
//            }
//
type BindSockReply struct {
	Handle            uint64
	Retval            int32
	LclIsIP4          uint8
	LclIP             []byte `struc:"[16]byte"`
	LclPort           uint16
	RxFifo            uint64
	TxFifo            uint64
	VppEvtQ           uint64
	SegmentSize       uint32
	SegmentNameLength uint8
	SegmentName       []byte `struc:"[128]byte"`
}

func (*BindSockReply) GetMessageName() string {
	return "bind_sock_reply"
}
func (*BindSockReply) GetCrcString() string {
	return "5ca8f50a"
}
func (*BindSockReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewBindSockReply() api.Message {
	return &BindSockReply{}
}

// ConnectSession represents the VPP binary API message 'connect_session'.
// Generated from 'session.api.json', line 871:
//
//            "connect_session",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type ConnectSession struct{}

func (*ConnectSession) GetMessageName() string {
	return "connect_session"
}
func (*ConnectSession) GetCrcString() string {
	return "51077d14"
}
func (*ConnectSession) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewConnectSession() api.Message {
	return &ConnectSession{}
}

// ConnectSessionReply represents the VPP binary API message 'connect_session_reply'.
// Generated from 'session.api.json', line 889:
//
//            "connect_session_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            [
//                "u64",
//                "server_rx_fifo"
//            ],
//            [
//                "u64",
//                "server_tx_fifo"
//            ],
//            [
//                "u64",
//                "vpp_event_queue_address"
//            ],
//            [
//                "u64",
//                "client_event_queue_address"
//            ],
//            [
//                "u32",
//                "segment_size"
//            ],
//            [
//                "u8",
//                "segment_name_length"
//            ],
//            [
//                "u8",
//                "segment_name",
//                128
//            ],
//            [
//                "u8",
//                "lcl_ip",
//                16
//            ],
//            [
//                "u8",
//                "is_ip4"
//            ],
//            [
//                "u16",
//                "lcl_port"
//            ],
//            {
//                "crc": "0xfad9041d"
//            }
//
type ConnectSessionReply struct {
	Retval                  int32
	Handle                  uint64
	ServerRxFifo            uint64
	ServerTxFifo            uint64
	VppEventQueueAddress    uint64
	ClientEventQueueAddress uint64
	SegmentSize             uint32
	SegmentNameLength       uint8
	SegmentName             []byte `struc:"[128]byte"`
	LclIP                   []byte `struc:"[16]byte"`
	IsIP4                   uint8
	LclPort                 uint16
}

func (*ConnectSessionReply) GetMessageName() string {
	return "connect_session_reply"
}
func (*ConnectSessionReply) GetCrcString() string {
	return "fad9041d"
}
func (*ConnectSessionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewConnectSessionReply() api.Message {
	return &ConnectSessionReply{}
}

// AppCutThroughRegistrationAdd represents the VPP binary API message 'app_cut_through_registration_add'.
// Generated from 'session.api.json', line 953:
//
//            "app_cut_through_registration_add",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "evt_q_address"
//            ],
//            [
//                "u64",
//                "peer_evt_q_address"
//            ],
//            [
//                "u32",
//                "wrk_index"
//            ],
//            [
//                "u8",
//                "n_fds"
//            ],
//            [
//                "u8",
//                "fd_flags"
//            ],
//            {
//                "crc": "0x6d73b1b9"
//            }
//
type AppCutThroughRegistrationAdd struct {
	EvtQAddress     uint64
	PeerEvtQAddress uint64
	WrkIndex        uint32
	NFds            uint8
	FdFlags         uint8
}

func (*AppCutThroughRegistrationAdd) GetMessageName() string {
	return "app_cut_through_registration_add"
}
func (*AppCutThroughRegistrationAdd) GetCrcString() string {
	return "6d73b1b9"
}
func (*AppCutThroughRegistrationAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewAppCutThroughRegistrationAdd() api.Message {
	return &AppCutThroughRegistrationAdd{}
}

// AppCutThroughRegistrationAddReply represents the VPP binary API message 'app_cut_through_registration_add_reply'.
// Generated from 'session.api.json', line 991:
//
//            "app_cut_through_registration_add_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type AppCutThroughRegistrationAddReply struct {
	Retval int32
}

func (*AppCutThroughRegistrationAddReply) GetMessageName() string {
	return "app_cut_through_registration_add_reply"
}
func (*AppCutThroughRegistrationAddReply) GetCrcString() string {
	return "e8d4e804"
}
func (*AppCutThroughRegistrationAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewAppCutThroughRegistrationAddReply() api.Message {
	return &AppCutThroughRegistrationAddReply{}
}

// AppWorkerAddDel represents the VPP binary API message 'app_worker_add_del'.
// Generated from 'session.api.json', line 1009:
//
//            "app_worker_add_del",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "app_api_index"
//            ],
//            [
//                "u32",
//                "wrk_index"
//            ],
//            [
//                "u8",
//                "is_add"
//            ],
//            {
//                "crc": "0x8cd304f4"
//            }
//
type AppWorkerAddDel struct {
	AppAPIIndex uint32
	WrkIndex    uint32
	IsAdd       uint8
}

func (*AppWorkerAddDel) GetMessageName() string {
	return "app_worker_add_del"
}
func (*AppWorkerAddDel) GetCrcString() string {
	return "8cd304f4"
}
func (*AppWorkerAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewAppWorkerAddDel() api.Message {
	return &AppWorkerAddDel{}
}

// AppWorkerAddDelReply represents the VPP binary API message 'app_worker_add_del_reply'.
// Generated from 'session.api.json', line 1039:
//
//            "app_worker_add_del_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u32",
//                "wrk_index"
//            ],
//            [
//                "u64",
//                "app_event_queue_address"
//            ],
//            [
//                "u8",
//                "n_fds"
//            ],
//            [
//                "u8",
//                "fd_flags"
//            ],
//            [
//                "u8",
//                "segment_name_length"
//            ],
//            [
//                "u8",
//                "segment_name",
//                128
//            ],
//            [
//                "u8",
//                "is_add"
//            ],
//            {
//                "crc": "0xd5297212"
//            }
//
type AppWorkerAddDelReply struct {
	Retval               int32
	WrkIndex             uint32
	AppEventQueueAddress uint64
	NFds                 uint8
	FdFlags              uint8
	SegmentNameLength    uint8
	SegmentName          []byte `struc:"[128]byte"`
	IsAdd                uint8
}

func (*AppWorkerAddDelReply) GetMessageName() string {
	return "app_worker_add_del_reply"
}
func (*AppWorkerAddDelReply) GetCrcString() string {
	return "d5297212"
}
func (*AppWorkerAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewAppWorkerAddDelReply() api.Message {
	return &AppWorkerAddDelReply{}
}

// SessionEnableDisable represents the VPP binary API message 'session_enable_disable'.
// Generated from 'session.api.json', line 1086:
//
//            "session_enable_disable",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "is_enable"
//            ],
//            {
//                "crc": "0x30ac9be7"
//            }
//
type SessionEnableDisable struct {
	IsEnable uint8
}

func (*SessionEnableDisable) GetMessageName() string {
	return "session_enable_disable"
}
func (*SessionEnableDisable) GetCrcString() string {
	return "30ac9be7"
}
func (*SessionEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewSessionEnableDisable() api.Message {
	return &SessionEnableDisable{}
}

// SessionEnableDisableReply represents the VPP binary API message 'session_enable_disable_reply'.
// Generated from 'session.api.json', line 1108:
//
//            "session_enable_disable_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type SessionEnableDisableReply struct {
	Retval int32
}

func (*SessionEnableDisableReply) GetMessageName() string {
	return "session_enable_disable_reply"
}
func (*SessionEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SessionEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewSessionEnableDisableReply() api.Message {
	return &SessionEnableDisableReply{}
}

// AppNamespaceAddDel represents the VPP binary API message 'app_namespace_add_del'.
// Generated from 'session.api.json', line 1126:
//
//            "app_namespace_add_del",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "secret"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u32",
//                "ip4_fib_id"
//            ],
//            [
//                "u32",
//                "ip6_fib_id"
//            ],
//            [
//                "u8",
//                "namespace_id_len"
//            ],
//            [
//                "u8",
//                "namespace_id",
//                64
//            ],
//            {
//                "crc": "0xdd074c65"
//            }
//
type AppNamespaceAddDel struct {
	Secret         uint64
	SwIfIndex      uint32
	IP4FibID       uint32
	IP6FibID       uint32
	NamespaceIDLen uint8
	NamespaceID    []byte `struc:"[64]byte"`
}

func (*AppNamespaceAddDel) GetMessageName() string {
	return "app_namespace_add_del"
}
func (*AppNamespaceAddDel) GetCrcString() string {
	return "dd074c65"
}
func (*AppNamespaceAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewAppNamespaceAddDel() api.Message {
	return &AppNamespaceAddDel{}
}

// AppNamespaceAddDelReply represents the VPP binary API message 'app_namespace_add_del_reply'.
// Generated from 'session.api.json', line 1169:
//
//            "app_namespace_add_del_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u32",
//                "appns_index"
//            ],
//            {
//                "crc": "0x85137120"
//            }
//
type AppNamespaceAddDelReply struct {
	Retval     int32
	AppnsIndex uint32
}

func (*AppNamespaceAddDelReply) GetMessageName() string {
	return "app_namespace_add_del_reply"
}
func (*AppNamespaceAddDelReply) GetCrcString() string {
	return "85137120"
}
func (*AppNamespaceAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewAppNamespaceAddDelReply() api.Message {
	return &AppNamespaceAddDelReply{}
}

// SessionRuleAddDel represents the VPP binary API message 'session_rule_add_del'.
// Generated from 'session.api.json', line 1191:
//
//            "session_rule_add_del",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "transport_proto"
//            ],
//            [
//                "u8",
//                "is_ip4"
//            ],
//            [
//                "u8",
//                "lcl_ip",
//                16
//            ],
//            [
//                "u8",
//                "lcl_plen"
//            ],
//            [
//                "u8",
//                "rmt_ip",
//                16
//            ],
//            [
//                "u8",
//                "rmt_plen"
//            ],
//            [
//                "u16",
//                "lcl_port"
//            ],
//            [
//                "u16",
//                "rmt_port"
//            ],
//            [
//                "u32",
//                "action_index"
//            ],
//            [
//                "u8",
//                "is_add"
//            ],
//            [
//                "u32",
//                "appns_index"
//            ],
//            [
//                "u8",
//                "scope"
//            ],
//            [
//                "u8",
//                "tag",
//                64
//            ],
//            {
//                "crc": "0x4ab2eb06"
//            }
//
type SessionRuleAddDel struct {
	TransportProto uint8
	IsIP4          uint8
	LclIP          []byte `struc:"[16]byte"`
	LclPlen        uint8
	RmtIP          []byte `struc:"[16]byte"`
	RmtPlen        uint8
	LclPort        uint16
	RmtPort        uint16
	ActionIndex    uint32
	IsAdd          uint8
	AppnsIndex     uint32
	Scope          uint8
	Tag            []byte `struc:"[64]byte"`
}

func (*SessionRuleAddDel) GetMessageName() string {
	return "session_rule_add_del"
}
func (*SessionRuleAddDel) GetCrcString() string {
	return "4ab2eb06"
}
func (*SessionRuleAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewSessionRuleAddDel() api.Message {
	return &SessionRuleAddDel{}
}

// SessionRuleAddDelReply represents the VPP binary API message 'session_rule_add_del_reply'.
// Generated from 'session.api.json', line 1264:
//
//            "session_rule_add_del_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type SessionRuleAddDelReply struct {
	Retval int32
}

func (*SessionRuleAddDelReply) GetMessageName() string {
	return "session_rule_add_del_reply"
}
func (*SessionRuleAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SessionRuleAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewSessionRuleAddDelReply() api.Message {
	return &SessionRuleAddDelReply{}
}

// SessionRulesDump represents the VPP binary API message 'session_rules_dump'.
// Generated from 'session.api.json', line 1282:
//
//            "session_rules_dump",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type SessionRulesDump struct{}

func (*SessionRulesDump) GetMessageName() string {
	return "session_rules_dump"
}
func (*SessionRulesDump) GetCrcString() string {
	return "51077d14"
}
func (*SessionRulesDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewSessionRulesDump() api.Message {
	return &SessionRulesDump{}
}

// SessionRulesDetails represents the VPP binary API message 'session_rules_details'.
// Generated from 'session.api.json', line 1300:
//
//            "session_rules_details",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "transport_proto"
//            ],
//            [
//                "u8",
//                "is_ip4"
//            ],
//            [
//                "u8",
//                "lcl_ip",
//                16
//            ],
//            [
//                "u8",
//                "lcl_plen"
//            ],
//            [
//                "u8",
//                "rmt_ip",
//                16
//            ],
//            [
//                "u8",
//                "rmt_plen"
//            ],
//            [
//                "u16",
//                "lcl_port"
//            ],
//            [
//                "u16",
//                "rmt_port"
//            ],
//            [
//                "u32",
//                "action_index"
//            ],
//            [
//                "u32",
//                "appns_index"
//            ],
//            [
//                "u8",
//                "scope"
//            ],
//            [
//                "u8",
//                "tag",
//                64
//            ],
//            {
//                "crc": "0xa52b0e96"
//            }
//
type SessionRulesDetails struct {
	TransportProto uint8
	IsIP4          uint8
	LclIP          []byte `struc:"[16]byte"`
	LclPlen        uint8
	RmtIP          []byte `struc:"[16]byte"`
	RmtPlen        uint8
	LclPort        uint16
	RmtPort        uint16
	ActionIndex    uint32
	AppnsIndex     uint32
	Scope          uint8
	Tag            []byte `struc:"[64]byte"`
}

func (*SessionRulesDetails) GetMessageName() string {
	return "session_rules_details"
}
func (*SessionRulesDetails) GetCrcString() string {
	return "a52b0e96"
}
func (*SessionRulesDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewSessionRulesDetails() api.Message {
	return &SessionRulesDetails{}
}

/* Services */

type Services interface {
	DumpSessionRules(*SessionRulesDump) (*SessionRulesDetails, error)
	AcceptSession(*AcceptSession) (*AcceptSessionReply, error)
	AppCutThroughRegistrationAdd(*AppCutThroughRegistrationAdd) (*AppCutThroughRegistrationAddReply, error)
	AppNamespaceAddDel(*AppNamespaceAddDel) (*AppNamespaceAddDelReply, error)
	AppWorkerAddDel(*AppWorkerAddDel) (*AppWorkerAddDelReply, error)
	ApplicationAttach(*ApplicationAttach) (*ApplicationAttachReply, error)
	ApplicationDetach(*ApplicationDetach) (*ApplicationDetachReply, error)
	ApplicationTLSCertAdd(*ApplicationTLSCertAdd) (*ApplicationTLSCertAddReply, error)
	ApplicationTLSKeyAdd(*ApplicationTLSKeyAdd) (*ApplicationTLSKeyAddReply, error)
	BindSock(*BindSock) (*BindSockReply, error)
	BindURI(*BindURI) (*BindURIReply, error)
	ConnectSession(*ConnectSession) (*ConnectSessionReply, error)
	ConnectSock(*ConnectSock) (*ConnectSockReply, error)
	ConnectURI(*ConnectURI) (*ConnectURIReply, error)
	DisconnectSession(*DisconnectSession) (*DisconnectSessionReply, error)
	MapAnotherSegment(*MapAnotherSegment) (*MapAnotherSegmentReply, error)
	ResetSession(*ResetSession) (*ResetSessionReply, error)
	SessionEnableDisable(*SessionEnableDisable) (*SessionEnableDisableReply, error)
	SessionRuleAddDel(*SessionRuleAddDel) (*SessionRuleAddDelReply, error)
	UnbindSock(*UnbindSock) (*UnbindSockReply, error)
	UnbindURI(*UnbindURI) (*UnbindURIReply, error)
	UnmapSegment(*UnmapSegment) (*UnmapSegmentReply, error)
}

func init() {
	api.RegisterMessage((*ApplicationAttach)(nil), "session.ApplicationAttach")
	api.RegisterMessage((*ApplicationAttachReply)(nil), "session.ApplicationAttachReply")
	api.RegisterMessage((*ApplicationTLSCertAdd)(nil), "session.ApplicationTLSCertAdd")
	api.RegisterMessage((*ApplicationTLSCertAddReply)(nil), "session.ApplicationTLSCertAddReply")
	api.RegisterMessage((*ApplicationTLSKeyAdd)(nil), "session.ApplicationTLSKeyAdd")
	api.RegisterMessage((*ApplicationTLSKeyAddReply)(nil), "session.ApplicationTLSKeyAddReply")
	api.RegisterMessage((*ApplicationDetach)(nil), "session.ApplicationDetach")
	api.RegisterMessage((*ApplicationDetachReply)(nil), "session.ApplicationDetachReply")
	api.RegisterMessage((*MapAnotherSegment)(nil), "session.MapAnotherSegment")
	api.RegisterMessage((*MapAnotherSegmentReply)(nil), "session.MapAnotherSegmentReply")
	api.RegisterMessage((*UnmapSegment)(nil), "session.UnmapSegment")
	api.RegisterMessage((*UnmapSegmentReply)(nil), "session.UnmapSegmentReply")
	api.RegisterMessage((*BindURI)(nil), "session.BindURI")
	api.RegisterMessage((*BindURIReply)(nil), "session.BindURIReply")
	api.RegisterMessage((*UnbindURI)(nil), "session.UnbindURI")
	api.RegisterMessage((*UnbindURIReply)(nil), "session.UnbindURIReply")
	api.RegisterMessage((*ConnectURI)(nil), "session.ConnectURI")
	api.RegisterMessage((*ConnectURIReply)(nil), "session.ConnectURIReply")
	api.RegisterMessage((*AcceptSession)(nil), "session.AcceptSession")
	api.RegisterMessage((*AcceptSessionReply)(nil), "session.AcceptSessionReply")
	api.RegisterMessage((*DisconnectSession)(nil), "session.DisconnectSession")
	api.RegisterMessage((*DisconnectSessionReply)(nil), "session.DisconnectSessionReply")
	api.RegisterMessage((*ResetSession)(nil), "session.ResetSession")
	api.RegisterMessage((*ResetSessionReply)(nil), "session.ResetSessionReply")
	api.RegisterMessage((*BindSock)(nil), "session.BindSock")
	api.RegisterMessage((*UnbindSock)(nil), "session.UnbindSock")
	api.RegisterMessage((*UnbindSockReply)(nil), "session.UnbindSockReply")
	api.RegisterMessage((*ConnectSock)(nil), "session.ConnectSock")
	api.RegisterMessage((*ConnectSockReply)(nil), "session.ConnectSockReply")
	api.RegisterMessage((*BindSockReply)(nil), "session.BindSockReply")
	api.RegisterMessage((*ConnectSession)(nil), "session.ConnectSession")
	api.RegisterMessage((*ConnectSessionReply)(nil), "session.ConnectSessionReply")
	api.RegisterMessage((*AppCutThroughRegistrationAdd)(nil), "session.AppCutThroughRegistrationAdd")
	api.RegisterMessage((*AppCutThroughRegistrationAddReply)(nil), "session.AppCutThroughRegistrationAddReply")
	api.RegisterMessage((*AppWorkerAddDel)(nil), "session.AppWorkerAddDel")
	api.RegisterMessage((*AppWorkerAddDelReply)(nil), "session.AppWorkerAddDelReply")
	api.RegisterMessage((*SessionEnableDisable)(nil), "session.SessionEnableDisable")
	api.RegisterMessage((*SessionEnableDisableReply)(nil), "session.SessionEnableDisableReply")
	api.RegisterMessage((*AppNamespaceAddDel)(nil), "session.AppNamespaceAddDel")
	api.RegisterMessage((*AppNamespaceAddDelReply)(nil), "session.AppNamespaceAddDelReply")
	api.RegisterMessage((*SessionRuleAddDel)(nil), "session.SessionRuleAddDel")
	api.RegisterMessage((*SessionRuleAddDelReply)(nil), "session.SessionRuleAddDelReply")
	api.RegisterMessage((*SessionRulesDump)(nil), "session.SessionRulesDump")
	api.RegisterMessage((*SessionRulesDetails)(nil), "session.SessionRulesDetails")
}
