// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package sr

import "reflect"

var Types = map[string]reflect.Type{
	"SrIP6Address": reflect.TypeOf((*SrIP6Address)(nil)).Elem(),
	"SrLocalsidAddDel": reflect.TypeOf((*SrLocalsidAddDel)(nil)).Elem(),
	"SrLocalsidAddDelReply": reflect.TypeOf((*SrLocalsidAddDelReply)(nil)).Elem(),
	"SrLocalsidsDetails": reflect.TypeOf((*SrLocalsidsDetails)(nil)).Elem(),
	"SrLocalsidsDump": reflect.TypeOf((*SrLocalsidsDump)(nil)).Elem(),
	"SrPolicyAdd": reflect.TypeOf((*SrPolicyAdd)(nil)).Elem(),
	"SrPolicyAddReply": reflect.TypeOf((*SrPolicyAddReply)(nil)).Elem(),
	"SrPolicyDel": reflect.TypeOf((*SrPolicyDel)(nil)).Elem(),
	"SrPolicyDelReply": reflect.TypeOf((*SrPolicyDelReply)(nil)).Elem(),
	"SrPolicyMod": reflect.TypeOf((*SrPolicyMod)(nil)).Elem(),
	"SrPolicyModReply": reflect.TypeOf((*SrPolicyModReply)(nil)).Elem(),
	"SrSetEncapSource": reflect.TypeOf((*SrSetEncapSource)(nil)).Elem(),
	"SrSetEncapSourceReply": reflect.TypeOf((*SrSetEncapSourceReply)(nil)).Elem(),
	"SrSteeringAddDel": reflect.TypeOf((*SrSteeringAddDel)(nil)).Elem(),
	"SrSteeringAddDelReply": reflect.TypeOf((*SrSteeringAddDelReply)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"NewSrLocalsidAddDel": reflect.ValueOf(NewSrLocalsidAddDel),
	"NewSrLocalsidAddDelReply": reflect.ValueOf(NewSrLocalsidAddDelReply),
	"NewSrLocalsidsDetails": reflect.ValueOf(NewSrLocalsidsDetails),
	"NewSrLocalsidsDump": reflect.ValueOf(NewSrLocalsidsDump),
	"NewSrPolicyAdd": reflect.ValueOf(NewSrPolicyAdd),
	"NewSrPolicyAddReply": reflect.ValueOf(NewSrPolicyAddReply),
	"NewSrPolicyDel": reflect.ValueOf(NewSrPolicyDel),
	"NewSrPolicyDelReply": reflect.ValueOf(NewSrPolicyDelReply),
	"NewSrPolicyMod": reflect.ValueOf(NewSrPolicyMod),
	"NewSrPolicyModReply": reflect.ValueOf(NewSrPolicyModReply),
	"NewSrSetEncapSource": reflect.ValueOf(NewSrSetEncapSource),
	"NewSrSetEncapSourceReply": reflect.ValueOf(NewSrSetEncapSourceReply),
	"NewSrSteeringAddDel": reflect.ValueOf(NewSrSteeringAddDel),
	"NewSrSteeringAddDelReply": reflect.ValueOf(NewSrSteeringAddDelReply),
}

var Variables = map[string]reflect.Value{
}

var Consts = map[string]reflect.Value{
}

