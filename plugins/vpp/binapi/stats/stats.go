// Code generated by govpp binapi-generator DO NOT EDIT.
// Package stats represents the VPP binary API of the 'stats' VPP module.
// Generated from '/usr/share/vpp/api/stats.api.json'
package stats

import "git.fd.io/govpp.git/api"

// VlibCounter represents the VPP binary API data type 'vlib_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1004:
//
//            "vlib_counter",
//            [
//                "u64",
//                "packets"
//            ],
//            [
//                "u64",
//                "bytes"
//            ],
//            {
//                "crc": "0xce2325a2"
//            }
//
type VlibCounter struct {
	Packets uint64
	Bytes   uint64
}

func (*VlibCounter) GetTypeName() string {
	return "vlib_counter"
}
func (*VlibCounter) GetCrcString() string {
	return "ce2325a2"
}

// VnetCombinedCounter represents the VPP binary API data type 'vnet_combined_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1018:
//
//            "vnet_combined_counter",
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u64",
//                "rx_packets"
//            ],
//            [
//                "u64",
//                "rx_bytes"
//            ],
//            [
//                "u64",
//                "rx_unicast_packets"
//            ],
//            [
//                "u64",
//                "rx_unicast_bytes"
//            ],
//            [
//                "u64",
//                "rx_multicast_packets"
//            ],
//            [
//                "u64",
//                "rx_multicast_bytes"
//            ],
//            [
//                "u64",
//                "rx_broadcast_packets"
//            ],
//            [
//                "u64",
//                "rx_broadcast_bytes"
//            ],
//            [
//                "u64",
//                "tx_packets"
//            ],
//            [
//                "u64",
//                "tx_bytes"
//            ],
//            [
//                "u64",
//                "tx_unicast_packets"
//            ],
//            [
//                "u64",
//                "tx_unicast_bytes"
//            ],
//            [
//                "u64",
//                "tx_multicast_packets"
//            ],
//            [
//                "u64",
//                "tx_multicast_bytes"
//            ],
//            [
//                "u64",
//                "tx_broadcast_packets"
//            ],
//            [
//                "u64",
//                "tx_broadcast_bytes"
//            ],
//            {
//                "crc": "0x20905ca4"
//            }
//
type VnetCombinedCounter struct {
	SwIfIndex          uint32
	RxPackets          uint64
	RxBytes            uint64
	RxUnicastPackets   uint64
	RxUnicastBytes     uint64
	RxMulticastPackets uint64
	RxMulticastBytes   uint64
	RxBroadcastPackets uint64
	RxBroadcastBytes   uint64
	TxPackets          uint64
	TxBytes            uint64
	TxUnicastPackets   uint64
	TxUnicastBytes     uint64
	TxMulticastPackets uint64
	TxMulticastBytes   uint64
	TxBroadcastPackets uint64
	TxBroadcastBytes   uint64
}

func (*VnetCombinedCounter) GetTypeName() string {
	return "vnet_combined_counter"
}
func (*VnetCombinedCounter) GetCrcString() string {
	return "20905ca4"
}

// VnetSimpleCounter represents the VPP binary API data type 'vnet_simple_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1092:
//
//            "vnet_simple_counter",
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u64",
//                "drop"
//            ],
//            [
//                "u64",
//                "punt"
//            ],
//            [
//                "u64",
//                "rx_ip4"
//            ],
//            [
//                "u64",
//                "rx_ip6"
//            ],
//            [
//                "u64",
//                "rx_no_buffer"
//            ],
//            [
//                "u64",
//                "rx_miss"
//            ],
//            [
//                "u64",
//                "rx_error"
//            ],
//            [
//                "u64",
//                "tx_error"
//            ],
//            [
//                "u64",
//                "rx_mpls"
//            ],
//            {
//                "crc": "0x8bd65e2d"
//            }
//
type VnetSimpleCounter struct {
	SwIfIndex  uint32
	Drop       uint64
	Punt       uint64
	RxIP4      uint64
	RxIP6      uint64
	RxNoBuffer uint64
	RxMiss     uint64
	RxError    uint64
	TxError    uint64
	RxMpls     uint64
}

func (*VnetSimpleCounter) GetTypeName() string {
	return "vnet_simple_counter"
}
func (*VnetSimpleCounter) GetCrcString() string {
	return "8bd65e2d"
}

// IP4FibCounter represents the VPP binary API data type 'ip4_fib_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1138:
//
//            "ip4_fib_counter",
//            [
//                "u32",
//                "address"
//            ],
//            [
//                "u8",
//                "address_length"
//            ],
//            [
//                "u64",
//                "packets"
//            ],
//            [
//                "u64",
//                "bytes"
//            ],
//            {
//                "crc": "0xa6ceb0c9"
//            }
//
type IP4FibCounter struct {
	Address       uint32
	AddressLength uint8
	Packets       uint64
	Bytes         uint64
}

func (*IP4FibCounter) GetTypeName() string {
	return "ip4_fib_counter"
}
func (*IP4FibCounter) GetCrcString() string {
	return "a6ceb0c9"
}

// IP4MfibCounter represents the VPP binary API data type 'ip4_mfib_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1160:
//
//            "ip4_mfib_counter",
//            [
//                "u8",
//                "source",
//                4
//            ],
//            [
//                "u8",
//                "group",
//                4
//            ],
//            [
//                "u8",
//                "group_length"
//            ],
//            [
//                "u64",
//                "packets"
//            ],
//            [
//                "u64",
//                "bytes"
//            ],
//            {
//                "crc": "0x2cee4721"
//            }
//
type IP4MfibCounter struct {
	Source      []byte `struc:"[4]byte"`
	Group       []byte `struc:"[4]byte"`
	GroupLength uint8
	Packets     uint64
	Bytes       uint64
}

func (*IP4MfibCounter) GetTypeName() string {
	return "ip4_mfib_counter"
}
func (*IP4MfibCounter) GetCrcString() string {
	return "2cee4721"
}

// IP4NbrCounter represents the VPP binary API data type 'ip4_nbr_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1188:
//
//            "ip4_nbr_counter",
//            [
//                "u32",
//                "address"
//            ],
//            [
//                "u8",
//                "link_type"
//            ],
//            [
//                "u64",
//                "packets"
//            ],
//            [
//                "u64",
//                "bytes"
//            ],
//            {
//                "crc": "0xb9f974d6"
//            }
//
type IP4NbrCounter struct {
	Address  uint32
	LinkType uint8
	Packets  uint64
	Bytes    uint64
}

func (*IP4NbrCounter) GetTypeName() string {
	return "ip4_nbr_counter"
}
func (*IP4NbrCounter) GetCrcString() string {
	return "b9f974d6"
}

// IP6FibCounter represents the VPP binary API data type 'ip6_fib_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1210:
//
//            "ip6_fib_counter",
//            [
//                "u64",
//                "address",
//                2
//            ],
//            [
//                "u8",
//                "address_length"
//            ],
//            [
//                "u64",
//                "packets"
//            ],
//            [
//                "u64",
//                "bytes"
//            ],
//            {
//                "crc": "0xf1197efb"
//            }
//
type IP6FibCounter struct {
	Address       []uint64 `struc:"[2]uint64"`
	AddressLength uint8
	Packets       uint64
	Bytes         uint64
}

func (*IP6FibCounter) GetTypeName() string {
	return "ip6_fib_counter"
}
func (*IP6FibCounter) GetCrcString() string {
	return "f1197efb"
}

// IP6MfibCounter represents the VPP binary API data type 'ip6_mfib_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1233:
//
//            "ip6_mfib_counter",
//            [
//                "u8",
//                "source",
//                16
//            ],
//            [
//                "u8",
//                "group",
//                16
//            ],
//            [
//                "u8",
//                "group_length"
//            ],
//            [
//                "u64",
//                "packets"
//            ],
//            [
//                "u64",
//                "bytes"
//            ],
//            {
//                "crc": "0x90a9590e"
//            }
//
type IP6MfibCounter struct {
	Source      []byte `struc:"[16]byte"`
	Group       []byte `struc:"[16]byte"`
	GroupLength uint8
	Packets     uint64
	Bytes       uint64
}

func (*IP6MfibCounter) GetTypeName() string {
	return "ip6_mfib_counter"
}
func (*IP6MfibCounter) GetCrcString() string {
	return "90a9590e"
}

// IP6NbrCounter represents the VPP binary API data type 'ip6_nbr_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1261:
//
//            "ip6_nbr_counter",
//            [
//                "u64",
//                "address",
//                2
//            ],
//            [
//                "u8",
//                "link_type"
//            ],
//            [
//                "u64",
//                "packets"
//            ],
//            [
//                "u64",
//                "bytes"
//            ],
//            {
//                "crc": "0x2d755474"
//            }
//
type IP6NbrCounter struct {
	Address  []uint64 `struc:"[2]uint64"`
	LinkType uint8
	Packets  uint64
	Bytes    uint64
}

func (*IP6NbrCounter) GetTypeName() string {
	return "ip6_nbr_counter"
}
func (*IP6NbrCounter) GetCrcString() string {
	return "2d755474"
}

// UDPEncapCounter represents the VPP binary API data type 'udp_encap_counter'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 1284:
//
//            "udp_encap_counter",
//            [
//                "u32",
//                "id"
//            ],
//            [
//                "u64",
//                "packets"
//            ],
//            [
//                "u64",
//                "bytes"
//            ],
//            {
//                "crc": "0x7107035f"
//            }
//
type UDPEncapCounter struct {
	ID      uint32
	Packets uint64
	Bytes   uint64
}

func (*UDPEncapCounter) GetTypeName() string {
	return "udp_encap_counter"
}
func (*UDPEncapCounter) GetCrcString() string {
	return "7107035f"
}

// WantStats represents the VPP binary API message 'want_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 4:
//
//            "want_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantStats) GetMessageName() string {
	return "want_stats"
}
func (*WantStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantStats() api.Message {
	return &WantStats{}
}

// WantStatsReply represents the VPP binary API message 'want_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 30:
//
//            "want_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantStatsReply struct {
	Retval int32
}

func (*WantStatsReply) GetMessageName() string {
	return "want_stats_reply"
}
func (*WantStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantStatsReply() api.Message {
	return &WantStatsReply{}
}

// WantInterfaceSimpleStats represents the VPP binary API message 'want_interface_simple_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 48:
//
//            "want_interface_simple_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantInterfaceSimpleStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantInterfaceSimpleStats) GetMessageName() string {
	return "want_interface_simple_stats"
}
func (*WantInterfaceSimpleStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantInterfaceSimpleStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantInterfaceSimpleStats() api.Message {
	return &WantInterfaceSimpleStats{}
}

// WantInterfaceSimpleStatsReply represents the VPP binary API message 'want_interface_simple_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 74:
//
//            "want_interface_simple_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantInterfaceSimpleStatsReply struct {
	Retval int32
}

func (*WantInterfaceSimpleStatsReply) GetMessageName() string {
	return "want_interface_simple_stats_reply"
}
func (*WantInterfaceSimpleStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantInterfaceSimpleStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantInterfaceSimpleStatsReply() api.Message {
	return &WantInterfaceSimpleStatsReply{}
}

// WantPerInterfaceSimpleStats represents the VPP binary API message 'want_per_interface_simple_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 92:
//
//            "want_per_interface_simple_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            [
//                "u32",
//                "num"
//            ],
//            [
//                "u32",
//                "sw_ifs",
//                0,
//                "num"
//            ],
//            {
//                "crc": "0x729d04f1"
//            }
//
type WantPerInterfaceSimpleStats struct {
	EnableDisable uint32
	Pid           uint32
	Num           uint32 `struc:"sizeof=SwIfs"`
	SwIfs         []uint32
}

func (*WantPerInterfaceSimpleStats) GetMessageName() string {
	return "want_per_interface_simple_stats"
}
func (*WantPerInterfaceSimpleStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantPerInterfaceSimpleStats) GetCrcString() string {
	return "729d04f1"
}
func NewWantPerInterfaceSimpleStats() api.Message {
	return &WantPerInterfaceSimpleStats{}
}

// WantPerInterfaceSimpleStatsReply represents the VPP binary API message 'want_per_interface_simple_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 128:
//
//            "want_per_interface_simple_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantPerInterfaceSimpleStatsReply struct {
	Retval int32
}

func (*WantPerInterfaceSimpleStatsReply) GetMessageName() string {
	return "want_per_interface_simple_stats_reply"
}
func (*WantPerInterfaceSimpleStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantPerInterfaceSimpleStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantPerInterfaceSimpleStatsReply() api.Message {
	return &WantPerInterfaceSimpleStatsReply{}
}

// WantInterfaceCombinedStats represents the VPP binary API message 'want_interface_combined_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 146:
//
//            "want_interface_combined_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantInterfaceCombinedStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantInterfaceCombinedStats) GetMessageName() string {
	return "want_interface_combined_stats"
}
func (*WantInterfaceCombinedStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantInterfaceCombinedStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantInterfaceCombinedStats() api.Message {
	return &WantInterfaceCombinedStats{}
}

// WantInterfaceCombinedStatsReply represents the VPP binary API message 'want_interface_combined_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 172:
//
//            "want_interface_combined_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantInterfaceCombinedStatsReply struct {
	Retval int32
}

func (*WantInterfaceCombinedStatsReply) GetMessageName() string {
	return "want_interface_combined_stats_reply"
}
func (*WantInterfaceCombinedStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantInterfaceCombinedStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantInterfaceCombinedStatsReply() api.Message {
	return &WantInterfaceCombinedStatsReply{}
}

// WantPerInterfaceCombinedStats represents the VPP binary API message 'want_per_interface_combined_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 190:
//
//            "want_per_interface_combined_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            [
//                "u32",
//                "num"
//            ],
//            [
//                "u32",
//                "sw_ifs",
//                0,
//                "num"
//            ],
//            {
//                "crc": "0x729d04f1"
//            }
//
type WantPerInterfaceCombinedStats struct {
	EnableDisable uint32
	Pid           uint32
	Num           uint32 `struc:"sizeof=SwIfs"`
	SwIfs         []uint32
}

func (*WantPerInterfaceCombinedStats) GetMessageName() string {
	return "want_per_interface_combined_stats"
}
func (*WantPerInterfaceCombinedStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantPerInterfaceCombinedStats) GetCrcString() string {
	return "729d04f1"
}
func NewWantPerInterfaceCombinedStats() api.Message {
	return &WantPerInterfaceCombinedStats{}
}

// WantPerInterfaceCombinedStatsReply represents the VPP binary API message 'want_per_interface_combined_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 226:
//
//            "want_per_interface_combined_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantPerInterfaceCombinedStatsReply struct {
	Retval int32
}

func (*WantPerInterfaceCombinedStatsReply) GetMessageName() string {
	return "want_per_interface_combined_stats_reply"
}
func (*WantPerInterfaceCombinedStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantPerInterfaceCombinedStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantPerInterfaceCombinedStatsReply() api.Message {
	return &WantPerInterfaceCombinedStatsReply{}
}

// WantIP4FibStats represents the VPP binary API message 'want_ip4_fib_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 244:
//
//            "want_ip4_fib_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantIP4FibStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantIP4FibStats) GetMessageName() string {
	return "want_ip4_fib_stats"
}
func (*WantIP4FibStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantIP4FibStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantIP4FibStats() api.Message {
	return &WantIP4FibStats{}
}

// WantIP4FibStatsReply represents the VPP binary API message 'want_ip4_fib_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 270:
//
//            "want_ip4_fib_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantIP4FibStatsReply struct {
	Retval int32
}

func (*WantIP4FibStatsReply) GetMessageName() string {
	return "want_ip4_fib_stats_reply"
}
func (*WantIP4FibStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantIP4FibStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantIP4FibStatsReply() api.Message {
	return &WantIP4FibStatsReply{}
}

// WantIP6FibStats represents the VPP binary API message 'want_ip6_fib_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 288:
//
//            "want_ip6_fib_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantIP6FibStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantIP6FibStats) GetMessageName() string {
	return "want_ip6_fib_stats"
}
func (*WantIP6FibStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantIP6FibStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantIP6FibStats() api.Message {
	return &WantIP6FibStats{}
}

// WantIP6FibStatsReply represents the VPP binary API message 'want_ip6_fib_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 314:
//
//            "want_ip6_fib_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantIP6FibStatsReply struct {
	Retval int32
}

func (*WantIP6FibStatsReply) GetMessageName() string {
	return "want_ip6_fib_stats_reply"
}
func (*WantIP6FibStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantIP6FibStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantIP6FibStatsReply() api.Message {
	return &WantIP6FibStatsReply{}
}

// WantIP4MfibStats represents the VPP binary API message 'want_ip4_mfib_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 332:
//
//            "want_ip4_mfib_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantIP4MfibStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantIP4MfibStats) GetMessageName() string {
	return "want_ip4_mfib_stats"
}
func (*WantIP4MfibStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantIP4MfibStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantIP4MfibStats() api.Message {
	return &WantIP4MfibStats{}
}

// WantIP4MfibStatsReply represents the VPP binary API message 'want_ip4_mfib_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 358:
//
//            "want_ip4_mfib_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantIP4MfibStatsReply struct {
	Retval int32
}

func (*WantIP4MfibStatsReply) GetMessageName() string {
	return "want_ip4_mfib_stats_reply"
}
func (*WantIP4MfibStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantIP4MfibStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantIP4MfibStatsReply() api.Message {
	return &WantIP4MfibStatsReply{}
}

// WantIP6MfibStats represents the VPP binary API message 'want_ip6_mfib_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 376:
//
//            "want_ip6_mfib_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantIP6MfibStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantIP6MfibStats) GetMessageName() string {
	return "want_ip6_mfib_stats"
}
func (*WantIP6MfibStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantIP6MfibStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantIP6MfibStats() api.Message {
	return &WantIP6MfibStats{}
}

// WantIP6MfibStatsReply represents the VPP binary API message 'want_ip6_mfib_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 402:
//
//            "want_ip6_mfib_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantIP6MfibStatsReply struct {
	Retval int32
}

func (*WantIP6MfibStatsReply) GetMessageName() string {
	return "want_ip6_mfib_stats_reply"
}
func (*WantIP6MfibStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantIP6MfibStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantIP6MfibStatsReply() api.Message {
	return &WantIP6MfibStatsReply{}
}

// WantIP4NbrStats represents the VPP binary API message 'want_ip4_nbr_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 420:
//
//            "want_ip4_nbr_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantIP4NbrStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantIP4NbrStats) GetMessageName() string {
	return "want_ip4_nbr_stats"
}
func (*WantIP4NbrStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantIP4NbrStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantIP4NbrStats() api.Message {
	return &WantIP4NbrStats{}
}

// WantIP4NbrStatsReply represents the VPP binary API message 'want_ip4_nbr_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 446:
//
//            "want_ip4_nbr_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantIP4NbrStatsReply struct {
	Retval int32
}

func (*WantIP4NbrStatsReply) GetMessageName() string {
	return "want_ip4_nbr_stats_reply"
}
func (*WantIP4NbrStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantIP4NbrStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantIP4NbrStatsReply() api.Message {
	return &WantIP4NbrStatsReply{}
}

// WantIP6NbrStats represents the VPP binary API message 'want_ip6_nbr_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 464:
//
//            "want_ip6_nbr_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable_disable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0x476f5a08"
//            }
//
type WantIP6NbrStats struct {
	EnableDisable uint32
	Pid           uint32
}

func (*WantIP6NbrStats) GetMessageName() string {
	return "want_ip6_nbr_stats"
}
func (*WantIP6NbrStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantIP6NbrStats) GetCrcString() string {
	return "476f5a08"
}
func NewWantIP6NbrStats() api.Message {
	return &WantIP6NbrStats{}
}

// WantIP6NbrStatsReply represents the VPP binary API message 'want_ip6_nbr_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 490:
//
//            "want_ip6_nbr_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantIP6NbrStatsReply struct {
	Retval int32
}

func (*WantIP6NbrStatsReply) GetMessageName() string {
	return "want_ip6_nbr_stats_reply"
}
func (*WantIP6NbrStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantIP6NbrStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantIP6NbrStatsReply() api.Message {
	return &WantIP6NbrStatsReply{}
}

// VnetIP4FibCounters represents the VPP binary API message 'vnet_ip4_fib_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 508:
//
//            "vnet_ip4_fib_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "vrf_id"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "vl_api_ip4_fib_counter_t",
//                "c",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x57e3feec"
//            }
//
type VnetIP4FibCounters struct {
	VrfID uint32
	Count uint32 `struc:"sizeof=C"`
	C     []IP4FibCounter
}

func (*VnetIP4FibCounters) GetMessageName() string {
	return "vnet_ip4_fib_counters"
}
func (*VnetIP4FibCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetIP4FibCounters) GetCrcString() string {
	return "57e3feec"
}
func NewVnetIP4FibCounters() api.Message {
	return &VnetIP4FibCounters{}
}

// VnetIP4MfibCounters represents the VPP binary API message 'vnet_ip4_mfib_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 532:
//
//            "vnet_ip4_mfib_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "vrf_id"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "vl_api_ip4_mfib_counter_t",
//                "c",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x946eb588"
//            }
//
type VnetIP4MfibCounters struct {
	VrfID uint32
	Count uint32 `struc:"sizeof=C"`
	C     []IP4MfibCounter
}

func (*VnetIP4MfibCounters) GetMessageName() string {
	return "vnet_ip4_mfib_counters"
}
func (*VnetIP4MfibCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetIP4MfibCounters) GetCrcString() string {
	return "946eb588"
}
func NewVnetIP4MfibCounters() api.Message {
	return &VnetIP4MfibCounters{}
}

// VnetIP4NbrCounters represents the VPP binary API message 'vnet_ip4_nbr_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 556:
//
//            "vnet_ip4_nbr_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u8",
//                "begin"
//            ],
//            [
//                "vl_api_ip4_nbr_counter_t",
//                "c",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x214c4811"
//            }
//
type VnetIP4NbrCounters struct {
	Count     uint32 `struc:"sizeof=C"`
	SwIfIndex uint32
	Begin     uint8
	C         []IP4NbrCounter
}

func (*VnetIP4NbrCounters) GetMessageName() string {
	return "vnet_ip4_nbr_counters"
}
func (*VnetIP4NbrCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetIP4NbrCounters) GetCrcString() string {
	return "214c4811"
}
func NewVnetIP4NbrCounters() api.Message {
	return &VnetIP4NbrCounters{}
}

// VnetIP6FibCounters represents the VPP binary API message 'vnet_ip6_fib_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 584:
//
//            "vnet_ip6_fib_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "vrf_id"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "vl_api_ip6_fib_counter_t",
//                "c",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x13aed73d"
//            }
//
type VnetIP6FibCounters struct {
	VrfID uint32
	Count uint32 `struc:"sizeof=C"`
	C     []IP6FibCounter
}

func (*VnetIP6FibCounters) GetMessageName() string {
	return "vnet_ip6_fib_counters"
}
func (*VnetIP6FibCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetIP6FibCounters) GetCrcString() string {
	return "13aed73d"
}
func NewVnetIP6FibCounters() api.Message {
	return &VnetIP6FibCounters{}
}

// VnetIP6MfibCounters represents the VPP binary API message 'vnet_ip6_mfib_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 608:
//
//            "vnet_ip6_mfib_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "vrf_id"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "vl_api_ip6_mfib_counter_t",
//                "c",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x65fe1ae3"
//            }
//
type VnetIP6MfibCounters struct {
	VrfID uint32
	Count uint32 `struc:"sizeof=C"`
	C     []IP6MfibCounter
}

func (*VnetIP6MfibCounters) GetMessageName() string {
	return "vnet_ip6_mfib_counters"
}
func (*VnetIP6MfibCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetIP6MfibCounters) GetCrcString() string {
	return "65fe1ae3"
}
func NewVnetIP6MfibCounters() api.Message {
	return &VnetIP6MfibCounters{}
}

// VnetIP6NbrCounters represents the VPP binary API message 'vnet_ip6_nbr_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 632:
//
//            "vnet_ip6_nbr_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u8",
//                "begin"
//            ],
//            [
//                "vl_api_ip6_nbr_counter_t",
//                "c",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x650161c0"
//            }
//
type VnetIP6NbrCounters struct {
	Count     uint32 `struc:"sizeof=C"`
	SwIfIndex uint32
	Begin     uint8
	C         []IP6NbrCounter
}

func (*VnetIP6NbrCounters) GetMessageName() string {
	return "vnet_ip6_nbr_counters"
}
func (*VnetIP6NbrCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetIP6NbrCounters) GetCrcString() string {
	return "650161c0"
}
func NewVnetIP6NbrCounters() api.Message {
	return &VnetIP6NbrCounters{}
}

// VnetInterfaceSimpleCounters represents the VPP binary API message 'vnet_interface_simple_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 660:
//
//            "vnet_interface_simple_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u8",
//                "vnet_counter_type"
//            ],
//            [
//                "u32",
//                "first_sw_if_index"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "u64",
//                "data",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x9bc4a808"
//            }
//
type VnetInterfaceSimpleCounters struct {
	VnetCounterType uint8
	FirstSwIfIndex  uint32
	Count           uint32 `struc:"sizeof=Data"`
	Data            []uint64
}

func (*VnetInterfaceSimpleCounters) GetMessageName() string {
	return "vnet_interface_simple_counters"
}
func (*VnetInterfaceSimpleCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetInterfaceSimpleCounters) GetCrcString() string {
	return "9bc4a808"
}
func NewVnetInterfaceSimpleCounters() api.Message {
	return &VnetInterfaceSimpleCounters{}
}

// VnetInterfaceCombinedCounters represents the VPP binary API message 'vnet_interface_combined_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 688:
//
//            "vnet_interface_combined_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u8",
//                "vnet_counter_type"
//            ],
//            [
//                "u32",
//                "first_sw_if_index"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "vl_api_vlib_counter_t",
//                "data",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x2c595002"
//            }
//
type VnetInterfaceCombinedCounters struct {
	VnetCounterType uint8
	FirstSwIfIndex  uint32
	Count           uint32 `struc:"sizeof=Data"`
	Data            []VlibCounter
}

func (*VnetInterfaceCombinedCounters) GetMessageName() string {
	return "vnet_interface_combined_counters"
}
func (*VnetInterfaceCombinedCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetInterfaceCombinedCounters) GetCrcString() string {
	return "2c595002"
}
func NewVnetInterfaceCombinedCounters() api.Message {
	return &VnetInterfaceCombinedCounters{}
}

// VnetPerInterfaceSimpleCounters represents the VPP binary API message 'vnet_per_interface_simple_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 716:
//
//            "vnet_per_interface_simple_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "u32",
//                "timestamp"
//            ],
//            [
//                "vl_api_vnet_simple_counter_t",
//                "data",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0xd1fba9ba"
//            }
//
type VnetPerInterfaceSimpleCounters struct {
	Count     uint32 `struc:"sizeof=Data"`
	Timestamp uint32
	Data      []VnetSimpleCounter
}

func (*VnetPerInterfaceSimpleCounters) GetMessageName() string {
	return "vnet_per_interface_simple_counters"
}
func (*VnetPerInterfaceSimpleCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetPerInterfaceSimpleCounters) GetCrcString() string {
	return "d1fba9ba"
}
func NewVnetPerInterfaceSimpleCounters() api.Message {
	return &VnetPerInterfaceSimpleCounters{}
}

// VnetPerInterfaceCombinedCounters represents the VPP binary API message 'vnet_per_interface_combined_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 740:
//
//            "vnet_per_interface_combined_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "u32",
//                "timestamp"
//            ],
//            [
//                "vl_api_vnet_combined_counter_t",
//                "data",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0xdc578375"
//            }
//
type VnetPerInterfaceCombinedCounters struct {
	Count     uint32 `struc:"sizeof=Data"`
	Timestamp uint32
	Data      []VnetCombinedCounter
}

func (*VnetPerInterfaceCombinedCounters) GetMessageName() string {
	return "vnet_per_interface_combined_counters"
}
func (*VnetPerInterfaceCombinedCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetPerInterfaceCombinedCounters) GetCrcString() string {
	return "dc578375"
}
func NewVnetPerInterfaceCombinedCounters() api.Message {
	return &VnetPerInterfaceCombinedCounters{}
}

// VnetGetSummaryStats represents the VPP binary API message 'vnet_get_summary_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 764:
//
//            "vnet_get_summary_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type VnetGetSummaryStats struct {
}

func (*VnetGetSummaryStats) GetMessageName() string {
	return "vnet_get_summary_stats"
}
func (*VnetGetSummaryStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*VnetGetSummaryStats) GetCrcString() string {
	return "51077d14"
}
func NewVnetGetSummaryStats() api.Message {
	return &VnetGetSummaryStats{}
}

// VnetGetSummaryStatsReply represents the VPP binary API message 'vnet_get_summary_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 782:
//
//            "vnet_get_summary_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u64",
//                "total_pkts",
//                2
//            ],
//            [
//                "u64",
//                "total_bytes",
//                2
//            ],
//            [
//                "f64",
//                "vector_rate"
//            ],
//            {
//                "crc": "0x32b87c56"
//            }
//
type VnetGetSummaryStatsReply struct {
	Retval     int32
	TotalPkts  []uint64 `struc:"[2]uint64"`
	TotalBytes []uint64 `struc:"[2]uint64"`
	VectorRate float64
}

func (*VnetGetSummaryStatsReply) GetMessageName() string {
	return "vnet_get_summary_stats_reply"
}
func (*VnetGetSummaryStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*VnetGetSummaryStatsReply) GetCrcString() string {
	return "32b87c56"
}
func NewVnetGetSummaryStatsReply() api.Message {
	return &VnetGetSummaryStatsReply{}
}

// StatsGetPollerDelay represents the VPP binary API message 'stats_get_poller_delay'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 814:
//
//            "stats_get_poller_delay",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type StatsGetPollerDelay struct {
}

func (*StatsGetPollerDelay) GetMessageName() string {
	return "stats_get_poller_delay"
}
func (*StatsGetPollerDelay) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*StatsGetPollerDelay) GetCrcString() string {
	return "51077d14"
}
func NewStatsGetPollerDelay() api.Message {
	return &StatsGetPollerDelay{}
}

// StatsGetPollerDelayReply represents the VPP binary API message 'stats_get_poller_delay_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 832:
//
//            "stats_get_poller_delay_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u32",
//                "delay"
//            ],
//            {
//                "crc": "0x8c445a33"
//            }
//
type StatsGetPollerDelayReply struct {
	Retval int32
	Delay  uint32
}

func (*StatsGetPollerDelayReply) GetMessageName() string {
	return "stats_get_poller_delay_reply"
}
func (*StatsGetPollerDelayReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*StatsGetPollerDelayReply) GetCrcString() string {
	return "8c445a33"
}
func NewStatsGetPollerDelayReply() api.Message {
	return &StatsGetPollerDelayReply{}
}

// WantUDPEncapStats represents the VPP binary API message 'want_udp_encap_stats'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 854:
//
//            "want_udp_encap_stats",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0xcfaccc1f"
//            }
//
type WantUDPEncapStats struct {
	Enable uint32
	Pid    uint32
}

func (*WantUDPEncapStats) GetMessageName() string {
	return "want_udp_encap_stats"
}
func (*WantUDPEncapStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func (*WantUDPEncapStats) GetCrcString() string {
	return "cfaccc1f"
}
func NewWantUDPEncapStats() api.Message {
	return &WantUDPEncapStats{}
}

// WantUDPEncapStatsReply represents the VPP binary API message 'want_udp_encap_stats_reply'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 880:
//
//            "want_udp_encap_stats_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantUDPEncapStatsReply struct {
	Retval int32
}

func (*WantUDPEncapStatsReply) GetMessageName() string {
	return "want_udp_encap_stats_reply"
}
func (*WantUDPEncapStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func (*WantUDPEncapStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func NewWantUDPEncapStatsReply() api.Message {
	return &WantUDPEncapStatsReply{}
}

// VnetUDPEncapCounters represents the VPP binary API message 'vnet_udp_encap_counters'.
// Generated from '/usr/share/vpp/api/stats.api.json', line 898:
//
//            "vnet_udp_encap_counters",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "timestamp"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "vl_api_udp_encap_counter_t",
//                "c",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x1ab5e649"
//            }
//
type VnetUDPEncapCounters struct {
	Timestamp uint32
	Count     uint32 `struc:"sizeof=C"`
	C         []UDPEncapCounter
}

func (*VnetUDPEncapCounters) GetMessageName() string {
	return "vnet_udp_encap_counters"
}
func (*VnetUDPEncapCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func (*VnetUDPEncapCounters) GetCrcString() string {
	return "1ab5e649"
}
func NewVnetUDPEncapCounters() api.Message {
	return &VnetUDPEncapCounters{}
}
