// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: interfaces.proto

/*
Package interfaces is a generated protocol buffer package.

It is generated from these files:
	interfaces.proto

It has these top-level messages:
	Interfaces
	InterfacesState
	InterfaceNotification
	InterfaceErrors
*/
package interfaces

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type InterfaceType int32

const (
	InterfaceType_SOFTWARE_LOOPBACK   InterfaceType = 0
	InterfaceType_ETHERNET_CSMACD     InterfaceType = 1
	InterfaceType_MEMORY_INTERFACE    InterfaceType = 2
	InterfaceType_TAP_INTERFACE       InterfaceType = 3
	InterfaceType_AF_PACKET_INTERFACE InterfaceType = 4
	InterfaceType_VXLAN_TUNNEL        InterfaceType = 5
)

var InterfaceType_name = map[int32]string{
	0: "SOFTWARE_LOOPBACK",
	1: "ETHERNET_CSMACD",
	2: "MEMORY_INTERFACE",
	3: "TAP_INTERFACE",
	4: "AF_PACKET_INTERFACE",
	5: "VXLAN_TUNNEL",
}
var InterfaceType_value = map[string]int32{
	"SOFTWARE_LOOPBACK":   0,
	"ETHERNET_CSMACD":     1,
	"MEMORY_INTERFACE":    2,
	"TAP_INTERFACE":       3,
	"AF_PACKET_INTERFACE": 4,
	"VXLAN_TUNNEL":        5,
}

func (x InterfaceType) String() string {
	return proto.EnumName(InterfaceType_name, int32(x))
}
func (InterfaceType) EnumDescriptor() ([]byte, []int) { return fileDescriptorInterfaces, []int{0} }

// from vpp/build-root/install-vpp-native/vpp/include/vnet/interface.h
type RxModeType int32

const (
	RxModeType_UNKNOWN   RxModeType = 0
	RxModeType_POLLING   RxModeType = 1
	RxModeType_INTERRUPT RxModeType = 2
	RxModeType_ADAPTIVE  RxModeType = 3
	RxModeType_DEFAULT   RxModeType = 4
)

var RxModeType_name = map[int32]string{
	0: "UNKNOWN",
	1: "POLLING",
	2: "INTERRUPT",
	3: "ADAPTIVE",
	4: "DEFAULT",
}
var RxModeType_value = map[string]int32{
	"UNKNOWN":   0,
	"POLLING":   1,
	"INTERRUPT": 2,
	"ADAPTIVE":  3,
	"DEFAULT":   4,
}

func (x RxModeType) String() string {
	return proto.EnumName(RxModeType_name, int32(x))
}
func (RxModeType) EnumDescriptor() ([]byte, []int) { return fileDescriptorInterfaces, []int{1} }

type Interfaces_Interface_Memif_MemifMode int32

const (
	Interfaces_Interface_Memif_ETHERNET    Interfaces_Interface_Memif_MemifMode = 0
	Interfaces_Interface_Memif_IP          Interfaces_Interface_Memif_MemifMode = 1
	Interfaces_Interface_Memif_PUNT_INJECT Interfaces_Interface_Memif_MemifMode = 2
)

var Interfaces_Interface_Memif_MemifMode_name = map[int32]string{
	0: "ETHERNET",
	1: "IP",
	2: "PUNT_INJECT",
}
var Interfaces_Interface_Memif_MemifMode_value = map[string]int32{
	"ETHERNET":    0,
	"IP":          1,
	"PUNT_INJECT": 2,
}

func (x Interfaces_Interface_Memif_MemifMode) String() string {
	return proto.EnumName(Interfaces_Interface_Memif_MemifMode_name, int32(x))
}
func (Interfaces_Interface_Memif_MemifMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{0, 0, 2, 0}
}

type InterfacesState_Interface_Status int32

const (
	InterfacesState_Interface_UNKNOWN_STATUS InterfacesState_Interface_Status = 0
	InterfacesState_Interface_UP             InterfacesState_Interface_Status = 1
	InterfacesState_Interface_DOWN           InterfacesState_Interface_Status = 2
	InterfacesState_Interface_DELETED        InterfacesState_Interface_Status = 3
)

var InterfacesState_Interface_Status_name = map[int32]string{
	0: "UNKNOWN_STATUS",
	1: "UP",
	2: "DOWN",
	3: "DELETED",
}
var InterfacesState_Interface_Status_value = map[string]int32{
	"UNKNOWN_STATUS": 0,
	"UP":             1,
	"DOWN":           2,
	"DELETED":        3,
}

func (x InterfacesState_Interface_Status) String() string {
	return proto.EnumName(InterfacesState_Interface_Status_name, int32(x))
}
func (InterfacesState_Interface_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{1, 0, 0}
}

type InterfacesState_Interface_Duplex int32

const (
	InterfacesState_Interface_UNKNOWN_DUPLEX InterfacesState_Interface_Duplex = 0
	InterfacesState_Interface_HALF           InterfacesState_Interface_Duplex = 1
	InterfacesState_Interface_FULL           InterfacesState_Interface_Duplex = 2
)

var InterfacesState_Interface_Duplex_name = map[int32]string{
	0: "UNKNOWN_DUPLEX",
	1: "HALF",
	2: "FULL",
}
var InterfacesState_Interface_Duplex_value = map[string]int32{
	"UNKNOWN_DUPLEX": 0,
	"HALF":           1,
	"FULL":           2,
}

func (x InterfacesState_Interface_Duplex) String() string {
	return proto.EnumName(InterfacesState_Interface_Duplex_name, int32(x))
}
func (InterfacesState_Interface_Duplex) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{1, 0, 1}
}

type InterfaceNotification_NotifType int32

const (
	InterfaceNotification_UNKNOWN  InterfaceNotification_NotifType = 0
	InterfaceNotification_UPDOWN   InterfaceNotification_NotifType = 1
	InterfaceNotification_COUNTERS InterfaceNotification_NotifType = 2
)

var InterfaceNotification_NotifType_name = map[int32]string{
	0: "UNKNOWN",
	1: "UPDOWN",
	2: "COUNTERS",
}
var InterfaceNotification_NotifType_value = map[string]int32{
	"UNKNOWN":  0,
	"UPDOWN":   1,
	"COUNTERS": 2,
}

func (x InterfaceNotification_NotifType) String() string {
	return proto.EnumName(InterfaceNotification_NotifType_name, int32(x))
}
func (InterfaceNotification_NotifType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{2, 0}
}

type Interfaces struct {
	Interfaces []*Interfaces_Interface `protobuf:"bytes,1,rep,name=interfaces" json:"interfaces,omitempty"`
}

func (m *Interfaces) Reset()                    { *m = Interfaces{} }
func (m *Interfaces) String() string            { return proto.CompactTextString(m) }
func (*Interfaces) ProtoMessage()               {}
func (*Interfaces) Descriptor() ([]byte, []int) { return fileDescriptorInterfaces, []int{0} }

func (m *Interfaces) GetInterfaces() []*Interfaces_Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type Interfaces_Interface struct {
	Name               string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description        string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type               InterfaceType `protobuf:"varint,3,opt,name=type,proto3,enum=interfaces.InterfaceType" json:"type,omitempty"`
	Enabled            bool          `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	PhysAddress        string        `protobuf:"bytes,5,opt,name=phys_address,json=physAddress,proto3" json:"phys_address,omitempty"`
	Mtu                uint32        `protobuf:"varint,6,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Vrf                uint32        `protobuf:"varint,7,opt,name=vrf,proto3" json:"vrf,omitempty"`
	ContainerIpAddress string        `protobuf:"bytes,8,opt,name=container_ip_address,json=containerIpAddress,proto3" json:"container_ip_address,omitempty"`
	SetDhcpClient      bool          `protobuf:"varint,9,opt,name=set_dhcp_client,json=setDhcpClient,proto3" json:"set_dhcp_client,omitempty"`
	// Required format is "ipAddress/ipPrefix"
	IpAddresses    []string                             `protobuf:"bytes,10,rep,name=ip_addresses,json=ipAddresses" json:"ip_addresses,omitempty"`
	Unnumbered     *Interfaces_Interface_Unnumbered     `protobuf:"bytes,11,opt,name=unnumbered" json:"unnumbered,omitempty"`
	RxModeSettings *Interfaces_Interface_RxModeSettings `protobuf:"bytes,12,opt,name=rx_mode_settings,json=rxModeSettings" json:"rx_mode_settings,omitempty"`
	Memif          *Interfaces_Interface_Memif          `protobuf:"bytes,101,opt,name=memif" json:"memif,omitempty"`
	Vxlan          *Interfaces_Interface_Vxlan          `protobuf:"bytes,102,opt,name=vxlan" json:"vxlan,omitempty"`
	Afpacket       *Interfaces_Interface_Afpacket       `protobuf:"bytes,103,opt,name=afpacket" json:"afpacket,omitempty"`
	Tap            *Interfaces_Interface_Tap            `protobuf:"bytes,104,opt,name=tap" json:"tap,omitempty"`
}

func (m *Interfaces_Interface) Reset()         { *m = Interfaces_Interface{} }
func (m *Interfaces_Interface) String() string { return proto.CompactTextString(m) }
func (*Interfaces_Interface) ProtoMessage()    {}
func (*Interfaces_Interface) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{0, 0}
}

func (m *Interfaces_Interface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interfaces_Interface) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Interfaces_Interface) GetType() InterfaceType {
	if m != nil {
		return m.Type
	}
	return InterfaceType_SOFTWARE_LOOPBACK
}

func (m *Interfaces_Interface) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Interfaces_Interface) GetPhysAddress() string {
	if m != nil {
		return m.PhysAddress
	}
	return ""
}

func (m *Interfaces_Interface) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *Interfaces_Interface) GetVrf() uint32 {
	if m != nil {
		return m.Vrf
	}
	return 0
}

func (m *Interfaces_Interface) GetContainerIpAddress() string {
	if m != nil {
		return m.ContainerIpAddress
	}
	return ""
}

func (m *Interfaces_Interface) GetSetDhcpClient() bool {
	if m != nil {
		return m.SetDhcpClient
	}
	return false
}

func (m *Interfaces_Interface) GetIpAddresses() []string {
	if m != nil {
		return m.IpAddresses
	}
	return nil
}

func (m *Interfaces_Interface) GetUnnumbered() *Interfaces_Interface_Unnumbered {
	if m != nil {
		return m.Unnumbered
	}
	return nil
}

func (m *Interfaces_Interface) GetRxModeSettings() *Interfaces_Interface_RxModeSettings {
	if m != nil {
		return m.RxModeSettings
	}
	return nil
}

func (m *Interfaces_Interface) GetMemif() *Interfaces_Interface_Memif {
	if m != nil {
		return m.Memif
	}
	return nil
}

func (m *Interfaces_Interface) GetVxlan() *Interfaces_Interface_Vxlan {
	if m != nil {
		return m.Vxlan
	}
	return nil
}

func (m *Interfaces_Interface) GetAfpacket() *Interfaces_Interface_Afpacket {
	if m != nil {
		return m.Afpacket
	}
	return nil
}

func (m *Interfaces_Interface) GetTap() *Interfaces_Interface_Tap {
	if m != nil {
		return m.Tap
	}
	return nil
}

type Interfaces_Interface_Unnumbered struct {
	IsUnnumbered    bool   `protobuf:"varint,1,opt,name=is_unnumbered,json=isUnnumbered,proto3" json:"is_unnumbered,omitempty"`
	InterfaceWithIp string `protobuf:"bytes,2,opt,name=interface_with_ip,json=interfaceWithIp,proto3" json:"interface_with_ip,omitempty"`
}

func (m *Interfaces_Interface_Unnumbered) Reset()         { *m = Interfaces_Interface_Unnumbered{} }
func (m *Interfaces_Interface_Unnumbered) String() string { return proto.CompactTextString(m) }
func (*Interfaces_Interface_Unnumbered) ProtoMessage()    {}
func (*Interfaces_Interface_Unnumbered) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{0, 0, 0}
}

func (m *Interfaces_Interface_Unnumbered) GetIsUnnumbered() bool {
	if m != nil {
		return m.IsUnnumbered
	}
	return false
}

func (m *Interfaces_Interface_Unnumbered) GetInterfaceWithIp() string {
	if m != nil {
		return m.InterfaceWithIp
	}
	return ""
}

type Interfaces_Interface_RxModeSettings struct {
	RxMode       RxModeType `protobuf:"varint,1,opt,name=rx_mode,json=rxMode,proto3,enum=interfaces.RxModeType" json:"rx_mode,omitempty"`
	QueueId      uint32     `protobuf:"varint,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	QueueIdValid uint32     `protobuf:"varint,3,opt,name=queue_id_valid,json=queueIdValid,proto3" json:"queue_id_valid,omitempty"`
}

func (m *Interfaces_Interface_RxModeSettings) Reset()         { *m = Interfaces_Interface_RxModeSettings{} }
func (m *Interfaces_Interface_RxModeSettings) String() string { return proto.CompactTextString(m) }
func (*Interfaces_Interface_RxModeSettings) ProtoMessage()    {}
func (*Interfaces_Interface_RxModeSettings) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{0, 0, 1}
}

func (m *Interfaces_Interface_RxModeSettings) GetRxMode() RxModeType {
	if m != nil {
		return m.RxMode
	}
	return RxModeType_UNKNOWN
}

func (m *Interfaces_Interface_RxModeSettings) GetQueueId() uint32 {
	if m != nil {
		return m.QueueId
	}
	return 0
}

func (m *Interfaces_Interface_RxModeSettings) GetQueueIdValid() uint32 {
	if m != nil {
		return m.QueueIdValid
	}
	return 0
}

type Interfaces_Interface_Memif struct {
	Master         bool                                 `protobuf:"varint,1,opt,name=master,proto3" json:"master,omitempty"`
	Mode           Interfaces_Interface_Memif_MemifMode `protobuf:"varint,2,opt,name=mode,proto3,enum=interfaces.Interfaces_Interface_Memif_MemifMode" json:"mode,omitempty"`
	Id             uint32                               `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	SocketFilename string                               `protobuf:"bytes,4,opt,name=socket_filename,json=socketFilename,proto3" json:"socket_filename,omitempty"`
	Secret         string                               `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	RingSize       uint32                               `protobuf:"varint,6,opt,name=ring_size,json=ringSize,proto3" json:"ring_size,omitempty"`
	BufferSize     uint32                               `protobuf:"varint,7,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	RxQueues       uint32                               `protobuf:"varint,8,opt,name=rx_queues,json=rxQueues,proto3" json:"rx_queues,omitempty"`
	TxQueues       uint32                               `protobuf:"varint,9,opt,name=tx_queues,json=txQueues,proto3" json:"tx_queues,omitempty"`
}

func (m *Interfaces_Interface_Memif) Reset()         { *m = Interfaces_Interface_Memif{} }
func (m *Interfaces_Interface_Memif) String() string { return proto.CompactTextString(m) }
func (*Interfaces_Interface_Memif) ProtoMessage()    {}
func (*Interfaces_Interface_Memif) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{0, 0, 2}
}

func (m *Interfaces_Interface_Memif) GetMaster() bool {
	if m != nil {
		return m.Master
	}
	return false
}

func (m *Interfaces_Interface_Memif) GetMode() Interfaces_Interface_Memif_MemifMode {
	if m != nil {
		return m.Mode
	}
	return Interfaces_Interface_Memif_ETHERNET
}

func (m *Interfaces_Interface_Memif) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Interfaces_Interface_Memif) GetSocketFilename() string {
	if m != nil {
		return m.SocketFilename
	}
	return ""
}

func (m *Interfaces_Interface_Memif) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Interfaces_Interface_Memif) GetRingSize() uint32 {
	if m != nil {
		return m.RingSize
	}
	return 0
}

func (m *Interfaces_Interface_Memif) GetBufferSize() uint32 {
	if m != nil {
		return m.BufferSize
	}
	return 0
}

func (m *Interfaces_Interface_Memif) GetRxQueues() uint32 {
	if m != nil {
		return m.RxQueues
	}
	return 0
}

func (m *Interfaces_Interface_Memif) GetTxQueues() uint32 {
	if m != nil {
		return m.TxQueues
	}
	return 0
}

type Interfaces_Interface_Vxlan struct {
	SrcAddress string `protobuf:"bytes,1,opt,name=src_address,json=srcAddress,proto3" json:"src_address,omitempty"`
	DstAddress string `protobuf:"bytes,2,opt,name=dst_address,json=dstAddress,proto3" json:"dst_address,omitempty"`
	Vni        uint32 `protobuf:"varint,3,opt,name=vni,proto3" json:"vni,omitempty"`
}

func (m *Interfaces_Interface_Vxlan) Reset()         { *m = Interfaces_Interface_Vxlan{} }
func (m *Interfaces_Interface_Vxlan) String() string { return proto.CompactTextString(m) }
func (*Interfaces_Interface_Vxlan) ProtoMessage()    {}
func (*Interfaces_Interface_Vxlan) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{0, 0, 3}
}

func (m *Interfaces_Interface_Vxlan) GetSrcAddress() string {
	if m != nil {
		return m.SrcAddress
	}
	return ""
}

func (m *Interfaces_Interface_Vxlan) GetDstAddress() string {
	if m != nil {
		return m.DstAddress
	}
	return ""
}

func (m *Interfaces_Interface_Vxlan) GetVni() uint32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

type Interfaces_Interface_Afpacket struct {
	HostIfName string `protobuf:"bytes,1,opt,name=host_if_name,json=hostIfName,proto3" json:"host_if_name,omitempty"`
}

func (m *Interfaces_Interface_Afpacket) Reset()         { *m = Interfaces_Interface_Afpacket{} }
func (m *Interfaces_Interface_Afpacket) String() string { return proto.CompactTextString(m) }
func (*Interfaces_Interface_Afpacket) ProtoMessage()    {}
func (*Interfaces_Interface_Afpacket) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{0, 0, 4}
}

func (m *Interfaces_Interface_Afpacket) GetHostIfName() string {
	if m != nil {
		return m.HostIfName
	}
	return ""
}

type Interfaces_Interface_Tap struct {
	Version    uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	HostIfName string `protobuf:"bytes,2,opt,name=host_if_name,json=hostIfName,proto3" json:"host_if_name,omitempty"`
	Namespace  string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	RxRingSize uint32 `protobuf:"varint,4,opt,name=rx_ring_size,json=rxRingSize,proto3" json:"rx_ring_size,omitempty"`
	TxRingSize uint32 `protobuf:"varint,5,opt,name=tx_ring_size,json=txRingSize,proto3" json:"tx_ring_size,omitempty"`
}

func (m *Interfaces_Interface_Tap) Reset()         { *m = Interfaces_Interface_Tap{} }
func (m *Interfaces_Interface_Tap) String() string { return proto.CompactTextString(m) }
func (*Interfaces_Interface_Tap) ProtoMessage()    {}
func (*Interfaces_Interface_Tap) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{0, 0, 5}
}

func (m *Interfaces_Interface_Tap) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Interfaces_Interface_Tap) GetHostIfName() string {
	if m != nil {
		return m.HostIfName
	}
	return ""
}

func (m *Interfaces_Interface_Tap) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Interfaces_Interface_Tap) GetRxRingSize() uint32 {
	if m != nil {
		return m.RxRingSize
	}
	return 0
}

func (m *Interfaces_Interface_Tap) GetTxRingSize() uint32 {
	if m != nil {
		return m.TxRingSize
	}
	return 0
}

type InterfacesState struct {
	Interfaces []*InterfacesState_Interface `protobuf:"bytes,1,rep,name=interfaces" json:"interfaces,omitempty"`
}

func (m *InterfacesState) Reset()                    { *m = InterfacesState{} }
func (m *InterfacesState) String() string            { return proto.CompactTextString(m) }
func (*InterfacesState) ProtoMessage()               {}
func (*InterfacesState) Descriptor() ([]byte, []int) { return fileDescriptorInterfaces, []int{1} }

func (m *InterfacesState) GetInterfaces() []*InterfacesState_Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type InterfacesState_Interface struct {
	Name         string                                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InternalName string                                `protobuf:"bytes,2,opt,name=internal_name,json=internalName,proto3" json:"internal_name,omitempty"`
	Type         InterfaceType                         `protobuf:"varint,3,opt,name=type,proto3,enum=interfaces.InterfaceType" json:"type,omitempty"`
	IfIndex      uint32                                `protobuf:"varint,4,opt,name=if_index,json=ifIndex,proto3" json:"if_index,omitempty"`
	AdminStatus  InterfacesState_Interface_Status      `protobuf:"varint,5,opt,name=admin_status,json=adminStatus,proto3,enum=interfaces.InterfacesState_Interface_Status" json:"admin_status,omitempty"`
	OperStatus   InterfacesState_Interface_Status      `protobuf:"varint,6,opt,name=oper_status,json=operStatus,proto3,enum=interfaces.InterfacesState_Interface_Status" json:"oper_status,omitempty"`
	LastChange   int64                                 `protobuf:"varint,7,opt,name=last_change,json=lastChange,proto3" json:"last_change,omitempty"`
	PhysAddress  string                                `protobuf:"bytes,8,opt,name=phys_address,json=physAddress,proto3" json:"phys_address,omitempty"`
	Speed        uint64                                `protobuf:"varint,9,opt,name=speed,proto3" json:"speed,omitempty"`
	Mtu          uint32                                `protobuf:"varint,10,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Duplex       InterfacesState_Interface_Duplex      `protobuf:"varint,11,opt,name=duplex,proto3,enum=interfaces.InterfacesState_Interface_Duplex" json:"duplex,omitempty"`
	Statistics   *InterfacesState_Interface_Statistics `protobuf:"bytes,100,opt,name=statistics" json:"statistics,omitempty"`
}

func (m *InterfacesState_Interface) Reset()         { *m = InterfacesState_Interface{} }
func (m *InterfacesState_Interface) String() string { return proto.CompactTextString(m) }
func (*InterfacesState_Interface) ProtoMessage()    {}
func (*InterfacesState_Interface) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{1, 0}
}

func (m *InterfacesState_Interface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InterfacesState_Interface) GetInternalName() string {
	if m != nil {
		return m.InternalName
	}
	return ""
}

func (m *InterfacesState_Interface) GetType() InterfaceType {
	if m != nil {
		return m.Type
	}
	return InterfaceType_SOFTWARE_LOOPBACK
}

func (m *InterfacesState_Interface) GetIfIndex() uint32 {
	if m != nil {
		return m.IfIndex
	}
	return 0
}

func (m *InterfacesState_Interface) GetAdminStatus() InterfacesState_Interface_Status {
	if m != nil {
		return m.AdminStatus
	}
	return InterfacesState_Interface_UNKNOWN_STATUS
}

func (m *InterfacesState_Interface) GetOperStatus() InterfacesState_Interface_Status {
	if m != nil {
		return m.OperStatus
	}
	return InterfacesState_Interface_UNKNOWN_STATUS
}

func (m *InterfacesState_Interface) GetLastChange() int64 {
	if m != nil {
		return m.LastChange
	}
	return 0
}

func (m *InterfacesState_Interface) GetPhysAddress() string {
	if m != nil {
		return m.PhysAddress
	}
	return ""
}

func (m *InterfacesState_Interface) GetSpeed() uint64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *InterfacesState_Interface) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *InterfacesState_Interface) GetDuplex() InterfacesState_Interface_Duplex {
	if m != nil {
		return m.Duplex
	}
	return InterfacesState_Interface_UNKNOWN_DUPLEX
}

func (m *InterfacesState_Interface) GetStatistics() *InterfacesState_Interface_Statistics {
	if m != nil {
		return m.Statistics
	}
	return nil
}

type InterfacesState_Interface_Statistics struct {
	InPackets       uint64 `protobuf:"varint,1,opt,name=in_packets,json=inPackets,proto3" json:"in_packets,omitempty"`
	InBytes         uint64 `protobuf:"varint,2,opt,name=in_bytes,json=inBytes,proto3" json:"in_bytes,omitempty"`
	OutPackets      uint64 `protobuf:"varint,3,opt,name=out_packets,json=outPackets,proto3" json:"out_packets,omitempty"`
	OutBytes        uint64 `protobuf:"varint,4,opt,name=out_bytes,json=outBytes,proto3" json:"out_bytes,omitempty"`
	DropPackets     uint64 `protobuf:"varint,5,opt,name=drop_packets,json=dropPackets,proto3" json:"drop_packets,omitempty"`
	PuntPackets     uint64 `protobuf:"varint,6,opt,name=punt_packets,json=puntPackets,proto3" json:"punt_packets,omitempty"`
	Ipv4Packets     uint64 `protobuf:"varint,7,opt,name=ipv4_packets,json=ipv4Packets,proto3" json:"ipv4_packets,omitempty"`
	Ipv6Packets     uint64 `protobuf:"varint,8,opt,name=ipv6_packets,json=ipv6Packets,proto3" json:"ipv6_packets,omitempty"`
	InNobufPackets  uint64 `protobuf:"varint,9,opt,name=in_nobuf_packets,json=inNobufPackets,proto3" json:"in_nobuf_packets,omitempty"`
	InMissPackets   uint64 `protobuf:"varint,10,opt,name=in_miss_packets,json=inMissPackets,proto3" json:"in_miss_packets,omitempty"`
	InErrorPackets  uint64 `protobuf:"varint,11,opt,name=in_error_packets,json=inErrorPackets,proto3" json:"in_error_packets,omitempty"`
	OutErrorPackets uint64 `protobuf:"varint,12,opt,name=out_error_packets,json=outErrorPackets,proto3" json:"out_error_packets,omitempty"`
}

func (m *InterfacesState_Interface_Statistics) Reset()         { *m = InterfacesState_Interface_Statistics{} }
func (m *InterfacesState_Interface_Statistics) String() string { return proto.CompactTextString(m) }
func (*InterfacesState_Interface_Statistics) ProtoMessage()    {}
func (*InterfacesState_Interface_Statistics) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{1, 0, 0}
}

func (m *InterfacesState_Interface_Statistics) GetInPackets() uint64 {
	if m != nil {
		return m.InPackets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetInBytes() uint64 {
	if m != nil {
		return m.InBytes
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetOutPackets() uint64 {
	if m != nil {
		return m.OutPackets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetOutBytes() uint64 {
	if m != nil {
		return m.OutBytes
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetDropPackets() uint64 {
	if m != nil {
		return m.DropPackets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetPuntPackets() uint64 {
	if m != nil {
		return m.PuntPackets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetIpv4Packets() uint64 {
	if m != nil {
		return m.Ipv4Packets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetIpv6Packets() uint64 {
	if m != nil {
		return m.Ipv6Packets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetInNobufPackets() uint64 {
	if m != nil {
		return m.InNobufPackets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetInMissPackets() uint64 {
	if m != nil {
		return m.InMissPackets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetInErrorPackets() uint64 {
	if m != nil {
		return m.InErrorPackets
	}
	return 0
}

func (m *InterfacesState_Interface_Statistics) GetOutErrorPackets() uint64 {
	if m != nil {
		return m.OutErrorPackets
	}
	return 0
}

type InterfaceNotification struct {
	Type  InterfaceNotification_NotifType `protobuf:"varint,1,opt,name=Type,proto3,enum=interfaces.InterfaceNotification_NotifType" json:"Type,omitempty"`
	State *InterfacesState_Interface      `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (m *InterfaceNotification) Reset()                    { *m = InterfaceNotification{} }
func (m *InterfaceNotification) String() string            { return proto.CompactTextString(m) }
func (*InterfaceNotification) ProtoMessage()               {}
func (*InterfaceNotification) Descriptor() ([]byte, []int) { return fileDescriptorInterfaces, []int{2} }

func (m *InterfaceNotification) GetType() InterfaceNotification_NotifType {
	if m != nil {
		return m.Type
	}
	return InterfaceNotification_UNKNOWN
}

func (m *InterfaceNotification) GetState() *InterfacesState_Interface {
	if m != nil {
		return m.State
	}
	return nil
}

type InterfaceErrors struct {
	Interfaces []*InterfaceErrors_Interface `protobuf:"bytes,1,rep,name=interfaces" json:"interfaces,omitempty"`
}

func (m *InterfaceErrors) Reset()                    { *m = InterfaceErrors{} }
func (m *InterfaceErrors) String() string            { return proto.CompactTextString(m) }
func (*InterfaceErrors) ProtoMessage()               {}
func (*InterfaceErrors) Descriptor() ([]byte, []int) { return fileDescriptorInterfaces, []int{3} }

func (m *InterfaceErrors) GetInterfaces() []*InterfaceErrors_Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type InterfaceErrors_Interface struct {
	InterfaceName string                                 `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	ErrorData     []*InterfaceErrors_Interface_ErrorData `protobuf:"bytes,2,rep,name=error_data,json=errorData" json:"error_data,omitempty"`
}

func (m *InterfaceErrors_Interface) Reset()         { *m = InterfaceErrors_Interface{} }
func (m *InterfaceErrors_Interface) String() string { return proto.CompactTextString(m) }
func (*InterfaceErrors_Interface) ProtoMessage()    {}
func (*InterfaceErrors_Interface) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{3, 0}
}

func (m *InterfaceErrors_Interface) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *InterfaceErrors_Interface) GetErrorData() []*InterfaceErrors_Interface_ErrorData {
	if m != nil {
		return m.ErrorData
	}
	return nil
}

type InterfaceErrors_Interface_ErrorData struct {
	ChangeType   string `protobuf:"bytes,1,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	LastChange   int64  `protobuf:"varint,3,opt,name=last_change,json=lastChange,proto3" json:"last_change,omitempty"`
}

func (m *InterfaceErrors_Interface_ErrorData) Reset()         { *m = InterfaceErrors_Interface_ErrorData{} }
func (m *InterfaceErrors_Interface_ErrorData) String() string { return proto.CompactTextString(m) }
func (*InterfaceErrors_Interface_ErrorData) ProtoMessage()    {}
func (*InterfaceErrors_Interface_ErrorData) Descriptor() ([]byte, []int) {
	return fileDescriptorInterfaces, []int{3, 0, 0}
}

func (m *InterfaceErrors_Interface_ErrorData) GetChangeType() string {
	if m != nil {
		return m.ChangeType
	}
	return ""
}

func (m *InterfaceErrors_Interface_ErrorData) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *InterfaceErrors_Interface_ErrorData) GetLastChange() int64 {
	if m != nil {
		return m.LastChange
	}
	return 0
}

func init() {
	proto.RegisterType((*Interfaces)(nil), "interfaces.Interfaces")
	proto.RegisterType((*Interfaces_Interface)(nil), "interfaces.Interfaces.Interface")
	proto.RegisterType((*Interfaces_Interface_Unnumbered)(nil), "interfaces.Interfaces.Interface.Unnumbered")
	proto.RegisterType((*Interfaces_Interface_RxModeSettings)(nil), "interfaces.Interfaces.Interface.RxModeSettings")
	proto.RegisterType((*Interfaces_Interface_Memif)(nil), "interfaces.Interfaces.Interface.Memif")
	proto.RegisterType((*Interfaces_Interface_Vxlan)(nil), "interfaces.Interfaces.Interface.Vxlan")
	proto.RegisterType((*Interfaces_Interface_Afpacket)(nil), "interfaces.Interfaces.Interface.Afpacket")
	proto.RegisterType((*Interfaces_Interface_Tap)(nil), "interfaces.Interfaces.Interface.Tap")
	proto.RegisterType((*InterfacesState)(nil), "interfaces.InterfacesState")
	proto.RegisterType((*InterfacesState_Interface)(nil), "interfaces.InterfacesState.Interface")
	proto.RegisterType((*InterfacesState_Interface_Statistics)(nil), "interfaces.InterfacesState.Interface.Statistics")
	proto.RegisterType((*InterfaceNotification)(nil), "interfaces.InterfaceNotification")
	proto.RegisterType((*InterfaceErrors)(nil), "interfaces.InterfaceErrors")
	proto.RegisterType((*InterfaceErrors_Interface)(nil), "interfaces.InterfaceErrors.Interface")
	proto.RegisterType((*InterfaceErrors_Interface_ErrorData)(nil), "interfaces.InterfaceErrors.Interface.ErrorData")
	proto.RegisterEnum("interfaces.InterfaceType", InterfaceType_name, InterfaceType_value)
	proto.RegisterEnum("interfaces.RxModeType", RxModeType_name, RxModeType_value)
	proto.RegisterEnum("interfaces.Interfaces_Interface_Memif_MemifMode", Interfaces_Interface_Memif_MemifMode_name, Interfaces_Interface_Memif_MemifMode_value)
	proto.RegisterEnum("interfaces.InterfacesState_Interface_Status", InterfacesState_Interface_Status_name, InterfacesState_Interface_Status_value)
	proto.RegisterEnum("interfaces.InterfacesState_Interface_Duplex", InterfacesState_Interface_Duplex_name, InterfacesState_Interface_Duplex_value)
	proto.RegisterEnum("interfaces.InterfaceNotification_NotifType", InterfaceNotification_NotifType_name, InterfaceNotification_NotifType_value)
}

func init() { proto.RegisterFile("interfaces.proto", fileDescriptorInterfaces) }

var fileDescriptorInterfaces = []byte{
	// 1582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x4d, 0x73, 0xe3, 0x48,
	0x19, 0x8e, 0xfc, 0xed, 0xd7, 0x5f, 0x4a, 0xef, 0xec, 0xa2, 0xf1, 0x42, 0x8d, 0x37, 0xbb, 0x3b,
	0x84, 0xb0, 0x64, 0x52, 0x81, 0x9a, 0xcb, 0x52, 0x05, 0x5e, 0x5b, 0x61, 0x4c, 0x6c, 0xd9, 0xc8,
	0x72, 0x32, 0x53, 0x14, 0xd5, 0xa5, 0x58, 0xed, 0xb8, 0x0b, 0x5b, 0x12, 0xea, 0x76, 0x70, 0xe6,
	0xc8, 0x1f, 0xe0, 0x47, 0xf0, 0x23, 0xe0, 0xc0, 0x1f, 0xe0, 0xc8, 0x9d, 0x13, 0x57, 0xee, 0x9c,
	0xa9, 0xee, 0x96, 0x64, 0x65, 0x26, 0x53, 0xc9, 0x70, 0x49, 0xb9, 0x9f, 0xf7, 0x79, 0xde, 0xfe,
	0x78, 0xbf, 0x14, 0xd0, 0xa9, 0xcf, 0x49, 0xb4, 0x70, 0xe7, 0x84, 0x1d, 0x87, 0x51, 0xc0, 0x03,
	0x04, 0x3b, 0xe4, 0xe0, 0xef, 0x0d, 0x80, 0x41, 0xba, 0x44, 0xbf, 0x84, 0x8c, 0xd1, 0xd0, 0x3a,
	0xf9, 0xc3, 0xda, 0x69, 0xe7, 0x38, 0xe3, 0x61, 0x70, 0xcf, 0x4f, 0x3b, 0xa3, 0x69, 0xff, 0xa7,
	0x0e, 0xd5, 0xd4, 0x82, 0x10, 0x14, 0x7c, 0x77, 0x4d, 0x0c, 0xad, 0xa3, 0x1d, 0x56, 0x6d, 0xf9,
	0x1b, 0x75, 0xa0, 0xe6, 0x11, 0x36, 0x8f, 0x68, 0xc8, 0x69, 0xe0, 0x1b, 0x39, 0x69, 0xca, 0x42,
	0xe8, 0x27, 0x50, 0xe0, 0xb7, 0x21, 0x31, 0xf2, 0x1d, 0xed, 0xb0, 0x79, 0xfa, 0xf4, 0xde, 0xfd,
	0x9d, 0xdb, 0x90, 0xd8, 0x92, 0x86, 0x0c, 0x28, 0x13, 0xdf, 0xbd, 0x5a, 0x11, 0xcf, 0x28, 0x74,
	0xb4, 0xc3, 0x8a, 0x9d, 0x2c, 0xd1, 0x17, 0x50, 0x0f, 0x97, 0xb7, 0x0c, 0xbb, 0x9e, 0x17, 0x11,
	0xc6, 0x8c, 0xa2, 0xda, 0x4b, 0x60, 0x5d, 0x05, 0x21, 0x1d, 0xf2, 0x6b, 0xbe, 0x31, 0x4a, 0x1d,
	0xed, 0xb0, 0x61, 0x8b, 0x9f, 0x02, 0xb9, 0x89, 0x16, 0x46, 0x59, 0x21, 0x37, 0xd1, 0x02, 0x9d,
	0xc0, 0x93, 0x79, 0xe0, 0x73, 0x97, 0xfa, 0x24, 0xc2, 0x34, 0x4c, 0xdd, 0x55, 0xa4, 0x3b, 0x94,
	0xda, 0x06, 0x61, 0xe2, 0xf5, 0x39, 0xb4, 0x18, 0xe1, 0xd8, 0x5b, 0xce, 0x43, 0x3c, 0x5f, 0x51,
	0xe2, 0x73, 0xa3, 0x2a, 0x8f, 0xd6, 0x60, 0x84, 0xf7, 0x97, 0xf3, 0xb0, 0x27, 0x41, 0x71, 0xc0,
	0x9d, 0x3f, 0xc2, 0x0c, 0xe8, 0xe4, 0xc5, 0x01, 0x69, 0xe2, 0x88, 0x30, 0x74, 0x0e, 0xb0, 0xf1,
	0xfd, 0xcd, 0xfa, 0x8a, 0x44, 0xc4, 0x33, 0x6a, 0x1d, 0xed, 0xb0, 0x76, 0xfa, 0xe3, 0x87, 0x42,
	0x72, 0x3c, 0x4b, 0x25, 0x76, 0x46, 0x8e, 0xde, 0x80, 0x1e, 0x6d, 0xf1, 0x3a, 0xf0, 0x08, 0x66,
	0x84, 0x73, 0xea, 0x5f, 0x33, 0xa3, 0x2e, 0x5d, 0xbe, 0x78, 0xd0, 0xa5, 0xbd, 0x1d, 0x05, 0x1e,
	0x99, 0xc6, 0x32, 0xbb, 0x19, 0xdd, 0x59, 0xa3, 0x9f, 0x43, 0x71, 0x4d, 0xd6, 0x74, 0x61, 0x10,
	0xe9, 0xef, 0xf9, 0x83, 0xfe, 0x46, 0x82, 0x6d, 0x2b, 0x91, 0x50, 0xdf, 0x6c, 0x57, 0xae, 0x6f,
	0x2c, 0x1e, 0xa9, 0xbe, 0x10, 0x6c, 0x5b, 0x89, 0x90, 0x09, 0x15, 0x77, 0x11, 0xba, 0xf3, 0xdf,
	0x13, 0x6e, 0x5c, 0x4b, 0x07, 0x3f, 0x7a, 0xd0, 0x41, 0x37, 0x16, 0xd8, 0xa9, 0x14, 0xbd, 0x84,
	0x3c, 0x77, 0x43, 0x63, 0x29, 0x3d, 0x7c, 0xf5, 0xa0, 0x07, 0xc7, 0x0d, 0x6d, 0x21, 0x68, 0xff,
	0x0e, 0x60, 0xf7, 0xde, 0xe8, 0x4b, 0x68, 0x50, 0x86, 0x33, 0x31, 0xd3, 0x64, 0xe4, 0xeb, 0x94,
	0x65, 0x48, 0x47, 0xb0, 0x9f, 0xba, 0xc7, 0x7f, 0xa4, 0x7c, 0x89, 0x69, 0x18, 0x97, 0x42, 0x2b,
	0x35, 0x5c, 0x52, 0xbe, 0x1c, 0x84, 0xed, 0x3f, 0x69, 0xd0, 0xbc, 0xfb, 0xf8, 0xe8, 0x05, 0x94,
	0xe3, 0x38, 0x4a, 0xef, 0xcd, 0xd3, 0xcf, 0xb2, 0xa7, 0x55, 0x64, 0x59, 0x21, 0x25, 0x15, 0x25,
	0xf4, 0x14, 0x2a, 0x7f, 0xd8, 0x90, 0x0d, 0xc1, 0xd4, 0x93, 0xdb, 0x34, 0xec, 0xb2, 0x5c, 0x0f,
	0x3c, 0xf4, 0x15, 0x34, 0x13, 0x13, 0xbe, 0x71, 0x57, 0xd4, 0x93, 0x75, 0xd7, 0xb0, 0xeb, 0x31,
	0xe1, 0x42, 0x60, 0xed, 0x7f, 0xe7, 0xa0, 0x28, 0x23, 0x86, 0x3e, 0x83, 0xd2, 0xda, 0x65, 0x9c,
	0x44, 0xf1, 0xc5, 0xe2, 0x15, 0xea, 0x43, 0x41, 0x1e, 0x28, 0x27, 0x0f, 0x74, 0xf2, 0xb8, 0xf8,
	0xab, 0xbf, 0xe2, 0x88, 0xb6, 0x54, 0xa3, 0x26, 0xe4, 0xd2, 0x13, 0xe4, 0xa8, 0x87, 0x7e, 0x08,
	0x2d, 0x16, 0x88, 0xe8, 0xe0, 0x05, 0x5d, 0x11, 0xd9, 0x4c, 0x0a, 0xf2, 0x99, 0x9a, 0x0a, 0x3e,
	0x8b, 0x51, 0x71, 0x2c, 0x46, 0xe6, 0x11, 0xe1, 0x71, 0x95, 0xc7, 0x2b, 0xf4, 0x39, 0x54, 0x23,
	0xea, 0x5f, 0x63, 0x46, 0xdf, 0x92, 0xb8, 0xcc, 0x2b, 0x02, 0x98, 0xd2, 0xb7, 0x04, 0x3d, 0x83,
	0xda, 0xd5, 0x66, 0xb1, 0x20, 0x91, 0x32, 0xab, 0x9a, 0x07, 0x05, 0x49, 0x82, 0x50, 0x6f, 0xb1,
	0x7c, 0x09, 0x55, 0xef, 0x42, 0xbd, 0xfd, 0x8d, 0x5c, 0x0b, 0x23, 0x4f, 0x8d, 0x55, 0x65, 0xe4,
	0xb1, 0xf1, 0xe0, 0x14, 0xaa, 0xe9, 0xdd, 0x50, 0x1d, 0x2a, 0xa6, 0xf3, 0xca, 0xb4, 0x2d, 0xd3,
	0xd1, 0xf7, 0x50, 0x09, 0x72, 0x83, 0x89, 0xae, 0xa1, 0x16, 0xd4, 0x26, 0x33, 0xcb, 0xc1, 0x03,
	0xeb, 0xd7, 0x66, 0xcf, 0xd1, 0x73, 0xed, 0xdf, 0x42, 0x51, 0xe6, 0xb5, 0x38, 0x17, 0x8b, 0xe6,
	0x69, 0xa3, 0x51, 0xed, 0x13, 0x58, 0x34, 0x4f, 0x1a, 0xcc, 0x33, 0xa8, 0x79, 0x8c, 0xa7, 0x04,
	0x95, 0x39, 0xe0, 0x31, 0x9e, 0xe9, 0x6b, 0x37, 0x3e, 0x8d, 0x1f, 0x52, 0xfc, 0x6c, 0x7f, 0x03,
	0x95, 0x24, 0xe7, 0x51, 0x07, 0xea, 0xcb, 0x80, 0x71, 0x4c, 0x17, 0x38, 0xd3, 0x9f, 0x41, 0x60,
	0x83, 0x85, 0xe5, 0xae, 0x49, 0xfb, 0x2f, 0x1a, 0xe4, 0x1d, 0x37, 0x14, 0xcd, 0xf5, 0x86, 0x44,
	0x4c, 0x74, 0x6a, 0x4d, 0xe5, 0x4d, 0xbc, 0x7c, 0xcf, 0x47, 0xee, 0x5d, 0x1f, 0xe8, 0xfb, 0x50,
	0x15, 0x16, 0x16, 0xba, 0x73, 0xd5, 0xcc, 0xab, 0xf6, 0x0e, 0x10, 0xfa, 0x68, 0x8b, 0x77, 0xb1,
	0x29, 0xa8, 0xc7, 0x8f, 0xb6, 0x76, 0x12, 0x9d, 0x0e, 0xd4, 0x79, 0x96, 0x51, 0x54, 0x0c, 0x9e,
	0x32, 0x0e, 0xfe, 0x5a, 0x85, 0xd6, 0x2e, 0xb9, 0xa6, 0xdc, 0xe5, 0x04, 0x99, 0xf7, 0xcc, 0xb0,
	0xaf, 0xef, 0xcf, 0x46, 0x29, 0xf8, 0xc0, 0x20, 0xfb, 0x57, 0xe5, 0xa1, 0x41, 0x26, 0x0a, 0x5d,
	0x10, 0x7c, 0x77, 0x95, 0x7d, 0x81, 0x7a, 0x02, 0xca, 0x37, 0xf8, 0xc8, 0x59, 0xf6, 0x14, 0x2a,
	0x74, 0x81, 0xa9, 0xef, 0x91, 0x6d, 0xfc, 0x20, 0x65, 0xba, 0x18, 0x88, 0x25, 0x1a, 0x43, 0xdd,
	0xf5, 0xd6, 0xd4, 0xc7, 0x8c, 0xbb, 0x7c, 0xa3, 0x86, 0x59, 0xf3, 0xf4, 0x9b, 0x47, 0xdd, 0xec,
	0x78, 0x2a, 0x35, 0x76, 0x4d, 0x7a, 0x50, 0x0b, 0x34, 0x82, 0x5a, 0x10, 0x8a, 0xd4, 0x57, 0xfe,
	0x4a, 0xff, 0x87, 0x3f, 0x10, 0x0e, 0x62, 0x77, 0xcf, 0xa0, 0xb6, 0x72, 0x19, 0xc7, 0xf3, 0xa5,
	0xeb, 0x5f, 0xab, 0x5a, 0xca, 0xdb, 0x20, 0xa0, 0x9e, 0x44, 0xde, 0x9b, 0xc6, 0x95, 0xf7, 0xa7,
	0xf1, 0x13, 0x28, 0xb2, 0x90, 0x10, 0x4f, 0x56, 0x53, 0xc1, 0x56, 0x8b, 0x64, 0x46, 0xc3, 0x6e,
	0x46, 0xf7, 0xa1, 0xe4, 0x6d, 0xc2, 0x15, 0xd9, 0xca, 0x81, 0xf8, 0xe8, 0x53, 0xf7, 0xa5, 0xc6,
	0x8e, 0xb5, 0x68, 0x02, 0x20, 0xee, 0x4e, 0x19, 0xa7, 0x73, 0x66, 0x78, 0xb2, 0xed, 0x9f, 0x3c,
	0xfe, 0xfe, 0x4a, 0x67, 0x67, 0x7c, 0xb4, 0xff, 0x96, 0x07, 0xd8, 0x99, 0xd0, 0x0f, 0x44, 0x2a,
	0x62, 0x55, 0x73, 0xaa, 0x8a, 0x0b, 0x76, 0x95, 0xfa, 0x13, 0x05, 0xc8, 0x60, 0xfb, 0xf8, 0xea,
	0x96, 0x13, 0x55, 0xc1, 0x05, 0xbb, 0x4c, 0xfd, 0xef, 0xc4, 0x52, 0x3c, 0x66, 0xb0, 0xe1, 0xa9,
	0x34, 0x2f, 0xad, 0x10, 0x6c, 0x78, 0xa2, 0xfd, 0x1c, 0xaa, 0x82, 0xa0, 0xc4, 0x05, 0x69, 0xae,
	0x04, 0x1b, 0xae, 0xd4, 0x5f, 0x40, 0xdd, 0x8b, 0x82, 0x30, 0x95, 0x17, 0xa5, 0xbd, 0x26, 0xb0,
	0x44, 0x2f, 0x82, 0xb1, 0xf1, 0x77, 0x3b, 0x94, 0x14, 0x45, 0x60, 0x19, 0x0a, 0x0d, 0x6f, 0x7e,
	0x96, 0x52, 0xca, 0x8a, 0x22, 0xb0, 0xbb, 0x94, 0x97, 0x29, 0xa5, 0x92, 0x52, 0x5e, 0x26, 0x94,
	0x43, 0xf1, 0x05, 0x8a, 0xfd, 0xe0, 0x6a, 0xb3, 0x48, 0x69, 0x2a, 0xba, 0x4d, 0xea, 0x5b, 0x02,
	0x4e, 0x98, 0xcf, 0xa1, 0x45, 0x7d, 0xbc, 0xa6, 0x8c, 0xa5, 0x44, 0x90, 0xc4, 0x06, 0xf5, 0x47,
	0x94, 0xb1, 0xbb, 0x1e, 0x49, 0x14, 0x05, 0x51, 0x4a, 0xac, 0x25, 0x1e, 0x4d, 0x01, 0x27, 0xcc,
	0x23, 0xd8, 0x17, 0x8f, 0x74, 0x97, 0x5a, 0x97, 0xd4, 0x56, 0xb0, 0xe1, 0x59, 0xee, 0xc1, 0xb7,
	0x50, 0x8a, 0x13, 0x19, 0x41, 0x73, 0x66, 0x9d, 0x5b, 0xe3, 0x4b, 0x0b, 0x4f, 0x9d, 0xae, 0x33,
	0x9b, 0xaa, 0x96, 0x3d, 0x13, 0x2d, 0xbb, 0x02, 0x85, 0xfe, 0xf8, 0xd2, 0xd2, 0x73, 0xa8, 0x06,
	0xe5, 0xbe, 0x39, 0x34, 0x1d, 0xb3, 0xaf, 0xe7, 0x0f, 0x4e, 0xa0, 0xa4, 0x72, 0x2b, 0x2b, 0xee,
	0xcf, 0x26, 0x43, 0xf3, 0xb5, 0xbe, 0x27, 0x44, 0xaf, 0xba, 0xc3, 0x33, 0x25, 0x3f, 0x9b, 0x0d,
	0x87, 0x7a, 0xee, 0xe0, 0x1f, 0x1a, 0x7c, 0x9a, 0xa6, 0x93, 0x15, 0x70, 0xba, 0xa0, 0x73, 0x57,
	0x7e, 0xfd, 0xfe, 0x02, 0x0a, 0xa2, 0x21, 0xc4, 0x83, 0xfd, 0xfe, 0x4f, 0xbd, 0xac, 0xe0, 0x58,
	0x2e, 0x54, 0x0f, 0x11, 0x7f, 0xd1, 0xb7, 0x50, 0x14, 0x29, 0xa9, 0xfa, 0xd1, 0xa3, 0x7b, 0x9f,
	0xd2, 0x88, 0xb1, 0x95, 0xfa, 0x13, 0x77, 0x8c, 0x2f, 0xa3, 0xef, 0x21, 0x80, 0xd2, 0x6c, 0x22,
	0x2f, 0xaf, 0x89, 0x79, 0xd6, 0x1b, 0xcf, 0x2c, 0xc7, 0xb4, 0xa7, 0x7a, 0xee, 0xe0, 0x9f, 0xb9,
	0x4c, 0x17, 0x96, 0x8f, 0xca, 0x3e, 0xa2, 0x0b, 0x2b, 0xc1, 0x07, 0xba, 0xf0, 0x7f, 0xb5, 0x6c,
	0x17, 0xfe, 0x1a, 0x9a, 0xbb, 0xaf, 0xa6, 0x4c, 0x3f, 0x6e, 0xa4, 0xa8, 0xec, 0xb9, 0x16, 0x80,
	0x0a, 0xb9, 0xe7, 0x72, 0xd7, 0xc8, 0xc9, 0xbd, 0x5f, 0x3c, 0x6a, 0xef, 0x63, 0x09, 0xf4, 0x5d,
	0xee, 0xda, 0x55, 0x92, 0xfc, 0x6c, 0x47, 0x50, 0x4d, 0x71, 0x51, 0x99, 0xaa, 0xc3, 0x61, 0x9e,
	0x44, 0xa9, 0x6a, 0x83, 0x82, 0xe4, 0xa3, 0x7d, 0x09, 0x0d, 0xb5, 0xfb, 0x9a, 0x30, 0xe6, 0x5e,
	0xa7, 0x63, 0x41, 0x82, 0x23, 0x85, 0xbd, 0xdb, 0x2c, 0xf3, 0xef, 0x36, 0xcb, 0xa3, 0x3f, 0x6b,
	0xd0, 0xb8, 0x33, 0x20, 0xd0, 0xa7, 0xb0, 0x3f, 0x1d, 0x9f, 0x39, 0x97, 0x5d, 0xdb, 0xc4, 0xc3,
	0xf1, 0x78, 0xf2, 0x5d, 0xb7, 0x77, 0xae, 0xef, 0xa1, 0x4f, 0xa0, 0x95, 0x7c, 0x5a, 0xe0, 0xde,
	0x74, 0xd4, 0xed, 0xf5, 0x75, 0x0d, 0x3d, 0x01, 0x7d, 0x64, 0x8e, 0xc6, 0xf6, 0x1b, 0x3c, 0x10,
	0x41, 0x3a, 0xeb, 0xf6, 0x4c, 0x3d, 0x87, 0xf6, 0xa1, 0xe1, 0x74, 0x27, 0x19, 0x28, 0x8f, 0xbe,
	0x07, 0x9f, 0x74, 0xcf, 0xf0, 0xa4, 0xdb, 0x3b, 0x37, 0x9d, 0x8c, 0xa1, 0x80, 0x74, 0xa8, 0x5f,
	0xbc, 0x1e, 0x76, 0x2d, 0xec, 0xcc, 0x2c, 0xcb, 0x1c, 0xea, 0xc5, 0xa3, 0x09, 0xc0, 0xee, 0xc3,
	0xf2, 0x6e, 0x6a, 0xd4, 0xa0, 0x3c, 0x19, 0x0f, 0x87, 0x03, 0xeb, 0x57, 0xba, 0x86, 0x1a, 0x50,
	0x95, 0x8e, 0xec, 0xd9, 0xc4, 0xd1, 0x73, 0x22, 0x55, 0xba, 0xfd, 0xee, 0xc4, 0x19, 0x5c, 0x88,
	0xfd, 0x64, 0xd5, 0x9c, 0x75, 0x67, 0x43, 0x47, 0x2f, 0x5c, 0x95, 0xe4, 0xff, 0xa3, 0x3f, 0xfd,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0xb2, 0xc3, 0x3b, 0xa3, 0x0e, 0x00, 0x00,
}
