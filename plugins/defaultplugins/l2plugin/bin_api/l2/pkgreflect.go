// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package l2

import "reflect"

var Types = map[string]reflect.Type{
	"BridgeDomainAddDel":             reflect.TypeOf((*BridgeDomainAddDel)(nil)).Elem(),
	"BridgeDomainAddDelReply":        reflect.TypeOf((*BridgeDomainAddDelReply)(nil)).Elem(),
	"BridgeDomainDetails":            reflect.TypeOf((*BridgeDomainDetails)(nil)).Elem(),
	"BridgeDomainDump":               reflect.TypeOf((*BridgeDomainDump)(nil)).Elem(),
	"BridgeDomainSetMacAge":          reflect.TypeOf((*BridgeDomainSetMacAge)(nil)).Elem(),
	"BridgeDomainSetMacAgeReply":     reflect.TypeOf((*BridgeDomainSetMacAgeReply)(nil)).Elem(),
	"BridgeDomainSwIf":               reflect.TypeOf((*BridgeDomainSwIf)(nil)).Elem(),
	"BridgeFlags":                    reflect.TypeOf((*BridgeFlags)(nil)).Elem(),
	"BridgeFlagsReply":               reflect.TypeOf((*BridgeFlagsReply)(nil)).Elem(),
	"L2FibClearTable":                reflect.TypeOf((*L2FibClearTable)(nil)).Elem(),
	"L2FibClearTableReply":           reflect.TypeOf((*L2FibClearTableReply)(nil)).Elem(),
	"L2FibTableDetails":              reflect.TypeOf((*L2FibTableDetails)(nil)).Elem(),
	"L2FibTableDump":                 reflect.TypeOf((*L2FibTableDump)(nil)).Elem(),
	"L2Flags":                        reflect.TypeOf((*L2Flags)(nil)).Elem(),
	"L2FlagsReply":                   reflect.TypeOf((*L2FlagsReply)(nil)).Elem(),
	"L2InterfacePbbTagRewrite":       reflect.TypeOf((*L2InterfacePbbTagRewrite)(nil)).Elem(),
	"L2InterfacePbbTagRewriteReply":  reflect.TypeOf((*L2InterfacePbbTagRewriteReply)(nil)).Elem(),
	"L2InterfaceVlanTagRewrite":      reflect.TypeOf((*L2InterfaceVlanTagRewrite)(nil)).Elem(),
	"L2InterfaceVlanTagRewriteReply": reflect.TypeOf((*L2InterfaceVlanTagRewriteReply)(nil)).Elem(),
	"L2MacsEvent":                    reflect.TypeOf((*L2MacsEvent)(nil)).Elem(),
	"L2XconnectDetails":              reflect.TypeOf((*L2XconnectDetails)(nil)).Elem(),
	"L2XconnectDump":                 reflect.TypeOf((*L2XconnectDump)(nil)).Elem(),
	"L2fibAddDel":                    reflect.TypeOf((*L2fibAddDel)(nil)).Elem(),
	"L2fibAddDelReply":               reflect.TypeOf((*L2fibAddDelReply)(nil)).Elem(),
	"L2fibFlushAll":                  reflect.TypeOf((*L2fibFlushAll)(nil)).Elem(),
	"L2fibFlushAllReply":             reflect.TypeOf((*L2fibFlushAllReply)(nil)).Elem(),
	"L2fibFlushBd":                   reflect.TypeOf((*L2fibFlushBd)(nil)).Elem(),
	"L2fibFlushBdReply":              reflect.TypeOf((*L2fibFlushBdReply)(nil)).Elem(),
	"L2fibFlushInt":                  reflect.TypeOf((*L2fibFlushInt)(nil)).Elem(),
	"L2fibFlushIntReply":             reflect.TypeOf((*L2fibFlushIntReply)(nil)).Elem(),
	"MacEntry":                       reflect.TypeOf((*MacEntry)(nil)).Elem(),
	"WantL2MacsEvents":               reflect.TypeOf((*WantL2MacsEvents)(nil)).Elem(),
	"WantL2MacsEventsReply":          reflect.TypeOf((*WantL2MacsEventsReply)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"NewBridgeDomainAddDel":             reflect.ValueOf(NewBridgeDomainAddDel),
	"NewBridgeDomainAddDelReply":        reflect.ValueOf(NewBridgeDomainAddDelReply),
	"NewBridgeDomainDetails":            reflect.ValueOf(NewBridgeDomainDetails),
	"NewBridgeDomainDump":               reflect.ValueOf(NewBridgeDomainDump),
	"NewBridgeDomainSetMacAge":          reflect.ValueOf(NewBridgeDomainSetMacAge),
	"NewBridgeDomainSetMacAgeReply":     reflect.ValueOf(NewBridgeDomainSetMacAgeReply),
	"NewBridgeFlags":                    reflect.ValueOf(NewBridgeFlags),
	"NewBridgeFlagsReply":               reflect.ValueOf(NewBridgeFlagsReply),
	"NewL2FibClearTable":                reflect.ValueOf(NewL2FibClearTable),
	"NewL2FibClearTableReply":           reflect.ValueOf(NewL2FibClearTableReply),
	"NewL2FibTableDetails":              reflect.ValueOf(NewL2FibTableDetails),
	"NewL2FibTableDump":                 reflect.ValueOf(NewL2FibTableDump),
	"NewL2Flags":                        reflect.ValueOf(NewL2Flags),
	"NewL2FlagsReply":                   reflect.ValueOf(NewL2FlagsReply),
	"NewL2InterfacePbbTagRewrite":       reflect.ValueOf(NewL2InterfacePbbTagRewrite),
	"NewL2InterfacePbbTagRewriteReply":  reflect.ValueOf(NewL2InterfacePbbTagRewriteReply),
	"NewL2InterfaceVlanTagRewrite":      reflect.ValueOf(NewL2InterfaceVlanTagRewrite),
	"NewL2InterfaceVlanTagRewriteReply": reflect.ValueOf(NewL2InterfaceVlanTagRewriteReply),
	"NewL2MacsEvent":                    reflect.ValueOf(NewL2MacsEvent),
	"NewL2XconnectDetails":              reflect.ValueOf(NewL2XconnectDetails),
	"NewL2XconnectDump":                 reflect.ValueOf(NewL2XconnectDump),
	"NewL2fibAddDel":                    reflect.ValueOf(NewL2fibAddDel),
	"NewL2fibAddDelReply":               reflect.ValueOf(NewL2fibAddDelReply),
	"NewL2fibFlushAll":                  reflect.ValueOf(NewL2fibFlushAll),
	"NewL2fibFlushAllReply":             reflect.ValueOf(NewL2fibFlushAllReply),
	"NewL2fibFlushBd":                   reflect.ValueOf(NewL2fibFlushBd),
	"NewL2fibFlushBdReply":              reflect.ValueOf(NewL2fibFlushBdReply),
	"NewL2fibFlushInt":                  reflect.ValueOf(NewL2fibFlushInt),
	"NewL2fibFlushIntReply":             reflect.ValueOf(NewL2fibFlushIntReply),
	"NewWantL2MacsEvents":               reflect.ValueOf(NewWantL2MacsEvents),
	"NewWantL2MacsEventsReply":          reflect.ValueOf(NewWantL2MacsEventsReply),
}

var Variables = map[string]reflect.Value{}

var Consts = map[string]reflect.Value{
	"VlAPIVersion": reflect.ValueOf(VlAPIVersion),
}
