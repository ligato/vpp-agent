// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package acl

import "reflect"

var Types = map[string]reflect.Type{
	"ACLAddReplace":                reflect.TypeOf((*ACLAddReplace)(nil)).Elem(),
	"ACLAddReplaceReply":           reflect.TypeOf((*ACLAddReplaceReply)(nil)).Elem(),
	"ACLDel":                       reflect.TypeOf((*ACLDel)(nil)).Elem(),
	"ACLDelReply":                  reflect.TypeOf((*ACLDelReply)(nil)).Elem(),
	"ACLDetails":                   reflect.TypeOf((*ACLDetails)(nil)).Elem(),
	"ACLDump":                      reflect.TypeOf((*ACLDump)(nil)).Elem(),
	"ACLInterfaceAddDel":           reflect.TypeOf((*ACLInterfaceAddDel)(nil)).Elem(),
	"ACLInterfaceAddDelReply":      reflect.TypeOf((*ACLInterfaceAddDelReply)(nil)).Elem(),
	"ACLInterfaceListDetails":      reflect.TypeOf((*ACLInterfaceListDetails)(nil)).Elem(),
	"ACLInterfaceListDump":         reflect.TypeOf((*ACLInterfaceListDump)(nil)).Elem(),
	"ACLInterfaceSetACLList":       reflect.TypeOf((*ACLInterfaceSetACLList)(nil)).Elem(),
	"ACLInterfaceSetACLListReply":  reflect.TypeOf((*ACLInterfaceSetACLListReply)(nil)).Elem(),
	"ACLPluginControlPing":         reflect.TypeOf((*ACLPluginControlPing)(nil)).Elem(),
	"ACLPluginControlPingReply":    reflect.TypeOf((*ACLPluginControlPingReply)(nil)).Elem(),
	"ACLPluginGetVersion":          reflect.TypeOf((*ACLPluginGetVersion)(nil)).Elem(),
	"ACLPluginGetVersionReply":     reflect.TypeOf((*ACLPluginGetVersionReply)(nil)).Elem(),
	"ACLRule":                      reflect.TypeOf((*ACLRule)(nil)).Elem(),
	"MacipACLAdd":                  reflect.TypeOf((*MacipACLAdd)(nil)).Elem(),
	"MacipACLAddReplace":           reflect.TypeOf((*MacipACLAddReplace)(nil)).Elem(),
	"MacipACLAddReplaceReply":      reflect.TypeOf((*MacipACLAddReplaceReply)(nil)).Elem(),
	"MacipACLAddReply":             reflect.TypeOf((*MacipACLAddReply)(nil)).Elem(),
	"MacipACLDel":                  reflect.TypeOf((*MacipACLDel)(nil)).Elem(),
	"MacipACLDelReply":             reflect.TypeOf((*MacipACLDelReply)(nil)).Elem(),
	"MacipACLDetails":              reflect.TypeOf((*MacipACLDetails)(nil)).Elem(),
	"MacipACLDump":                 reflect.TypeOf((*MacipACLDump)(nil)).Elem(),
	"MacipACLInterfaceAddDel":      reflect.TypeOf((*MacipACLInterfaceAddDel)(nil)).Elem(),
	"MacipACLInterfaceAddDelReply": reflect.TypeOf((*MacipACLInterfaceAddDelReply)(nil)).Elem(),
	"MacipACLInterfaceGet":         reflect.TypeOf((*MacipACLInterfaceGet)(nil)).Elem(),
	"MacipACLInterfaceGetReply":    reflect.TypeOf((*MacipACLInterfaceGetReply)(nil)).Elem(),
	"MacipACLInterfaceListDetails": reflect.TypeOf((*MacipACLInterfaceListDetails)(nil)).Elem(),
	"MacipACLInterfaceListDump":    reflect.TypeOf((*MacipACLInterfaceListDump)(nil)).Elem(),
	"MacipACLRule":                 reflect.TypeOf((*MacipACLRule)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"NewACLAddReplace":                reflect.ValueOf(NewACLAddReplace),
	"NewACLAddReplaceReply":           reflect.ValueOf(NewACLAddReplaceReply),
	"NewACLDel":                       reflect.ValueOf(NewACLDel),
	"NewACLDelReply":                  reflect.ValueOf(NewACLDelReply),
	"NewACLDetails":                   reflect.ValueOf(NewACLDetails),
	"NewACLDump":                      reflect.ValueOf(NewACLDump),
	"NewACLInterfaceAddDel":           reflect.ValueOf(NewACLInterfaceAddDel),
	"NewACLInterfaceAddDelReply":      reflect.ValueOf(NewACLInterfaceAddDelReply),
	"NewACLInterfaceListDetails":      reflect.ValueOf(NewACLInterfaceListDetails),
	"NewACLInterfaceListDump":         reflect.ValueOf(NewACLInterfaceListDump),
	"NewACLInterfaceSetACLList":       reflect.ValueOf(NewACLInterfaceSetACLList),
	"NewACLInterfaceSetACLListReply":  reflect.ValueOf(NewACLInterfaceSetACLListReply),
	"NewACLPluginControlPing":         reflect.ValueOf(NewACLPluginControlPing),
	"NewACLPluginControlPingReply":    reflect.ValueOf(NewACLPluginControlPingReply),
	"NewACLPluginGetVersion":          reflect.ValueOf(NewACLPluginGetVersion),
	"NewACLPluginGetVersionReply":     reflect.ValueOf(NewACLPluginGetVersionReply),
	"NewMacipACLAdd":                  reflect.ValueOf(NewMacipACLAdd),
	"NewMacipACLAddReplace":           reflect.ValueOf(NewMacipACLAddReplace),
	"NewMacipACLAddReplaceReply":      reflect.ValueOf(NewMacipACLAddReplaceReply),
	"NewMacipACLAddReply":             reflect.ValueOf(NewMacipACLAddReply),
	"NewMacipACLDel":                  reflect.ValueOf(NewMacipACLDel),
	"NewMacipACLDelReply":             reflect.ValueOf(NewMacipACLDelReply),
	"NewMacipACLDetails":              reflect.ValueOf(NewMacipACLDetails),
	"NewMacipACLDump":                 reflect.ValueOf(NewMacipACLDump),
	"NewMacipACLInterfaceAddDel":      reflect.ValueOf(NewMacipACLInterfaceAddDel),
	"NewMacipACLInterfaceAddDelReply": reflect.ValueOf(NewMacipACLInterfaceAddDelReply),
	"NewMacipACLInterfaceGet":         reflect.ValueOf(NewMacipACLInterfaceGet),
	"NewMacipACLInterfaceGetReply":    reflect.ValueOf(NewMacipACLInterfaceGetReply),
	"NewMacipACLInterfaceListDetails": reflect.ValueOf(NewMacipACLInterfaceListDetails),
	"NewMacipACLInterfaceListDump":    reflect.ValueOf(NewMacipACLInterfaceListDump),
}

var Variables = map[string]reflect.Value{}

var Consts = map[string]reflect.Value{
	"VlAPIVersion": reflect.ValueOf(VlAPIVersion),
}
