// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: l3.proto

/*
Package l3 is a generated protocol buffer package.

It is generated from these files:
	l3.proto

It has these top-level messages:
	LinuxStaticRoutes
	LinuxStaticArpEntries
*/
package l3

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type LinuxStaticRoutes_Route_Namespace_NamespaceType int32

const (
	LinuxStaticRoutes_Route_Namespace_PID_REF_NS          LinuxStaticRoutes_Route_Namespace_NamespaceType = 0
	LinuxStaticRoutes_Route_Namespace_MICROSERVICE_REF_NS LinuxStaticRoutes_Route_Namespace_NamespaceType = 1
	LinuxStaticRoutes_Route_Namespace_NAMED_NS            LinuxStaticRoutes_Route_Namespace_NamespaceType = 2
	LinuxStaticRoutes_Route_Namespace_FILE_REF_NS         LinuxStaticRoutes_Route_Namespace_NamespaceType = 3
)

var LinuxStaticRoutes_Route_Namespace_NamespaceType_name = map[int32]string{
	0: "PID_REF_NS",
	1: "MICROSERVICE_REF_NS",
	2: "NAMED_NS",
	3: "FILE_REF_NS",
}
var LinuxStaticRoutes_Route_Namespace_NamespaceType_value = map[string]int32{
	"PID_REF_NS":          0,
	"MICROSERVICE_REF_NS": 1,
	"NAMED_NS":            2,
	"FILE_REF_NS":         3,
}

func (x LinuxStaticRoutes_Route_Namespace_NamespaceType) String() string {
	return proto.EnumName(LinuxStaticRoutes_Route_Namespace_NamespaceType_name, int32(x))
}
func (LinuxStaticRoutes_Route_Namespace_NamespaceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{0, 0, 0, 0}
}

type LinuxStaticRoutes_Route_Scope_ScopeType int32

const (
	LinuxStaticRoutes_Route_Scope_GLOBAL LinuxStaticRoutes_Route_Scope_ScopeType = 0
	LinuxStaticRoutes_Route_Scope_SITE   LinuxStaticRoutes_Route_Scope_ScopeType = 1
	LinuxStaticRoutes_Route_Scope_LINK   LinuxStaticRoutes_Route_Scope_ScopeType = 2
	LinuxStaticRoutes_Route_Scope_HOST   LinuxStaticRoutes_Route_Scope_ScopeType = 3
)

var LinuxStaticRoutes_Route_Scope_ScopeType_name = map[int32]string{
	0: "GLOBAL",
	1: "SITE",
	2: "LINK",
	3: "HOST",
}
var LinuxStaticRoutes_Route_Scope_ScopeType_value = map[string]int32{
	"GLOBAL": 0,
	"SITE":   1,
	"LINK":   2,
	"HOST":   3,
}

func (x LinuxStaticRoutes_Route_Scope_ScopeType) String() string {
	return proto.EnumName(LinuxStaticRoutes_Route_Scope_ScopeType_name, int32(x))
}
func (LinuxStaticRoutes_Route_Scope_ScopeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{0, 0, 1, 0}
}

type LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType int32

const (
	LinuxStaticArpEntries_ArpEntry_Namespace_PID_REF_NS          LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType = 0
	LinuxStaticArpEntries_ArpEntry_Namespace_MICROSERVICE_REF_NS LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType = 1
	LinuxStaticArpEntries_ArpEntry_Namespace_NAMED_NS            LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType = 2
	LinuxStaticArpEntries_ArpEntry_Namespace_FILE_REF_NS         LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType = 3
)

var LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType_name = map[int32]string{
	0: "PID_REF_NS",
	1: "MICROSERVICE_REF_NS",
	2: "NAMED_NS",
	3: "FILE_REF_NS",
}
var LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType_value = map[string]int32{
	"PID_REF_NS":          0,
	"MICROSERVICE_REF_NS": 1,
	"NAMED_NS":            2,
	"FILE_REF_NS":         3,
}

func (x LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType) String() string {
	return proto.EnumName(LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType_name, int32(x))
}
func (LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{1, 0, 0, 0}
}

type LinuxStaticArpEntries_ArpEntry_IpFamily_Family int32

const (
	LinuxStaticArpEntries_ArpEntry_IpFamily_IPV4 LinuxStaticArpEntries_ArpEntry_IpFamily_Family = 0
	LinuxStaticArpEntries_ArpEntry_IpFamily_IPV6 LinuxStaticArpEntries_ArpEntry_IpFamily_Family = 1
	LinuxStaticArpEntries_ArpEntry_IpFamily_ALL  LinuxStaticArpEntries_ArpEntry_IpFamily_Family = 2
	LinuxStaticArpEntries_ArpEntry_IpFamily_MPLS LinuxStaticArpEntries_ArpEntry_IpFamily_Family = 3
)

var LinuxStaticArpEntries_ArpEntry_IpFamily_Family_name = map[int32]string{
	0: "IPV4",
	1: "IPV6",
	2: "ALL",
	3: "MPLS",
}
var LinuxStaticArpEntries_ArpEntry_IpFamily_Family_value = map[string]int32{
	"IPV4": 0,
	"IPV6": 1,
	"ALL":  2,
	"MPLS": 3,
}

func (x LinuxStaticArpEntries_ArpEntry_IpFamily_Family) String() string {
	return proto.EnumName(LinuxStaticArpEntries_ArpEntry_IpFamily_Family_name, int32(x))
}
func (LinuxStaticArpEntries_ArpEntry_IpFamily_Family) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{1, 0, 1, 0}
}

type LinuxStaticArpEntries_ArpEntry_NudState_NudStateType int32

const (
	LinuxStaticArpEntries_ArpEntry_NudState_PERMANENT LinuxStaticArpEntries_ArpEntry_NudState_NudStateType = 0
	LinuxStaticArpEntries_ArpEntry_NudState_NOARP     LinuxStaticArpEntries_ArpEntry_NudState_NudStateType = 1
	LinuxStaticArpEntries_ArpEntry_NudState_REACHABLE LinuxStaticArpEntries_ArpEntry_NudState_NudStateType = 2
	LinuxStaticArpEntries_ArpEntry_NudState_STALE     LinuxStaticArpEntries_ArpEntry_NudState_NudStateType = 3
)

var LinuxStaticArpEntries_ArpEntry_NudState_NudStateType_name = map[int32]string{
	0: "PERMANENT",
	1: "NOARP",
	2: "REACHABLE",
	3: "STALE",
}
var LinuxStaticArpEntries_ArpEntry_NudState_NudStateType_value = map[string]int32{
	"PERMANENT": 0,
	"NOARP":     1,
	"REACHABLE": 2,
	"STALE":     3,
}

func (x LinuxStaticArpEntries_ArpEntry_NudState_NudStateType) String() string {
	return proto.EnumName(LinuxStaticArpEntries_ArpEntry_NudState_NudStateType_name, int32(x))
}
func (LinuxStaticArpEntries_ArpEntry_NudState_NudStateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{1, 0, 2, 0}
}

// static ip routes
type LinuxStaticRoutes struct {
	Route []*LinuxStaticRoutes_Route `protobuf:"bytes,1,rep,name=route" json:"route,omitempty"`
}

func (m *LinuxStaticRoutes) Reset()                    { *m = LinuxStaticRoutes{} }
func (m *LinuxStaticRoutes) String() string            { return proto.CompactTextString(m) }
func (*LinuxStaticRoutes) ProtoMessage()               {}
func (*LinuxStaticRoutes) Descriptor() ([]byte, []int) { return fileDescriptorL3, []int{0} }

func (m *LinuxStaticRoutes) GetRoute() []*LinuxStaticRoutes_Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type LinuxStaticRoutes_Route struct {
	Name        string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Default     bool                               `protobuf:"varint,2,opt,name=default,proto3" json:"default,omitempty"`
	Namespace   *LinuxStaticRoutes_Route_Namespace `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Interface   string                             `protobuf:"bytes,5,opt,name=interface,proto3" json:"interface,omitempty"`
	Description string                             `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Scope       *LinuxStaticRoutes_Route_Scope     `protobuf:"bytes,7,opt,name=scope" json:"scope,omitempty"`
	DstIpAddr   string                             `protobuf:"bytes,8,opt,name=dst_ip_addr,json=dstIpAddr,proto3" json:"dst_ip_addr,omitempty"`
	SrcIpAddr   string                             `protobuf:"bytes,9,opt,name=src_ip_addr,json=srcIpAddr,proto3" json:"src_ip_addr,omitempty"`
	GwAddr      string                             `protobuf:"bytes,10,opt,name=gw_addr,json=gwAddr,proto3" json:"gw_addr,omitempty"`
	Metric      uint32                             `protobuf:"varint,11,opt,name=metric,proto3" json:"metric,omitempty"`
	Table       uint32                             `protobuf:"varint,12,opt,name=table,proto3" json:"table,omitempty"`
}

func (m *LinuxStaticRoutes_Route) Reset()                    { *m = LinuxStaticRoutes_Route{} }
func (m *LinuxStaticRoutes_Route) String() string            { return proto.CompactTextString(m) }
func (*LinuxStaticRoutes_Route) ProtoMessage()               {}
func (*LinuxStaticRoutes_Route) Descriptor() ([]byte, []int) { return fileDescriptorL3, []int{0, 0} }

func (m *LinuxStaticRoutes_Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LinuxStaticRoutes_Route) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

func (m *LinuxStaticRoutes_Route) GetNamespace() *LinuxStaticRoutes_Route_Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *LinuxStaticRoutes_Route) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *LinuxStaticRoutes_Route) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *LinuxStaticRoutes_Route) GetScope() *LinuxStaticRoutes_Route_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *LinuxStaticRoutes_Route) GetDstIpAddr() string {
	if m != nil {
		return m.DstIpAddr
	}
	return ""
}

func (m *LinuxStaticRoutes_Route) GetSrcIpAddr() string {
	if m != nil {
		return m.SrcIpAddr
	}
	return ""
}

func (m *LinuxStaticRoutes_Route) GetGwAddr() string {
	if m != nil {
		return m.GwAddr
	}
	return ""
}

func (m *LinuxStaticRoutes_Route) GetMetric() uint32 {
	if m != nil {
		return m.Metric
	}
	return 0
}

func (m *LinuxStaticRoutes_Route) GetTable() uint32 {
	if m != nil {
		return m.Table
	}
	return 0
}

type LinuxStaticRoutes_Route_Namespace struct {
	Type         LinuxStaticRoutes_Route_Namespace_NamespaceType `protobuf:"varint,1,opt,name=type,proto3,enum=l3.LinuxStaticRoutes_Route_Namespace_NamespaceType" json:"type,omitempty"`
	Pid          uint32                                          `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Microservice string                                          `protobuf:"bytes,3,opt,name=microservice,proto3" json:"microservice,omitempty"`
	Name         string                                          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Filepath     string                                          `protobuf:"bytes,5,opt,name=filepath,proto3" json:"filepath,omitempty"`
}

func (m *LinuxStaticRoutes_Route_Namespace) Reset()         { *m = LinuxStaticRoutes_Route_Namespace{} }
func (m *LinuxStaticRoutes_Route_Namespace) String() string { return proto.CompactTextString(m) }
func (*LinuxStaticRoutes_Route_Namespace) ProtoMessage()    {}
func (*LinuxStaticRoutes_Route_Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{0, 0, 0}
}

func (m *LinuxStaticRoutes_Route_Namespace) GetType() LinuxStaticRoutes_Route_Namespace_NamespaceType {
	if m != nil {
		return m.Type
	}
	return LinuxStaticRoutes_Route_Namespace_PID_REF_NS
}

func (m *LinuxStaticRoutes_Route_Namespace) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *LinuxStaticRoutes_Route_Namespace) GetMicroservice() string {
	if m != nil {
		return m.Microservice
	}
	return ""
}

func (m *LinuxStaticRoutes_Route_Namespace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LinuxStaticRoutes_Route_Namespace) GetFilepath() string {
	if m != nil {
		return m.Filepath
	}
	return ""
}

type LinuxStaticRoutes_Route_Scope struct {
	Type LinuxStaticRoutes_Route_Scope_ScopeType `protobuf:"varint,1,opt,name=type,proto3,enum=l3.LinuxStaticRoutes_Route_Scope_ScopeType" json:"type,omitempty"`
}

func (m *LinuxStaticRoutes_Route_Scope) Reset()         { *m = LinuxStaticRoutes_Route_Scope{} }
func (m *LinuxStaticRoutes_Route_Scope) String() string { return proto.CompactTextString(m) }
func (*LinuxStaticRoutes_Route_Scope) ProtoMessage()    {}
func (*LinuxStaticRoutes_Route_Scope) Descriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{0, 0, 1}
}

func (m *LinuxStaticRoutes_Route_Scope) GetType() LinuxStaticRoutes_Route_Scope_ScopeType {
	if m != nil {
		return m.Type
	}
	return LinuxStaticRoutes_Route_Scope_GLOBAL
}

// static arp entires
type LinuxStaticArpEntries struct {
	ArpEntry []*LinuxStaticArpEntries_ArpEntry `protobuf:"bytes,1,rep,name=arp_entry,json=arpEntry" json:"arp_entry,omitempty"`
}

func (m *LinuxStaticArpEntries) Reset()                    { *m = LinuxStaticArpEntries{} }
func (m *LinuxStaticArpEntries) String() string            { return proto.CompactTextString(m) }
func (*LinuxStaticArpEntries) ProtoMessage()               {}
func (*LinuxStaticArpEntries) Descriptor() ([]byte, []int) { return fileDescriptorL3, []int{1} }

func (m *LinuxStaticArpEntries) GetArpEntry() []*LinuxStaticArpEntries_ArpEntry {
	if m != nil {
		return m.ArpEntry
	}
	return nil
}

type LinuxStaticArpEntries_ArpEntry struct {
	Name      string                                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace *LinuxStaticArpEntries_ArpEntry_Namespace `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Interface string                                    `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`
	IpFamily  *LinuxStaticArpEntries_ArpEntry_IpFamily  `protobuf:"bytes,4,opt,name=ip_family,json=ipFamily" json:"ip_family,omitempty"`
	State     *LinuxStaticArpEntries_ArpEntry_NudState  `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	IpAddr    string                                    `protobuf:"bytes,6,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	HwAddress string                                    `protobuf:"bytes,7,opt,name=hw_address,json=hwAddress,proto3" json:"hw_address,omitempty"`
}

func (m *LinuxStaticArpEntries_ArpEntry) Reset()         { *m = LinuxStaticArpEntries_ArpEntry{} }
func (m *LinuxStaticArpEntries_ArpEntry) String() string { return proto.CompactTextString(m) }
func (*LinuxStaticArpEntries_ArpEntry) ProtoMessage()    {}
func (*LinuxStaticArpEntries_ArpEntry) Descriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{1, 0}
}

func (m *LinuxStaticArpEntries_ArpEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LinuxStaticArpEntries_ArpEntry) GetNamespace() *LinuxStaticArpEntries_ArpEntry_Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *LinuxStaticArpEntries_ArpEntry) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *LinuxStaticArpEntries_ArpEntry) GetIpFamily() *LinuxStaticArpEntries_ArpEntry_IpFamily {
	if m != nil {
		return m.IpFamily
	}
	return nil
}

func (m *LinuxStaticArpEntries_ArpEntry) GetState() *LinuxStaticArpEntries_ArpEntry_NudState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *LinuxStaticArpEntries_ArpEntry) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *LinuxStaticArpEntries_ArpEntry) GetHwAddress() string {
	if m != nil {
		return m.HwAddress
	}
	return ""
}

type LinuxStaticArpEntries_ArpEntry_Namespace struct {
	Type         LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType `protobuf:"varint,1,opt,name=type,proto3,enum=l3.LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType" json:"type,omitempty"`
	Pid          uint32                                                 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Microservice string                                                 `protobuf:"bytes,3,opt,name=microservice,proto3" json:"microservice,omitempty"`
	Name         string                                                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Filepath     string                                                 `protobuf:"bytes,5,opt,name=filepath,proto3" json:"filepath,omitempty"`
}

func (m *LinuxStaticArpEntries_ArpEntry_Namespace) Reset() {
	*m = LinuxStaticArpEntries_ArpEntry_Namespace{}
}
func (m *LinuxStaticArpEntries_ArpEntry_Namespace) String() string { return proto.CompactTextString(m) }
func (*LinuxStaticArpEntries_ArpEntry_Namespace) ProtoMessage()    {}
func (*LinuxStaticArpEntries_ArpEntry_Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{1, 0, 0}
}

func (m *LinuxStaticArpEntries_ArpEntry_Namespace) GetType() LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType {
	if m != nil {
		return m.Type
	}
	return LinuxStaticArpEntries_ArpEntry_Namespace_PID_REF_NS
}

func (m *LinuxStaticArpEntries_ArpEntry_Namespace) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *LinuxStaticArpEntries_ArpEntry_Namespace) GetMicroservice() string {
	if m != nil {
		return m.Microservice
	}
	return ""
}

func (m *LinuxStaticArpEntries_ArpEntry_Namespace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LinuxStaticArpEntries_ArpEntry_Namespace) GetFilepath() string {
	if m != nil {
		return m.Filepath
	}
	return ""
}

type LinuxStaticArpEntries_ArpEntry_IpFamily struct {
	Family LinuxStaticArpEntries_ArpEntry_IpFamily_Family `protobuf:"varint,1,opt,name=family,proto3,enum=l3.LinuxStaticArpEntries_ArpEntry_IpFamily_Family" json:"family,omitempty"`
}

func (m *LinuxStaticArpEntries_ArpEntry_IpFamily) Reset() {
	*m = LinuxStaticArpEntries_ArpEntry_IpFamily{}
}
func (m *LinuxStaticArpEntries_ArpEntry_IpFamily) String() string { return proto.CompactTextString(m) }
func (*LinuxStaticArpEntries_ArpEntry_IpFamily) ProtoMessage()    {}
func (*LinuxStaticArpEntries_ArpEntry_IpFamily) Descriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{1, 0, 1}
}

func (m *LinuxStaticArpEntries_ArpEntry_IpFamily) GetFamily() LinuxStaticArpEntries_ArpEntry_IpFamily_Family {
	if m != nil {
		return m.Family
	}
	return LinuxStaticArpEntries_ArpEntry_IpFamily_IPV4
}

type LinuxStaticArpEntries_ArpEntry_NudState struct {
	Type LinuxStaticArpEntries_ArpEntry_NudState_NudStateType `protobuf:"varint,1,opt,name=type,proto3,enum=l3.LinuxStaticArpEntries_ArpEntry_NudState_NudStateType" json:"type,omitempty"`
}

func (m *LinuxStaticArpEntries_ArpEntry_NudState) Reset() {
	*m = LinuxStaticArpEntries_ArpEntry_NudState{}
}
func (m *LinuxStaticArpEntries_ArpEntry_NudState) String() string { return proto.CompactTextString(m) }
func (*LinuxStaticArpEntries_ArpEntry_NudState) ProtoMessage()    {}
func (*LinuxStaticArpEntries_ArpEntry_NudState) Descriptor() ([]byte, []int) {
	return fileDescriptorL3, []int{1, 0, 2}
}

func (m *LinuxStaticArpEntries_ArpEntry_NudState) GetType() LinuxStaticArpEntries_ArpEntry_NudState_NudStateType {
	if m != nil {
		return m.Type
	}
	return LinuxStaticArpEntries_ArpEntry_NudState_PERMANENT
}

func init() {
	proto.RegisterType((*LinuxStaticRoutes)(nil), "l3.LinuxStaticRoutes")
	proto.RegisterType((*LinuxStaticRoutes_Route)(nil), "l3.LinuxStaticRoutes.Route")
	proto.RegisterType((*LinuxStaticRoutes_Route_Namespace)(nil), "l3.LinuxStaticRoutes.Route.Namespace")
	proto.RegisterType((*LinuxStaticRoutes_Route_Scope)(nil), "l3.LinuxStaticRoutes.Route.Scope")
	proto.RegisterType((*LinuxStaticArpEntries)(nil), "l3.LinuxStaticArpEntries")
	proto.RegisterType((*LinuxStaticArpEntries_ArpEntry)(nil), "l3.LinuxStaticArpEntries.ArpEntry")
	proto.RegisterType((*LinuxStaticArpEntries_ArpEntry_Namespace)(nil), "l3.LinuxStaticArpEntries.ArpEntry.Namespace")
	proto.RegisterType((*LinuxStaticArpEntries_ArpEntry_IpFamily)(nil), "l3.LinuxStaticArpEntries.ArpEntry.IpFamily")
	proto.RegisterType((*LinuxStaticArpEntries_ArpEntry_NudState)(nil), "l3.LinuxStaticArpEntries.ArpEntry.NudState")
	proto.RegisterEnum("l3.LinuxStaticRoutes_Route_Namespace_NamespaceType", LinuxStaticRoutes_Route_Namespace_NamespaceType_name, LinuxStaticRoutes_Route_Namespace_NamespaceType_value)
	proto.RegisterEnum("l3.LinuxStaticRoutes_Route_Scope_ScopeType", LinuxStaticRoutes_Route_Scope_ScopeType_name, LinuxStaticRoutes_Route_Scope_ScopeType_value)
	proto.RegisterEnum("l3.LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType", LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType_name, LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType_value)
	proto.RegisterEnum("l3.LinuxStaticArpEntries_ArpEntry_IpFamily_Family", LinuxStaticArpEntries_ArpEntry_IpFamily_Family_name, LinuxStaticArpEntries_ArpEntry_IpFamily_Family_value)
	proto.RegisterEnum("l3.LinuxStaticArpEntries_ArpEntry_NudState_NudStateType", LinuxStaticArpEntries_ArpEntry_NudState_NudStateType_name, LinuxStaticArpEntries_ArpEntry_NudState_NudStateType_value)
}

func init() { proto.RegisterFile("l3.proto", fileDescriptorL3) }

var fileDescriptorL3 = []byte{
	// 756 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x55, 0x4b, 0x6f, 0xda, 0x4c,
	0x14, 0x8d, 0x31, 0x36, 0xf6, 0x05, 0xf2, 0xf9, 0x9b, 0x3e, 0x62, 0xd1, 0x87, 0x28, 0x52, 0x25,
	0xa4, 0x56, 0x54, 0x85, 0xbe, 0xd4, 0x4d, 0xe4, 0x10, 0x27, 0x71, 0x6a, 0x0c, 0x1a, 0x50, 0xba,
	0x44, 0x8e, 0x6d, 0x92, 0x91, 0x78, 0x58, 0xf6, 0xd0, 0x94, 0x55, 0x97, 0x5d, 0x57, 0xd9, 0x55,
	0xfd, 0x65, 0xfd, 0x11, 0xfd, 0x0d, 0xd5, 0x8c, 0xcd, 0x2b, 0x89, 0xf2, 0xd8, 0x76, 0x83, 0xcf,
	0xbd, 0xe7, 0xce, 0xbd, 0xa3, 0x7b, 0xe6, 0x08, 0x50, 0x86, 0x8d, 0x5a, 0x18, 0x4d, 0xe8, 0x04,
	0x65, 0x86, 0x8d, 0xca, 0x6f, 0x19, 0xfe, 0xb7, 0xc9, 0x78, 0xfa, 0xb5, 0x4b, 0x5d, 0x4a, 0x3c,
	0x3c, 0x99, 0xd2, 0x20, 0x46, 0xaf, 0x41, 0x8a, 0x18, 0xd2, 0x85, 0xb2, 0x58, 0xcd, 0xd7, 0x1f,
	0xd5, 0x86, 0x8d, 0xda, 0xa5, 0xaa, 0x1a, 0xff, 0xe0, 0xa4, 0xb2, 0xf4, 0x43, 0x06, 0x89, 0x27,
	0x10, 0x82, 0xec, 0xd8, 0x1d, 0xb1, 0xb3, 0x42, 0x55, 0xc5, 0x1c, 0x23, 0x1d, 0x72, 0x7e, 0x30,
	0x70, 0xa7, 0x43, 0xaa, 0x67, 0xca, 0x42, 0x55, 0xc1, 0xf3, 0x10, 0x35, 0x41, 0x65, 0x15, 0x71,
	0xe8, 0x7a, 0x81, 0x2e, 0x96, 0x85, 0x6a, 0xbe, 0xfe, 0xfc, 0x9a, 0x71, 0x35, 0x67, 0x5e, 0x8c,
	0x97, 0xe7, 0xd0, 0x63, 0x50, 0xc9, 0x98, 0x06, 0xd1, 0x80, 0x35, 0x91, 0xf8, 0xdc, 0x65, 0x02,
	0x95, 0x21, 0xef, 0x07, 0xb1, 0x17, 0x91, 0x90, 0x92, 0xc9, 0x58, 0x97, 0x39, 0xbf, 0x9a, 0x42,
	0xef, 0x41, 0x8a, 0xbd, 0x49, 0x18, 0xe8, 0x39, 0x7e, 0x81, 0x67, 0xd7, 0x5d, 0xa0, 0xcb, 0x0a,
	0x71, 0x52, 0x8f, 0x9e, 0x42, 0xde, 0x8f, 0x69, 0x9f, 0x84, 0x7d, 0xd7, 0xf7, 0x23, 0x5d, 0x49,
	0x46, 0xfb, 0x31, 0xb5, 0x42, 0xc3, 0xf7, 0x23, 0xc6, 0xc7, 0x91, 0xb7, 0xe0, 0xd5, 0x84, 0x8f,
	0x23, 0x2f, 0xe5, 0xb7, 0x20, 0x77, 0x72, 0x96, 0x70, 0xc0, 0x39, 0xf9, 0xe4, 0x8c, 0x13, 0x0f,
	0x41, 0x1e, 0x05, 0x34, 0x22, 0x9e, 0x9e, 0x2f, 0x0b, 0xd5, 0x22, 0x4e, 0x23, 0x74, 0x1f, 0x24,
	0xea, 0x1e, 0x0f, 0x03, 0xbd, 0xc0, 0xd3, 0x49, 0x50, 0x3a, 0xcf, 0x80, 0xba, 0x58, 0x0c, 0xda,
	0x87, 0x2c, 0x9d, 0x85, 0x89, 0x00, 0x9b, 0xf5, 0xc6, 0xad, 0xb6, 0xb9, 0x44, 0xbd, 0x59, 0x18,
	0x60, 0xde, 0x00, 0x69, 0x20, 0x86, 0xc4, 0xe7, 0x8a, 0x15, 0x31, 0x83, 0xa8, 0x02, 0x85, 0x11,
	0xf1, 0xa2, 0x49, 0x1c, 0x44, 0x5f, 0x48, 0x2a, 0x98, 0x8a, 0xd7, 0x72, 0x0b, 0xfd, 0xb3, 0x2b,
	0xfa, 0x97, 0x40, 0x19, 0x90, 0x61, 0x10, 0xba, 0xf4, 0x34, 0xd5, 0x67, 0x11, 0x57, 0x3e, 0x43,
	0x71, 0x6d, 0x38, 0xda, 0x04, 0xe8, 0x58, 0xbb, 0x7d, 0x6c, 0xee, 0xf5, 0x9d, 0xae, 0xb6, 0x81,
	0xb6, 0xe0, 0x5e, 0xcb, 0x6a, 0xe2, 0x76, 0xd7, 0xc4, 0x47, 0x56, 0xd3, 0x9c, 0x13, 0x02, 0x2a,
	0x80, 0xe2, 0x18, 0x2d, 0x73, 0x97, 0x45, 0x19, 0xf4, 0x1f, 0xe4, 0xf7, 0x2c, 0x7b, 0x41, 0x8b,
	0xa5, 0x6f, 0x20, 0x71, 0xb1, 0xd0, 0xf6, 0xda, 0x42, 0x5e, 0xdc, 0xa8, 0x6e, 0xf2, 0xbb, 0x5c,
	0x44, 0xe5, 0x2d, 0xa8, 0x8b, 0x14, 0x02, 0x90, 0xf7, 0xed, 0xf6, 0x8e, 0x61, 0x6b, 0x1b, 0x48,
	0x81, 0x6c, 0xd7, 0xea, 0x99, 0x9a, 0xc0, 0x90, 0x6d, 0x39, 0x9f, 0xb4, 0x0c, 0x43, 0x07, 0xed,
	0x6e, 0x4f, 0x13, 0x2b, 0x7f, 0x72, 0xf0, 0x60, 0x65, 0x90, 0x11, 0x85, 0xe6, 0x98, 0x46, 0x24,
	0x88, 0xd1, 0x36, 0xa8, 0x6e, 0x14, 0xf6, 0x83, 0x31, 0x8d, 0x66, 0xa9, 0xc9, 0x2a, 0x17, 0xae,
	0xb5, 0xac, 0xae, 0xa5, 0x70, 0x86, 0x15, 0x37, 0x45, 0xa5, 0xf3, 0x1c, 0x28, 0xf3, 0xf4, 0x95,
	0x8e, 0x3b, 0x5c, 0xf5, 0x55, 0x86, 0x3f, 0xeb, 0x97, 0x37, 0x4f, 0xb8, 0x85, 0xbd, 0xc4, 0x8b,
	0xf6, 0x3a, 0x00, 0x95, 0x84, 0xfd, 0x81, 0x3b, 0x22, 0xc3, 0x19, 0x17, 0x3d, 0x7f, 0x69, 0xc5,
	0x57, 0x4d, 0xb2, 0xc2, 0x3d, 0x7e, 0x04, 0x2b, 0x24, 0x45, 0xc8, 0x00, 0x29, 0xa6, 0x2e, 0x4d,
	0x2c, 0x7c, 0xbb, 0x2e, 0xce, 0xd4, 0x67, 0x24, 0x33, 0x24, 0xfb, 0x30, 0x43, 0xcd, 0xcd, 0x96,
	0xf8, 0x5c, 0x26, 0x89, 0xd3, 0x9e, 0x00, 0x9c, 0x26, 0x4e, 0x0b, 0xe2, 0x98, 0xfb, 0x5c, 0xc5,
	0xea, 0x29, 0x37, 0x5b, 0x10, 0xc7, 0xa5, 0x9f, 0x6b, 0x0e, 0x72, 0xd6, 0x1e, 0xcc, 0xc7, 0xbb,
	0xec, 0xed, 0x5f, 0x34, 0xd2, 0x77, 0x01, 0x94, 0xb9, 0x5c, 0xe8, 0x10, 0xe4, 0x54, 0xeb, 0x64,
	0x3b, 0xf5, 0x3b, 0x68, 0x5d, 0x4b, 0x25, 0x4f, 0x3b, 0x54, 0x5e, 0x81, 0x9c, 0x76, 0x55, 0x20,
	0x6b, 0x75, 0x8e, 0xde, 0x24, 0x96, 0xb2, 0x3a, 0x47, 0xef, 0x34, 0x01, 0xe5, 0x40, 0x34, 0x6c,
	0x3b, 0x71, 0x54, 0xab, 0x63, 0xb3, 0x9b, 0xfc, 0x12, 0x40, 0x99, 0x4b, 0x8e, 0xec, 0x35, 0x95,
	0x3e, 0xdc, 0xe1, 0xb5, 0x2c, 0xc0, 0x8a, 0xc7, 0x77, 0xa0, 0xb0, 0x9a, 0x45, 0x45, 0x50, 0x3b,
	0x26, 0x6e, 0x19, 0x8e, 0xe9, 0xf4, 0xb4, 0x0d, 0xa4, 0x82, 0xe4, 0xb4, 0x0d, 0xdc, 0xd1, 0x04,
	0xc6, 0x60, 0xd3, 0x68, 0x1e, 0x18, 0x3b, 0xb6, 0xa9, 0x65, 0x18, 0xd3, 0xed, 0x19, 0xb6, 0xa9,
	0x89, 0xc7, 0x32, 0xff, 0x63, 0x6d, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x08, 0xd3, 0x30,
	0x64, 0x07, 0x00, 0x00,
}
