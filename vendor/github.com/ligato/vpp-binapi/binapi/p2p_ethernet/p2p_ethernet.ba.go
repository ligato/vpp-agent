// Code generated by GoVPP binapi-generator. DO NOT EDIT.
//  source: vppapi/p2p_ethernet.api.json

/*
 Package p2p_ethernet is a generated from VPP binary API module 'p2p_ethernet'.

 It contains following objects:
	  4 messages
	  2 services

*/
package p2p_ethernet

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

// VlAPIVersion represents version of the binary API module.
const VlAPIVersion = 0x65c834be

// Services represents VPP binary API services:
//
//	"services": {
//	    "p2p_ethernet_add": {
//	        "reply": "p2p_ethernet_add_reply"
//	    },
//	    "p2p_ethernet_del": {
//	        "reply": "p2p_ethernet_del_reply"
//	    }
//	},
//
type Services interface {
	P2pEthernetAdd(*P2pEthernetAdd) (*P2pEthernetAddReply, error)
	P2pEthernetDel(*P2pEthernetDel) (*P2pEthernetDelReply, error)
}

/* Messages */

// P2pEthernetAdd represents VPP binary API message 'p2p_ethernet_add':
//
//	"p2p_ethernet_add",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "parent_if_index"
//	],
//	[
//	    "u32",
//	    "subif_id"
//	],
//	[
//	    "u8",
//	    "remote_mac",
//	    6
//	],
//	{
//	    "crc": "0x7f4abf1a"
//	}
//
type P2pEthernetAdd struct {
	ParentIfIndex uint32
	SubifID       uint32
	RemoteMac     []byte `struc:"[6]byte"`
}

func (*P2pEthernetAdd) GetMessageName() string {
	return "p2p_ethernet_add"
}
func (*P2pEthernetAdd) GetCrcString() string {
	return "7f4abf1a"
}
func (*P2pEthernetAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// P2pEthernetAddReply represents VPP binary API message 'p2p_ethernet_add_reply':
//
//	"p2p_ethernet_add_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0xfda5941f"
//	}
//
type P2pEthernetAddReply struct {
	Retval    int32
	SwIfIndex uint32
}

func (*P2pEthernetAddReply) GetMessageName() string {
	return "p2p_ethernet_add_reply"
}
func (*P2pEthernetAddReply) GetCrcString() string {
	return "fda5941f"
}
func (*P2pEthernetAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// P2pEthernetDel represents VPP binary API message 'p2p_ethernet_del':
//
//	"p2p_ethernet_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "parent_if_index"
//	],
//	[
//	    "u8",
//	    "remote_mac",
//	    6
//	],
//	{
//	    "crc": "0x1efa374a"
//	}
//
type P2pEthernetDel struct {
	ParentIfIndex uint32
	RemoteMac     []byte `struc:"[6]byte"`
}

func (*P2pEthernetDel) GetMessageName() string {
	return "p2p_ethernet_del"
}
func (*P2pEthernetDel) GetCrcString() string {
	return "1efa374a"
}
func (*P2pEthernetDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// P2pEthernetDelReply represents VPP binary API message 'p2p_ethernet_del_reply':
//
//	"p2p_ethernet_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type P2pEthernetDelReply struct {
	Retval int32
}

func (*P2pEthernetDelReply) GetMessageName() string {
	return "p2p_ethernet_del_reply"
}
func (*P2pEthernetDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*P2pEthernetDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func init() {
	api.RegisterMessage((*P2pEthernetAdd)(nil), "p2p_ethernet.P2pEthernetAdd")
	api.RegisterMessage((*P2pEthernetAddReply)(nil), "p2p_ethernet.P2pEthernetAddReply")
	api.RegisterMessage((*P2pEthernetDel)(nil), "p2p_ethernet.P2pEthernetDel")
	api.RegisterMessage((*P2pEthernetDelReply)(nil), "p2p_ethernet.P2pEthernetDelReply")
}
