// Code generated by GoVPP binapi-generator. DO NOT EDIT.
//  source: vppapi/oam.api.json

/*
 Package oam is a generated from VPP binary API module 'oam'.

 It contains following objects:
	  5 messages
	  2 services

*/
package oam

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

// VlAPIVersion represents version of the binary API module.
const VlAPIVersion = 0x6aac8f57

// Services represents VPP binary API services:
//
//	"services": {
//	    "oam_add_del": {
//	        "reply": "oam_add_del_reply"
//	    },
//	    "want_oam_events": {
//	        "reply": "want_oam_events_reply",
//	        "events": [
//	            "oam_event"
//	        ]
//	    }
//	},
//
type Services interface {
	OamAddDel(*OamAddDel) (*OamAddDelReply, error)
	WantOamEvents(*WantOamEvents) (*WantOamEventsReply, error)
}

/* Messages */

// OamEvent represents VPP binary API message 'oam_event':
//
//	"oam_event",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u8",
//	    "dst_address",
//	    4
//	],
//	[
//	    "u8",
//	    "state"
//	],
//	{
//	    "crc": "0xa450141f"
//	}
//
type OamEvent struct {
	DstAddress []byte `struc:"[4]byte"`
	State      uint8
}

func (*OamEvent) GetMessageName() string {
	return "oam_event"
}
func (*OamEvent) GetCrcString() string {
	return "a450141f"
}
func (*OamEvent) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// WantOamEvents represents VPP binary API message 'want_oam_events':
//
//	"want_oam_events",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantOamEvents struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantOamEvents) GetMessageName() string {
	return "want_oam_events"
}
func (*WantOamEvents) GetCrcString() string {
	return "476f5a08"
}
func (*WantOamEvents) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantOamEventsReply represents VPP binary API message 'want_oam_events_reply':
//
//	"want_oam_events_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantOamEventsReply struct {
	Retval int32
}

func (*WantOamEventsReply) GetMessageName() string {
	return "want_oam_events_reply"
}
func (*WantOamEventsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantOamEventsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// OamAddDel represents VPP binary API message 'oam_add_del':
//
//	"oam_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	[
//	    "u8",
//	    "src_address",
//	    4
//	],
//	[
//	    "u8",
//	    "dst_address",
//	    4
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	{
//	    "crc": "0x3d7fcf96"
//	}
//
type OamAddDel struct {
	VrfID      uint32
	SrcAddress []byte `struc:"[4]byte"`
	DstAddress []byte `struc:"[4]byte"`
	IsAdd      uint8
}

func (*OamAddDel) GetMessageName() string {
	return "oam_add_del"
}
func (*OamAddDel) GetCrcString() string {
	return "3d7fcf96"
}
func (*OamAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// OamAddDelReply represents VPP binary API message 'oam_add_del_reply':
//
//	"oam_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type OamAddDelReply struct {
	Retval int32
}

func (*OamAddDelReply) GetMessageName() string {
	return "oam_add_del_reply"
}
func (*OamAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*OamAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func init() {
	api.RegisterMessage((*OamEvent)(nil), "oam.OamEvent")
	api.RegisterMessage((*WantOamEvents)(nil), "oam.WantOamEvents")
	api.RegisterMessage((*WantOamEventsReply)(nil), "oam.WantOamEventsReply")
	api.RegisterMessage((*OamAddDel)(nil), "oam.OamAddDel")
	api.RegisterMessage((*OamAddDelReply)(nil), "oam.OamAddDelReply")
}
