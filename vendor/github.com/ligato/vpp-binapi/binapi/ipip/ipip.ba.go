// Code generated by GoVPP binapi-generator. DO NOT EDIT.
//  source: vppapi/ipip.api.json

/*
 Package ipip is a generated from VPP binary API module 'ipip'.

 It contains following objects:
	 10 messages
	  1 alias
	  5 services

*/
package ipip

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

// VlAPIVersion represents version of the binary API module.
const VlAPIVersion = 0xc6f9c052

// Services represents VPP binary API services:
//
//	"services": {
//	    "ipip_6rd_add_tunnel": {
//	        "reply": "ipip_6rd_add_tunnel_reply"
//	    },
//	    "ipip_tunnel_dump": {
//	        "reply": "ipip_tunnel_details",
//	        "stream": true
//	    },
//	    "ipip_6rd_del_tunnel": {
//	        "reply": "ipip_6rd_del_tunnel_reply"
//	    },
//	    "ipip_del_tunnel": {
//	        "reply": "ipip_del_tunnel_reply"
//	    },
//	    "ipip_add_tunnel": {
//	        "reply": "ipip_add_tunnel_reply"
//	    }
//	},
//
type Services interface {
	DumpIpipTunnel(*IpipTunnelDump) ([]*IpipTunnelDetails, error)
	Ipip6rdAddTunnel(*Ipip6rdAddTunnel) (*Ipip6rdAddTunnelReply, error)
	Ipip6rdDelTunnel(*Ipip6rdDelTunnel) (*Ipip6rdDelTunnelReply, error)
	IpipAddTunnel(*IpipAddTunnel) (*IpipAddTunnelReply, error)
	IpipDelTunnel(*IpipDelTunnel) (*IpipDelTunnelReply, error)
}

/* Aliases */

// InterfaceIndex represents VPP binary API alias 'interface_index':
//
//	"interface_index": {
//	    "type": "u32"
//	}
//
type InterfaceIndex uint32

/* Messages */

// IpipAddTunnel represents VPP binary API message 'ipip_add_tunnel':
//
//	"ipip_add_tunnel",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u32",
//	    "instance"
//	],
//	[
//	    "u8",
//	    "src_address",
//	    16
//	],
//	[
//	    "u8",
//	    "dst_address",
//	    16
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u8",
//	    "tc_tos"
//	],
//	{
//	    "crc": "0x5c80fd36"
//	}
//
type IpipAddTunnel struct {
	IsIPv6     uint8
	Instance   uint32
	SrcAddress []byte `struc:"[16]byte"`
	DstAddress []byte `struc:"[16]byte"`
	TableID    uint32
	TcTos      uint8
}

func (*IpipAddTunnel) GetMessageName() string {
	return "ipip_add_tunnel"
}
func (*IpipAddTunnel) GetCrcString() string {
	return "5c80fd36"
}
func (*IpipAddTunnel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IpipAddTunnelReply represents VPP binary API message 'ipip_add_tunnel_reply':
//
//	"ipip_add_tunnel_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "vl_api_interface_index_t",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0x903324db"
//	}
//
type IpipAddTunnelReply struct {
	Retval    int32
	SwIfIndex InterfaceIndex
}

func (*IpipAddTunnelReply) GetMessageName() string {
	return "ipip_add_tunnel_reply"
}
func (*IpipAddTunnelReply) GetCrcString() string {
	return "903324db"
}
func (*IpipAddTunnelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IpipDelTunnel represents VPP binary API message 'ipip_del_tunnel':
//
//	"ipip_del_tunnel",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "vl_api_interface_index_t",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0xd85aab0d"
//	}
//
type IpipDelTunnel struct {
	SwIfIndex InterfaceIndex
}

func (*IpipDelTunnel) GetMessageName() string {
	return "ipip_del_tunnel"
}
func (*IpipDelTunnel) GetCrcString() string {
	return "d85aab0d"
}
func (*IpipDelTunnel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IpipDelTunnelReply represents VPP binary API message 'ipip_del_tunnel_reply':
//
//	"ipip_del_tunnel_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IpipDelTunnelReply struct {
	Retval int32
}

func (*IpipDelTunnelReply) GetMessageName() string {
	return "ipip_del_tunnel_reply"
}
func (*IpipDelTunnelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IpipDelTunnelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// Ipip6rdAddTunnel represents VPP binary API message 'ipip_6rd_add_tunnel':
//
//	"ipip_6rd_add_tunnel",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "ip6_table_id"
//	],
//	[
//	    "u32",
//	    "ip4_table_id"
//	],
//	[
//	    "u8",
//	    "ip6_prefix",
//	    16
//	],
//	[
//	    "u8",
//	    "ip4_prefix",
//	    4
//	],
//	[
//	    "u8",
//	    "ip4_src",
//	    4
//	],
//	[
//	    "u8",
//	    "ip6_prefix_len"
//	],
//	[
//	    "u8",
//	    "ip4_prefix_len"
//	],
//	[
//	    "u8",
//	    "security_check"
//	],
//	[
//	    "u8",
//	    "tc_tos"
//	],
//	{
//	    "crc": "0xc5005266"
//	}
//
type Ipip6rdAddTunnel struct {
	IP6TableID    uint32
	IP4TableID    uint32
	IP6Prefix     []byte `struc:"[16]byte"`
	IP4Prefix     []byte `struc:"[4]byte"`
	IP4Src        []byte `struc:"[4]byte"`
	IP6PrefixLen  uint8
	IP4PrefixLen  uint8
	SecurityCheck uint8
	TcTos         uint8
}

func (*Ipip6rdAddTunnel) GetMessageName() string {
	return "ipip_6rd_add_tunnel"
}
func (*Ipip6rdAddTunnel) GetCrcString() string {
	return "c5005266"
}
func (*Ipip6rdAddTunnel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// Ipip6rdAddTunnelReply represents VPP binary API message 'ipip_6rd_add_tunnel_reply':
//
//	"ipip_6rd_add_tunnel_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "vl_api_interface_index_t",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0x903324db"
//	}
//
type Ipip6rdAddTunnelReply struct {
	Retval    int32
	SwIfIndex InterfaceIndex
}

func (*Ipip6rdAddTunnelReply) GetMessageName() string {
	return "ipip_6rd_add_tunnel_reply"
}
func (*Ipip6rdAddTunnelReply) GetCrcString() string {
	return "903324db"
}
func (*Ipip6rdAddTunnelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// Ipip6rdDelTunnel represents VPP binary API message 'ipip_6rd_del_tunnel':
//
//	"ipip_6rd_del_tunnel",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "vl_api_interface_index_t",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0xd85aab0d"
//	}
//
type Ipip6rdDelTunnel struct {
	SwIfIndex InterfaceIndex
}

func (*Ipip6rdDelTunnel) GetMessageName() string {
	return "ipip_6rd_del_tunnel"
}
func (*Ipip6rdDelTunnel) GetCrcString() string {
	return "d85aab0d"
}
func (*Ipip6rdDelTunnel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// Ipip6rdDelTunnelReply represents VPP binary API message 'ipip_6rd_del_tunnel_reply':
//
//	"ipip_6rd_del_tunnel_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type Ipip6rdDelTunnelReply struct {
	Retval int32
}

func (*Ipip6rdDelTunnelReply) GetMessageName() string {
	return "ipip_6rd_del_tunnel_reply"
}
func (*Ipip6rdDelTunnelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*Ipip6rdDelTunnelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IpipTunnelDump represents VPP binary API message 'ipip_tunnel_dump':
//
//	"ipip_tunnel_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "vl_api_interface_index_t",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0xd85aab0d"
//	}
//
type IpipTunnelDump struct {
	SwIfIndex InterfaceIndex
}

func (*IpipTunnelDump) GetMessageName() string {
	return "ipip_tunnel_dump"
}
func (*IpipTunnelDump) GetCrcString() string {
	return "d85aab0d"
}
func (*IpipTunnelDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IpipTunnelDetails represents VPP binary API message 'ipip_tunnel_details':
//
//	"ipip_tunnel_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "vl_api_interface_index_t",
//	    "sw_if_index"
//	],
//	[
//	    "u32",
//	    "instance"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u8",
//	    "src_address",
//	    16
//	],
//	[
//	    "u8",
//	    "dst_address",
//	    16
//	],
//	[
//	    "u32",
//	    "fib_index"
//	],
//	[
//	    "u8",
//	    "tc_tos"
//	],
//	{
//	    "crc": "0x20202342"
//	}
//
type IpipTunnelDetails struct {
	SwIfIndex  InterfaceIndex
	Instance   uint32
	IsIPv6     uint8
	SrcAddress []byte `struc:"[16]byte"`
	DstAddress []byte `struc:"[16]byte"`
	FibIndex   uint32
	TcTos      uint8
}

func (*IpipTunnelDetails) GetMessageName() string {
	return "ipip_tunnel_details"
}
func (*IpipTunnelDetails) GetCrcString() string {
	return "20202342"
}
func (*IpipTunnelDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func init() {
	api.RegisterMessage((*IpipAddTunnel)(nil), "ipip.IpipAddTunnel")
	api.RegisterMessage((*IpipAddTunnelReply)(nil), "ipip.IpipAddTunnelReply")
	api.RegisterMessage((*IpipDelTunnel)(nil), "ipip.IpipDelTunnel")
	api.RegisterMessage((*IpipDelTunnelReply)(nil), "ipip.IpipDelTunnelReply")
	api.RegisterMessage((*Ipip6rdAddTunnel)(nil), "ipip.Ipip6rdAddTunnel")
	api.RegisterMessage((*Ipip6rdAddTunnelReply)(nil), "ipip.Ipip6rdAddTunnelReply")
	api.RegisterMessage((*Ipip6rdDelTunnel)(nil), "ipip.Ipip6rdDelTunnel")
	api.RegisterMessage((*Ipip6rdDelTunnelReply)(nil), "ipip.Ipip6rdDelTunnelReply")
	api.RegisterMessage((*IpipTunnelDump)(nil), "ipip.IpipTunnelDump")
	api.RegisterMessage((*IpipTunnelDetails)(nil), "ipip.IpipTunnelDetails")
}
