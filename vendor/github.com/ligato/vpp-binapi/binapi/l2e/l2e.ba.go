// Code generated by GoVPP binapi-generator. DO NOT EDIT.
//  source: vppapi/l2e.api.json

/*
 Package l2e is a generated from VPP binary API module 'l2e'.

 It contains following objects:
	  2 messages
	  1 service

*/
package l2e

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

// VlAPIVersion represents version of the binary API module.
const VlAPIVersion = 0x3fc84d7c

// Services represents VPP binary API services:
//
//	"services": {
//	    "l2_emulation": {
//	        "reply": "l2_emulation_reply"
//	    }
//	},
//
type Services interface {
	L2Emulation(*L2Emulation) (*L2EmulationReply, error)
}

/* Messages */

// L2Emulation represents VPP binary API message 'l2_emulation':
//
//	"l2_emulation",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "enable"
//	],
//	{
//	    "crc": "0xa36fadc0"
//	}
//
type L2Emulation struct {
	SwIfIndex uint32
	Enable    uint8
}

func (*L2Emulation) GetMessageName() string {
	return "l2_emulation"
}
func (*L2Emulation) GetCrcString() string {
	return "a36fadc0"
}
func (*L2Emulation) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// L2EmulationReply represents VPP binary API message 'l2_emulation_reply':
//
//	"l2_emulation_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type L2EmulationReply struct {
	Retval int32
}

func (*L2EmulationReply) GetMessageName() string {
	return "l2_emulation_reply"
}
func (*L2EmulationReply) GetCrcString() string {
	return "e8d4e804"
}
func (*L2EmulationReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func init() {
	api.RegisterMessage((*L2Emulation)(nil), "l2e.L2Emulation")
	api.RegisterMessage((*L2EmulationReply)(nil), "l2e.L2EmulationReply")
}
