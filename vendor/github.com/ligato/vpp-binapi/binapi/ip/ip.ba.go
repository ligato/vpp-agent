// Code generated by GoVPP binapi-generator. DO NOT EDIT.
//  source: vppapi/ip.api.json

/*
 Package ip is a generated from VPP binary API module 'ip'.

 It contains following objects:
	 91 messages
	 11 types
	  3 aliases
	  1 enum
	  1 union
	 44 services

*/
package ip

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

// VlAPIVersion represents version of the binary API module.
const VlAPIVersion = 0xa3532a2f

// Services represents VPP binary API services:
//
//	"services": {
//	    "ip_container_proxy_dump": {
//	        "reply": "ip_container_proxy_details",
//	        "stream": true
//	    },
//	    "ip_address_dump": {
//	        "reply": "ip_address_details",
//	        "stream": true
//	    },
//	    "ip_source_and_port_range_check_add_del": {
//	        "reply": "ip_source_and_port_range_check_add_del_reply"
//	    },
//	    "reset_fib": {
//	        "reply": "reset_fib_reply"
//	    },
//	    "ip_probe_neighbor": {
//	        "reply": "ip_probe_neighbor_reply"
//	    },
//	    "want_ip6_nd_events": {
//	        "reply": "want_ip6_nd_events_reply",
//	        "events": [
//	            "ip6_nd_event"
//	        ]
//	    },
//	    "ip_punt_police": {
//	        "reply": "ip_punt_police_reply"
//	    },
//	    "ip6nd_proxy_add_del": {
//	        "reply": "ip6nd_proxy_add_del_reply"
//	    },
//	    "set_arp_neighbor_limit": {
//	        "reply": "set_arp_neighbor_limit_reply"
//	    },
//	    "ip_reassembly_enable_disable": {
//	        "reply": "ip_reassembly_enable_disable_reply"
//	    },
//	    "ip6_fib_dump": {
//	        "reply": "ip6_fib_details",
//	        "stream": true
//	    },
//	    "ip6nd_send_router_solicitation": {
//	        "reply": "ip6nd_send_router_solicitation_reply"
//	    },
//	    "ip_source_check_interface_add_del": {
//	        "reply": "ip_source_check_interface_add_del_reply"
//	    },
//	    "ip_table_add_del": {
//	        "reply": "ip_table_add_del_reply"
//	    },
//	    "ip_neighbor_dump": {
//	        "reply": "ip_neighbor_details",
//	        "stream": true
//	    },
//	    "ip_punt_redirect": {
//	        "reply": "ip_punt_redirect_reply"
//	    },
//	    "sw_interface_ip6nd_ra_prefix": {
//	        "reply": "sw_interface_ip6nd_ra_prefix_reply"
//	    },
//	    "ip_reassembly_set": {
//	        "reply": "ip_reassembly_set_reply"
//	    },
//	    "ip6_mfib_dump": {
//	        "reply": "ip6_mfib_details",
//	        "stream": true
//	    },
//	    "sw_interface_ip6nd_ra_config": {
//	        "reply": "sw_interface_ip6nd_ra_config_reply"
//	    },
//	    "proxy_arp_dump": {
//	        "reply": "proxy_arp_details",
//	        "stream": true
//	    },
//	    "sw_interface_ip6_enable_disable": {
//	        "reply": "sw_interface_ip6_enable_disable_reply"
//	    },
//	    "ip_source_and_port_range_check_interface_add_del": {
//	        "reply": "ip_source_and_port_range_check_interface_add_del_reply"
//	    },
//	    "mfib_signal_dump": {
//	        "reply": "mfib_signal_details",
//	        "stream": true
//	    },
//	    "ip_punt_redirect_dump": {
//	        "reply": "ip_punt_redirect_details",
//	        "stream": true
//	    },
//	    "ip_container_proxy_add_del": {
//	        "reply": "ip_container_proxy_add_del_reply"
//	    },
//	    "ip_mfib_dump": {
//	        "reply": "ip_mfib_details",
//	        "stream": true
//	    },
//	    "ip_unnumbered_dump": {
//	        "reply": "ip_unnumbered_details",
//	        "stream": true
//	    },
//	    "ip_dump": {
//	        "reply": "ip_details",
//	        "stream": true
//	    },
//	    "ip_neighbor_add_del": {
//	        "reply": "ip_neighbor_add_del_reply"
//	    },
//	    "proxy_arp_intfc_enable_disable": {
//	        "reply": "proxy_arp_intfc_enable_disable_reply"
//	    },
//	    "proxy_arp_add_del": {
//	        "reply": "proxy_arp_add_del_reply"
//	    },
//	    "ip_add_del_route": {
//	        "reply": "ip_add_del_route_reply"
//	    },
//	    "ip6nd_proxy_dump": {
//	        "reply": "ip6nd_proxy_details",
//	        "stream": true
//	    },
//	    "want_ip6_ra_events": {
//	        "reply": "want_ip6_ra_events_reply",
//	        "events": [
//	            "ip6_ra_event"
//	        ]
//	    },
//	    "ip_fib_dump": {
//	        "reply": "ip_fib_details",
//	        "stream": true
//	    },
//	    "ip_scan_neighbor_enable_disable": {
//	        "reply": "ip_scan_neighbor_enable_disable_reply"
//	    },
//	    "ioam_enable": {
//	        "reply": "ioam_enable_reply"
//	    },
//	    "ip_mroute_add_del": {
//	        "reply": "ip_mroute_add_del_reply"
//	    },
//	    "proxy_arp_intfc_dump": {
//	        "reply": "proxy_arp_intfc_details",
//	        "stream": true
//	    },
//	    "want_ip4_arp_events": {
//	        "reply": "want_ip4_arp_events_reply",
//	        "events": [
//	            "ip4_arp_event"
//	        ]
//	    },
//	    "ip_reassembly_get": {
//	        "reply": "ip_reassembly_get_reply"
//	    },
//	    "set_ip_flow_hash": {
//	        "reply": "set_ip_flow_hash_reply"
//	    },
//	    "ioam_disable": {
//	        "reply": "ioam_disable_reply"
//	    }
//	},
//
type Services interface {
	DumpIP6Fib(*IP6FibDump) ([]*IP6FibDetails, error)
	DumpIP6Mfib(*IP6MfibDump) ([]*IP6MfibDetails, error)
	DumpIP6ndProxy(*IP6ndProxyDump) ([]*IP6ndProxyDetails, error)
	DumpIPAddress(*IPAddressDump) ([]*IPAddressDetails, error)
	DumpIPContainerProxy(*IPContainerProxyDump) ([]*IPContainerProxyDetails, error)
	DumpIP(*IPDump) ([]*IPDetails, error)
	DumpIPFib(*IPFibDump) ([]*IPFibDetails, error)
	DumpIPMfib(*IPMfibDump) ([]*IPMfibDetails, error)
	DumpIPNeighbor(*IPNeighborDump) ([]*IPNeighborDetails, error)
	DumpIPPuntRedirect(*IPPuntRedirectDump) ([]*IPPuntRedirectDetails, error)
	DumpIPUnnumbered(*IPUnnumberedDump) ([]*IPUnnumberedDetails, error)
	DumpMfibSignal(*MfibSignalDump) ([]*MfibSignalDetails, error)
	DumpProxyArp(*ProxyArpDump) ([]*ProxyArpDetails, error)
	DumpProxyArpIntfc(*ProxyArpIntfcDump) ([]*ProxyArpIntfcDetails, error)
	IoamDisable(*IoamDisable) (*IoamDisableReply, error)
	IoamEnable(*IoamEnable) (*IoamEnableReply, error)
	IP6ndProxyAddDel(*IP6ndProxyAddDel) (*IP6ndProxyAddDelReply, error)
	IP6ndSendRouterSolicitation(*IP6ndSendRouterSolicitation) (*IP6ndSendRouterSolicitationReply, error)
	IPAddDelRoute(*IPAddDelRoute) (*IPAddDelRouteReply, error)
	IPContainerProxyAddDel(*IPContainerProxyAddDel) (*IPContainerProxyAddDelReply, error)
	IPMrouteAddDel(*IPMrouteAddDel) (*IPMrouteAddDelReply, error)
	IPNeighborAddDel(*IPNeighborAddDel) (*IPNeighborAddDelReply, error)
	IPProbeNeighbor(*IPProbeNeighbor) (*IPProbeNeighborReply, error)
	IPPuntPolice(*IPPuntPolice) (*IPPuntPoliceReply, error)
	IPPuntRedirect(*IPPuntRedirect) (*IPPuntRedirectReply, error)
	IPReassemblyEnableDisable(*IPReassemblyEnableDisable) (*IPReassemblyEnableDisableReply, error)
	IPReassemblyGet(*IPReassemblyGet) (*IPReassemblyGetReply, error)
	IPReassemblySet(*IPReassemblySet) (*IPReassemblySetReply, error)
	IPScanNeighborEnableDisable(*IPScanNeighborEnableDisable) (*IPScanNeighborEnableDisableReply, error)
	IPSourceAndPortRangeCheckAddDel(*IPSourceAndPortRangeCheckAddDel) (*IPSourceAndPortRangeCheckAddDelReply, error)
	IPSourceAndPortRangeCheckInterfaceAddDel(*IPSourceAndPortRangeCheckInterfaceAddDel) (*IPSourceAndPortRangeCheckInterfaceAddDelReply, error)
	IPSourceCheckInterfaceAddDel(*IPSourceCheckInterfaceAddDel) (*IPSourceCheckInterfaceAddDelReply, error)
	IPTableAddDel(*IPTableAddDel) (*IPTableAddDelReply, error)
	ProxyArpAddDel(*ProxyArpAddDel) (*ProxyArpAddDelReply, error)
	ProxyArpIntfcEnableDisable(*ProxyArpIntfcEnableDisable) (*ProxyArpIntfcEnableDisableReply, error)
	ResetFib(*ResetFib) (*ResetFibReply, error)
	SetArpNeighborLimit(*SetArpNeighborLimit) (*SetArpNeighborLimitReply, error)
	SetIPFlowHash(*SetIPFlowHash) (*SetIPFlowHashReply, error)
	SwInterfaceIP6EnableDisable(*SwInterfaceIP6EnableDisable) (*SwInterfaceIP6EnableDisableReply, error)
	SwInterfaceIP6ndRaConfig(*SwInterfaceIP6ndRaConfig) (*SwInterfaceIP6ndRaConfigReply, error)
	SwInterfaceIP6ndRaPrefix(*SwInterfaceIP6ndRaPrefix) (*SwInterfaceIP6ndRaPrefixReply, error)
	WantIP4ArpEvents(*WantIP4ArpEvents) (*WantIP4ArpEventsReply, error)
	WantIP6NdEvents(*WantIP6NdEvents) (*WantIP6NdEventsReply, error)
	WantIP6RaEvents(*WantIP6RaEvents) (*WantIP6RaEventsReply, error)
}

/* Enums */

// AddressFamily represents VPP binary API enum 'address_family':
//
//	"address_family",
//	[
//	    "ADDRESS_IP4",
//	    0
//	],
//	[
//	    "ADDRESS_IP6",
//	    1
//	],
//	{
//	    "enumtype": "u32"
//	}
//
type AddressFamily uint32

const (
	ADDRESS_IP4 AddressFamily = 0
	ADDRESS_IP6 AddressFamily = 1
)

/* Aliases */

// IP4Address represents VPP binary API alias 'ip4_address':
//
//	"ip4_address": {
//	    "length": 4,
//	    "type": "u8"
//	},
//
type IP4Address [4]uint8

// IP6Address represents VPP binary API alias 'ip6_address':
//
//	"ip6_address": {
//	    "length": 16,
//	    "type": "u8"
//	},
//
type IP6Address [16]uint8

// MacAddress represents VPP binary API alias 'mac_address':
//
//	"mac_address": {
//	    "length": 6,
//	    "type": "u8"
//	}
//
type MacAddress [6]uint8

/* Types */

// Address represents VPP binary API type 'address':
//
//	"address",
//	4
//
type Address struct {
	Af AddressFamily
	Un AddressUnion
}

func (*Address) GetTypeName() string {
	return "address"
}
func (*Address) GetCrcString() string {
	return "09f11671"
}

// Prefix represents VPP binary API type 'prefix':
//
//	"prefix",
//	[
//	    "vl_api_address_t",
//	    "address"
//	],
//	[
//	    "u8",
//	    "address_length"
//	],
//	{
//	    "crc": "0x0403aebc"
//	}
//
type Prefix struct {
	Address       Address
	AddressLength uint8
}

func (*Prefix) GetTypeName() string {
	return "prefix"
}
func (*Prefix) GetCrcString() string {
	return "0403aebc"
}

// Mprefix represents VPP binary API type 'mprefix':
//
//	"mprefix",
//	[
//	    "vl_api_address_family_t",
//	    "af"
//	],
//	[
//	    "u16",
//	    "grp_address_length"
//	],
//	[
//	    "vl_api_address_union_t",
//	    "grp_address"
//	],
//	[
//	    "vl_api_address_union_t",
//	    "src_address"
//	],
//	{
//	    "crc": "0x1c4cba05"
//	}
//
type Mprefix struct {
	Af               AddressFamily
	GrpAddressLength uint16
	GrpAddress       AddressUnion
	SrcAddress       AddressUnion
}

func (*Mprefix) GetTypeName() string {
	return "mprefix"
}
func (*Mprefix) GetCrcString() string {
	return "1c4cba05"
}

// IP6Prefix represents VPP binary API type 'ip6_prefix':
//
//	"ip6_prefix",
//	[
//	    "vl_api_ip6_address_t",
//	    "prefix"
//	],
//	[
//	    "u8",
//	    "len"
//	],
//	{
//	    "crc": "0x779fd64f"
//	}
//
type IP6Prefix struct {
	Prefix IP6Address
	Len    uint8
}

func (*IP6Prefix) GetTypeName() string {
	return "ip6_prefix"
}
func (*IP6Prefix) GetCrcString() string {
	return "779fd64f"
}

// IP4Prefix represents VPP binary API type 'ip4_prefix':
//
//	"ip4_prefix",
//	[
//	    "vl_api_ip4_address_t",
//	    "prefix"
//	],
//	[
//	    "u8",
//	    "len"
//	],
//	{
//	    "crc": "0xea8dc11d"
//	}
//
type IP4Prefix struct {
	Prefix IP4Address
	Len    uint8
}

func (*IP4Prefix) GetTypeName() string {
	return "ip4_prefix"
}
func (*IP4Prefix) GetCrcString() string {
	return "ea8dc11d"
}

// FibMplsLabel represents VPP binary API type 'fib_mpls_label':
//
//	"fib_mpls_label",
//	[
//	    "u8",
//	    "is_uniform"
//	],
//	[
//	    "u32",
//	    "label"
//	],
//	[
//	    "u8",
//	    "ttl"
//	],
//	[
//	    "u8",
//	    "exp"
//	],
//	{
//	    "crc": "0xc93bf35c"
//	}
//
type FibMplsLabel struct {
	IsUniform uint8
	Label     uint32
	TTL       uint8
	Exp       uint8
}

func (*FibMplsLabel) GetTypeName() string {
	return "fib_mpls_label"
}
func (*FibMplsLabel) GetCrcString() string {
	return "c93bf35c"
}

// FibPath represents VPP binary API type 'fib_path':
//
//	"fib_path",
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u8",
//	    "weight"
//	],
//	[
//	    "u8",
//	    "preference"
//	],
//	[
//	    "u8",
//	    "is_local"
//	],
//	[
//	    "u8",
//	    "is_drop"
//	],
//	[
//	    "u8",
//	    "is_udp_encap"
//	],
//	[
//	    "u8",
//	    "is_unreach"
//	],
//	[
//	    "u8",
//	    "is_prohibit"
//	],
//	[
//	    "u8",
//	    "is_resolve_host"
//	],
//	[
//	    "u8",
//	    "is_resolve_attached"
//	],
//	[
//	    "u8",
//	    "is_dvr"
//	],
//	[
//	    "u8",
//	    "is_source_lookup"
//	],
//	[
//	    "u8",
//	    "is_interface_rx"
//	],
//	[
//	    "u8",
//	    "afi"
//	],
//	[
//	    "u8",
//	    "next_hop",
//	    16
//	],
//	[
//	    "u32",
//	    "next_hop_id"
//	],
//	[
//	    "u32",
//	    "rpf_id"
//	],
//	[
//	    "u32",
//	    "via_label"
//	],
//	[
//	    "u8",
//	    "n_labels"
//	],
//	[
//	    "vl_api_fib_mpls_label_t",
//	    "label_stack",
//	    16
//	],
//	{
//	    "crc": "0xba7a81f0"
//	}
//
type FibPath struct {
	SwIfIndex         uint32
	TableID           uint32
	Weight            uint8
	Preference        uint8
	IsLocal           uint8
	IsDrop            uint8
	IsUDPEncap        uint8
	IsUnreach         uint8
	IsProhibit        uint8
	IsResolveHost     uint8
	IsResolveAttached uint8
	IsDvr             uint8
	IsSourceLookup    uint8
	IsInterfaceRx     uint8
	Afi               uint8
	NextHop           []byte `struc:"[16]byte"`
	NextHopID         uint32
	RpfID             uint32
	ViaLabel          uint32
	NLabels           uint8 `struc:"sizeof=LabelStack"` // MANUALLY FIXED, see https://jira.fd.io/browse/VPP-1261
	LabelStack        []FibMplsLabel
}

func (*FibPath) GetTypeName() string {
	return "fib_path"
}
func (*FibPath) GetCrcString() string {
	return "ba7a81f0"
}

// MfibPath represents VPP binary API type 'mfib_path':
//
//	"mfib_path",
//	[
//	    "vl_api_fib_path_t",
//	    "path"
//	],
//	[
//	    "u32",
//	    "itf_flags"
//	],
//	{
//	    "crc": "0x4ba77d32"
//	}
//
type MfibPath struct {
	Path     FibPath
	ItfFlags uint32
}

func (*MfibPath) GetTypeName() string {
	return "mfib_path"
}
func (*MfibPath) GetCrcString() string {
	return "4ba77d32"
}

// PuntRedirect represents VPP binary API type 'punt_redirect':
//
//	"punt_redirect",
//	[
//	    "u32",
//	    "rx_sw_if_index"
//	],
//	[
//	    "u32",
//	    "tx_sw_if_index"
//	],
//	[
//	    "vl_api_address_t",
//	    "nh"
//	],
//	{
//	    "crc": "0x3e7a801f"
//	}
//
type PuntRedirect struct {
	RxSwIfIndex uint32
	TxSwIfIndex uint32
	Nh          Address
}

func (*PuntRedirect) GetTypeName() string {
	return "punt_redirect"
}
func (*PuntRedirect) GetCrcString() string {
	return "3e7a801f"
}

// IP6RaPrefixInfo represents VPP binary API type 'ip6_ra_prefix_info':
//
//	"ip6_ra_prefix_info",
//	[
//	    "u8",
//	    "dst_address",
//	    16
//	],
//	[
//	    "u8",
//	    "dst_address_length"
//	],
//	[
//	    "u8",
//	    "flags"
//	],
//	[
//	    "u32",
//	    "valid_time"
//	],
//	[
//	    "u32",
//	    "preferred_time"
//	],
//	{
//	    "crc": "0x83d7c6e5"
//	}
//
type IP6RaPrefixInfo struct {
	DstAddress       []byte `struc:"[16]byte"`
	DstAddressLength uint8
	Flags            uint8
	ValidTime        uint32
	PreferredTime    uint32
}

func (*IP6RaPrefixInfo) GetTypeName() string {
	return "ip6_ra_prefix_info"
}
func (*IP6RaPrefixInfo) GetCrcString() string {
	return "83d7c6e5"
}

// ProxyArp represents VPP binary API type 'proxy_arp':
//
//	"proxy_arp",
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	[
//	    "u8",
//	    "low_address",
//	    4
//	],
//	[
//	    "u8",
//	    "hi_address",
//	    4
//	],
//	{
//	    "crc": "0x6d88106e"
//	}
//
type ProxyArp struct {
	VrfID      uint32
	LowAddress []byte `struc:"[4]byte"`
	HiAddress  []byte `struc:"[4]byte"`
}

func (*ProxyArp) GetTypeName() string {
	return "proxy_arp"
}
func (*ProxyArp) GetCrcString() string {
	return "6d88106e"
}

/* Unions */

// AddressUnion represents VPP binary API union 'address_union':
//
//	"address_union",
//	[
//	    "vl_api_ip4_address_t",
//	    "ip4"
//	],
//	[
//	    "vl_api_ip6_address_t",
//	    "ip6"
//	],
//	{
//	    "crc": "0xd68a2fb4"
//	}
//
type AddressUnion struct {
	Union_data [16]byte
}

func (*AddressUnion) GetTypeName() string {
	return "address_union"
}
func (*AddressUnion) GetCrcString() string {
	return "d68a2fb4"
}

func (u *AddressUnion) SetIP4(a IP4Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.Union_data[:], b.Bytes())
}
func (u *AddressUnion) GetIP4() (a IP4Address) {
	var b = bytes.NewReader(u.Union_data[:])
	struc.Unpack(b, &a)
	return
}

func (u *AddressUnion) SetIP6(a IP6Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.Union_data[:], b.Bytes())
}
func (u *AddressUnion) GetIP6() (a IP6Address) {
	var b = bytes.NewReader(u.Union_data[:])
	struc.Unpack(b, &a)
	return
}

/* Messages */

// IPTableAddDel represents VPP binary API message 'ip_table_add_del':
//
//	"ip_table_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "u8",
//	    "name",
//	    64
//	],
//	{
//	    "crc": "0x0240c89d"
//	}
//
type IPTableAddDel struct {
	TableID uint32
	IsIPv6  uint8
	IsAdd   uint8
	Name    []byte `struc:"[64]byte"`
}

func (*IPTableAddDel) GetMessageName() string {
	return "ip_table_add_del"
}
func (*IPTableAddDel) GetCrcString() string {
	return "0240c89d"
}
func (*IPTableAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPTableAddDelReply represents VPP binary API message 'ip_table_add_del_reply':
//
//	"ip_table_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPTableAddDelReply struct {
	Retval int32
}

func (*IPTableAddDelReply) GetMessageName() string {
	return "ip_table_add_del_reply"
}
func (*IPTableAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPTableAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPFibDump represents VPP binary API message 'ip_fib_dump':
//
//	"ip_fib_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type IPFibDump struct{}

func (*IPFibDump) GetMessageName() string {
	return "ip_fib_dump"
}
func (*IPFibDump) GetCrcString() string {
	return "51077d14"
}
func (*IPFibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPFibDetails represents VPP binary API message 'ip_fib_details':
//
//	"ip_fib_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u8",
//	    "table_name",
//	    64
//	],
//	[
//	    "u8",
//	    "address_length"
//	],
//	[
//	    "u8",
//	    "address",
//	    4
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "u32",
//	    "stats_index"
//	],
//	[
//	    "vl_api_fib_path_t",
//	    "path",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0xf6a2fab3"
//	}
//
type IPFibDetails struct {
	TableID       uint32
	TableName     []byte `struc:"[64]byte"`
	AddressLength uint8
	Address       []byte `struc:"[4]byte"`
	Count         uint32 `struc:"sizeof=Path"`
	StatsIndex    uint32
	Path          []FibPath
}

func (*IPFibDetails) GetMessageName() string {
	return "ip_fib_details"
}
func (*IPFibDetails) GetCrcString() string {
	return "f6a2fab3"
}
func (*IPFibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IP6FibDump represents VPP binary API message 'ip6_fib_dump':
//
//	"ip6_fib_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type IP6FibDump struct{}

func (*IP6FibDump) GetMessageName() string {
	return "ip6_fib_dump"
}
func (*IP6FibDump) GetCrcString() string {
	return "51077d14"
}
func (*IP6FibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IP6FibDetails represents VPP binary API message 'ip6_fib_details':
//
//	"ip6_fib_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u8",
//	    "table_name",
//	    64
//	],
//	[
//	    "u8",
//	    "address_length"
//	],
//	[
//	    "u8",
//	    "address",
//	    16
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "u32",
//	    "stats_index"
//	],
//	[
//	    "vl_api_fib_path_t",
//	    "path",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0xef11e94d"
//	}
//
type IP6FibDetails struct {
	TableID       uint32
	TableName     []byte `struc:"[64]byte"`
	AddressLength uint8
	Address       []byte `struc:"[16]byte"`
	Count         uint32 `struc:"sizeof=Path"`
	StatsIndex    uint32
	Path          []FibPath
}

func (*IP6FibDetails) GetMessageName() string {
	return "ip6_fib_details"
}
func (*IP6FibDetails) GetCrcString() string {
	return "ef11e94d"
}
func (*IP6FibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPNeighborDump represents VPP binary API message 'ip_neighbor_dump':
//
//	"ip_neighbor_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	{
//	    "crc": "0x6b7bcd0a"
//	}
//
type IPNeighborDump struct {
	SwIfIndex uint32
	IsIPv6    uint8
}

func (*IPNeighborDump) GetMessageName() string {
	return "ip_neighbor_dump"
}
func (*IPNeighborDump) GetCrcString() string {
	return "6b7bcd0a"
}
func (*IPNeighborDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPNeighborDetails represents VPP binary API message 'ip_neighbor_details':
//
//	"ip_neighbor_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u32",
//	    "stats_index"
//	],
//	[
//	    "u8",
//	    "is_static"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u8",
//	    "mac_address",
//	    6
//	],
//	[
//	    "u8",
//	    "ip_address",
//	    16
//	],
//	{
//	    "crc": "0xc7001770"
//	}
//
type IPNeighborDetails struct {
	SwIfIndex  uint32
	StatsIndex uint32
	IsStatic   uint8
	IsIPv6     uint8
	MacAddress []byte `struc:"[6]byte"`
	IPAddress  []byte `struc:"[16]byte"`
}

func (*IPNeighborDetails) GetMessageName() string {
	return "ip_neighbor_details"
}
func (*IPNeighborDetails) GetCrcString() string {
	return "c7001770"
}
func (*IPNeighborDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPNeighborAddDel represents VPP binary API message 'ip_neighbor_add_del':
//
//	"ip_neighbor_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u8",
//	    "is_static"
//	],
//	[
//	    "u8",
//	    "is_no_adj_fib"
//	],
//	[
//	    "u8",
//	    "mac_address",
//	    6
//	],
//	[
//	    "u8",
//	    "dst_address",
//	    16
//	],
//	{
//	    "crc": "0x4711eb25"
//	}
//
type IPNeighborAddDel struct {
	SwIfIndex  uint32
	IsAdd      uint8
	IsIPv6     uint8
	IsStatic   uint8
	IsNoAdjFib uint8
	MacAddress []byte `struc:"[6]byte"`
	DstAddress []byte `struc:"[16]byte"`
}

func (*IPNeighborAddDel) GetMessageName() string {
	return "ip_neighbor_add_del"
}
func (*IPNeighborAddDel) GetCrcString() string {
	return "4711eb25"
}
func (*IPNeighborAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPNeighborAddDelReply represents VPP binary API message 'ip_neighbor_add_del_reply':
//
//	"ip_neighbor_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "u32",
//	    "stats_index"
//	],
//	{
//	    "crc": "0x1992deab"
//	}
//
type IPNeighborAddDelReply struct {
	Retval     int32
	StatsIndex uint32
}

func (*IPNeighborAddDelReply) GetMessageName() string {
	return "ip_neighbor_add_del_reply"
}
func (*IPNeighborAddDelReply) GetCrcString() string {
	return "1992deab"
}
func (*IPNeighborAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// SetIPFlowHash represents VPP binary API message 'set_ip_flow_hash':
//
//	"set_ip_flow_hash",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u8",
//	    "src"
//	],
//	[
//	    "u8",
//	    "dst"
//	],
//	[
//	    "u8",
//	    "sport"
//	],
//	[
//	    "u8",
//	    "dport"
//	],
//	[
//	    "u8",
//	    "proto"
//	],
//	[
//	    "u8",
//	    "reverse"
//	],
//	[
//	    "u8",
//	    "symmetric"
//	],
//	{
//	    "crc": "0xa9084bfb"
//	}
//
type SetIPFlowHash struct {
	VrfID     uint32
	IsIPv6    uint8
	Src       uint8
	Dst       uint8
	Sport     uint8
	Dport     uint8
	Proto     uint8
	Reverse   uint8
	Symmetric uint8
}

func (*SetIPFlowHash) GetMessageName() string {
	return "set_ip_flow_hash"
}
func (*SetIPFlowHash) GetCrcString() string {
	return "a9084bfb"
}
func (*SetIPFlowHash) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// SetIPFlowHashReply represents VPP binary API message 'set_ip_flow_hash_reply':
//
//	"set_ip_flow_hash_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type SetIPFlowHashReply struct {
	Retval int32
}

func (*SetIPFlowHashReply) GetMessageName() string {
	return "set_ip_flow_hash_reply"
}
func (*SetIPFlowHashReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SetIPFlowHashReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// SwInterfaceIP6ndRaConfig represents VPP binary API message 'sw_interface_ip6nd_ra_config':
//
//	"sw_interface_ip6nd_ra_config",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "suppress"
//	],
//	[
//	    "u8",
//	    "managed"
//	],
//	[
//	    "u8",
//	    "other"
//	],
//	[
//	    "u8",
//	    "ll_option"
//	],
//	[
//	    "u8",
//	    "send_unicast"
//	],
//	[
//	    "u8",
//	    "cease"
//	],
//	[
//	    "u8",
//	    "is_no"
//	],
//	[
//	    "u8",
//	    "default_router"
//	],
//	[
//	    "u32",
//	    "max_interval"
//	],
//	[
//	    "u32",
//	    "min_interval"
//	],
//	[
//	    "u32",
//	    "lifetime"
//	],
//	[
//	    "u32",
//	    "initial_count"
//	],
//	[
//	    "u32",
//	    "initial_interval"
//	],
//	{
//	    "crc": "0xc3f02daa"
//	}
//
type SwInterfaceIP6ndRaConfig struct {
	SwIfIndex       uint32
	Suppress        uint8
	Managed         uint8
	Other           uint8
	LlOption        uint8
	SendUnicast     uint8
	Cease           uint8
	IsNo            uint8
	DefaultRouter   uint8
	MaxInterval     uint32
	MinInterval     uint32
	Lifetime        uint32
	InitialCount    uint32
	InitialInterval uint32
}

func (*SwInterfaceIP6ndRaConfig) GetMessageName() string {
	return "sw_interface_ip6nd_ra_config"
}
func (*SwInterfaceIP6ndRaConfig) GetCrcString() string {
	return "c3f02daa"
}
func (*SwInterfaceIP6ndRaConfig) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// SwInterfaceIP6ndRaConfigReply represents VPP binary API message 'sw_interface_ip6nd_ra_config_reply':
//
//	"sw_interface_ip6nd_ra_config_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type SwInterfaceIP6ndRaConfigReply struct {
	Retval int32
}

func (*SwInterfaceIP6ndRaConfigReply) GetMessageName() string {
	return "sw_interface_ip6nd_ra_config_reply"
}
func (*SwInterfaceIP6ndRaConfigReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SwInterfaceIP6ndRaConfigReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// SwInterfaceIP6ndRaPrefix represents VPP binary API message 'sw_interface_ip6nd_ra_prefix':
//
//	"sw_interface_ip6nd_ra_prefix",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "address",
//	    16
//	],
//	[
//	    "u8",
//	    "address_length"
//	],
//	[
//	    "u8",
//	    "use_default"
//	],
//	[
//	    "u8",
//	    "no_advertise"
//	],
//	[
//	    "u8",
//	    "off_link"
//	],
//	[
//	    "u8",
//	    "no_autoconfig"
//	],
//	[
//	    "u8",
//	    "no_onlink"
//	],
//	[
//	    "u8",
//	    "is_no"
//	],
//	[
//	    "u32",
//	    "val_lifetime"
//	],
//	[
//	    "u32",
//	    "pref_lifetime"
//	],
//	{
//	    "crc": "0xca763c9a"
//	}
//
type SwInterfaceIP6ndRaPrefix struct {
	SwIfIndex     uint32
	Address       []byte `struc:"[16]byte"`
	AddressLength uint8
	UseDefault    uint8
	NoAdvertise   uint8
	OffLink       uint8
	NoAutoconfig  uint8
	NoOnlink      uint8
	IsNo          uint8
	ValLifetime   uint32
	PrefLifetime  uint32
}

func (*SwInterfaceIP6ndRaPrefix) GetMessageName() string {
	return "sw_interface_ip6nd_ra_prefix"
}
func (*SwInterfaceIP6ndRaPrefix) GetCrcString() string {
	return "ca763c9a"
}
func (*SwInterfaceIP6ndRaPrefix) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// SwInterfaceIP6ndRaPrefixReply represents VPP binary API message 'sw_interface_ip6nd_ra_prefix_reply':
//
//	"sw_interface_ip6nd_ra_prefix_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type SwInterfaceIP6ndRaPrefixReply struct {
	Retval int32
}

func (*SwInterfaceIP6ndRaPrefixReply) GetMessageName() string {
	return "sw_interface_ip6nd_ra_prefix_reply"
}
func (*SwInterfaceIP6ndRaPrefixReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SwInterfaceIP6ndRaPrefixReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IP6ndProxyAddDel represents VPP binary API message 'ip6nd_proxy_add_del':
//
//	"ip6nd_proxy_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "is_del"
//	],
//	[
//	    "u8",
//	    "address",
//	    16
//	],
//	{
//	    "crc": "0xd95f0fa0"
//	}
//
type IP6ndProxyAddDel struct {
	SwIfIndex uint32
	IsDel     uint8
	Address   []byte `struc:"[16]byte"`
}

func (*IP6ndProxyAddDel) GetMessageName() string {
	return "ip6nd_proxy_add_del"
}
func (*IP6ndProxyAddDel) GetCrcString() string {
	return "d95f0fa0"
}
func (*IP6ndProxyAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IP6ndProxyAddDelReply represents VPP binary API message 'ip6nd_proxy_add_del_reply':
//
//	"ip6nd_proxy_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IP6ndProxyAddDelReply struct {
	Retval int32
}

func (*IP6ndProxyAddDelReply) GetMessageName() string {
	return "ip6nd_proxy_add_del_reply"
}
func (*IP6ndProxyAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IP6ndProxyAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IP6ndProxyDetails represents VPP binary API message 'ip6nd_proxy_details':
//
//	"ip6nd_proxy_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "address",
//	    16
//	],
//	{
//	    "crc": "0x6a47c974"
//	}
//
type IP6ndProxyDetails struct {
	SwIfIndex uint32
	Address   []byte `struc:"[16]byte"`
}

func (*IP6ndProxyDetails) GetMessageName() string {
	return "ip6nd_proxy_details"
}
func (*IP6ndProxyDetails) GetCrcString() string {
	return "6a47c974"
}
func (*IP6ndProxyDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IP6ndProxyDump represents VPP binary API message 'ip6nd_proxy_dump':
//
//	"ip6nd_proxy_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type IP6ndProxyDump struct{}

func (*IP6ndProxyDump) GetMessageName() string {
	return "ip6nd_proxy_dump"
}
func (*IP6ndProxyDump) GetCrcString() string {
	return "51077d14"
}
func (*IP6ndProxyDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IP6ndSendRouterSolicitation represents VPP binary API message 'ip6nd_send_router_solicitation':
//
//	"ip6nd_send_router_solicitation",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "irt"
//	],
//	[
//	    "u32",
//	    "mrt"
//	],
//	[
//	    "u32",
//	    "mrc"
//	],
//	[
//	    "u32",
//	    "mrd"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "stop"
//	],
//	{
//	    "crc": "0xbd968917"
//	}
//
type IP6ndSendRouterSolicitation struct {
	Irt       uint32
	Mrt       uint32
	Mrc       uint32
	Mrd       uint32
	SwIfIndex uint32
	Stop      uint8
}

func (*IP6ndSendRouterSolicitation) GetMessageName() string {
	return "ip6nd_send_router_solicitation"
}
func (*IP6ndSendRouterSolicitation) GetCrcString() string {
	return "bd968917"
}
func (*IP6ndSendRouterSolicitation) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IP6ndSendRouterSolicitationReply represents VPP binary API message 'ip6nd_send_router_solicitation_reply':
//
//	"ip6nd_send_router_solicitation_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IP6ndSendRouterSolicitationReply struct {
	Retval int32
}

func (*IP6ndSendRouterSolicitationReply) GetMessageName() string {
	return "ip6nd_send_router_solicitation_reply"
}
func (*IP6ndSendRouterSolicitationReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IP6ndSendRouterSolicitationReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// SwInterfaceIP6EnableDisable represents VPP binary API message 'sw_interface_ip6_enable_disable':
//
//	"sw_interface_ip6_enable_disable",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "enable"
//	],
//	{
//	    "crc": "0xa36fadc0"
//	}
//
type SwInterfaceIP6EnableDisable struct {
	SwIfIndex uint32
	Enable    uint8
}

func (*SwInterfaceIP6EnableDisable) GetMessageName() string {
	return "sw_interface_ip6_enable_disable"
}
func (*SwInterfaceIP6EnableDisable) GetCrcString() string {
	return "a36fadc0"
}
func (*SwInterfaceIP6EnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// SwInterfaceIP6EnableDisableReply represents VPP binary API message 'sw_interface_ip6_enable_disable_reply':
//
//	"sw_interface_ip6_enable_disable_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type SwInterfaceIP6EnableDisableReply struct {
	Retval int32
}

func (*SwInterfaceIP6EnableDisableReply) GetMessageName() string {
	return "sw_interface_ip6_enable_disable_reply"
}
func (*SwInterfaceIP6EnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SwInterfaceIP6EnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPAddDelRoute represents VPP binary API message 'ip_add_del_route':
//
//	"ip_add_del_route",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "next_hop_sw_if_index"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u32",
//	    "classify_table_index"
//	],
//	[
//	    "u32",
//	    "next_hop_table_id"
//	],
//	[
//	    "u32",
//	    "next_hop_id"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "u8",
//	    "is_drop"
//	],
//	[
//	    "u8",
//	    "is_unreach"
//	],
//	[
//	    "u8",
//	    "is_prohibit"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u8",
//	    "is_local"
//	],
//	[
//	    "u8",
//	    "is_classify"
//	],
//	[
//	    "u8",
//	    "is_multipath"
//	],
//	[
//	    "u8",
//	    "is_resolve_host"
//	],
//	[
//	    "u8",
//	    "is_resolve_attached"
//	],
//	[
//	    "u8",
//	    "is_dvr"
//	],
//	[
//	    "u8",
//	    "is_source_lookup"
//	],
//	[
//	    "u8",
//	    "is_udp_encap"
//	],
//	[
//	    "u8",
//	    "next_hop_weight"
//	],
//	[
//	    "u8",
//	    "next_hop_preference"
//	],
//	[
//	    "u8",
//	    "next_hop_proto"
//	],
//	[
//	    "u8",
//	    "dst_address_length"
//	],
//	[
//	    "u8",
//	    "dst_address",
//	    16
//	],
//	[
//	    "u8",
//	    "next_hop_address",
//	    16
//	],
//	[
//	    "u8",
//	    "next_hop_n_out_labels"
//	],
//	[
//	    "u32",
//	    "next_hop_via_label"
//	],
//	[
//	    "vl_api_fib_mpls_label_t",
//	    "next_hop_out_label_stack",
//	    0,
//	    "next_hop_n_out_labels"
//	],
//	{
//	    "crc": "0x4219d62d"
//	}
//
type IPAddDelRoute struct {
	NextHopSwIfIndex     uint32
	TableID              uint32
	ClassifyTableIndex   uint32
	NextHopTableID       uint32
	NextHopID            uint32
	IsAdd                uint8
	IsDrop               uint8
	IsUnreach            uint8
	IsProhibit           uint8
	IsIPv6               uint8
	IsLocal              uint8
	IsClassify           uint8
	IsMultipath          uint8
	IsResolveHost        uint8
	IsResolveAttached    uint8
	IsDvr                uint8
	IsSourceLookup       uint8
	IsUDPEncap           uint8
	NextHopWeight        uint8
	NextHopPreference    uint8
	NextHopProto         uint8
	DstAddressLength     uint8
	DstAddress           []byte `struc:"[16]byte"`
	NextHopAddress       []byte `struc:"[16]byte"`
	NextHopNOutLabels    uint8  `struc:"sizeof=NextHopOutLabelStack"`
	NextHopViaLabel      uint32
	NextHopOutLabelStack []FibMplsLabel
}

func (*IPAddDelRoute) GetMessageName() string {
	return "ip_add_del_route"
}
func (*IPAddDelRoute) GetCrcString() string {
	return "4219d62d"
}
func (*IPAddDelRoute) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPAddDelRouteReply represents VPP binary API message 'ip_add_del_route_reply':
//
//	"ip_add_del_route_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "u32",
//	    "stats_index"
//	],
//	{
//	    "crc": "0x1992deab"
//	}
//
type IPAddDelRouteReply struct {
	Retval     int32
	StatsIndex uint32
}

func (*IPAddDelRouteReply) GetMessageName() string {
	return "ip_add_del_route_reply"
}
func (*IPAddDelRouteReply) GetCrcString() string {
	return "1992deab"
}
func (*IPAddDelRouteReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPMrouteAddDel represents VPP binary API message 'ip_mroute_add_del':
//
//	"ip_mroute_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "next_hop_sw_if_index"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u32",
//	    "entry_flags"
//	],
//	[
//	    "u32",
//	    "itf_flags"
//	],
//	[
//	    "u32",
//	    "rpf_id"
//	],
//	[
//	    "u32",
//	    "bier_imp"
//	],
//	[
//	    "u16",
//	    "grp_address_length"
//	],
//	[
//	    "u8",
//	    "next_hop_afi"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u8",
//	    "is_local"
//	],
//	[
//	    "u8",
//	    "grp_address",
//	    16
//	],
//	[
//	    "u8",
//	    "src_address",
//	    16
//	],
//	[
//	    "u8",
//	    "nh_address",
//	    16
//	],
//	{
//	    "crc": "0xf44c17b1"
//	}
//
type IPMrouteAddDel struct {
	NextHopSwIfIndex uint32
	TableID          uint32
	EntryFlags       uint32
	ItfFlags         uint32
	RpfID            uint32
	BierImp          uint32
	GrpAddressLength uint16
	NextHopAfi       uint8
	IsAdd            uint8
	IsIPv6           uint8
	IsLocal          uint8
	GrpAddress       []byte `struc:"[16]byte"`
	SrcAddress       []byte `struc:"[16]byte"`
	NhAddress        []byte `struc:"[16]byte"`
}

func (*IPMrouteAddDel) GetMessageName() string {
	return "ip_mroute_add_del"
}
func (*IPMrouteAddDel) GetCrcString() string {
	return "f44c17b1"
}
func (*IPMrouteAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPMrouteAddDelReply represents VPP binary API message 'ip_mroute_add_del_reply':
//
//	"ip_mroute_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "u32",
//	    "stats_index"
//	],
//	{
//	    "crc": "0x1992deab"
//	}
//
type IPMrouteAddDelReply struct {
	Retval     int32
	StatsIndex uint32
}

func (*IPMrouteAddDelReply) GetMessageName() string {
	return "ip_mroute_add_del_reply"
}
func (*IPMrouteAddDelReply) GetCrcString() string {
	return "1992deab"
}
func (*IPMrouteAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPMfibDump represents VPP binary API message 'ip_mfib_dump':
//
//	"ip_mfib_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type IPMfibDump struct{}

func (*IPMfibDump) GetMessageName() string {
	return "ip_mfib_dump"
}
func (*IPMfibDump) GetCrcString() string {
	return "51077d14"
}
func (*IPMfibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPMfibDetails represents VPP binary API message 'ip_mfib_details':
//
//	"ip_mfib_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u32",
//	    "entry_flags"
//	],
//	[
//	    "u32",
//	    "rpf_id"
//	],
//	[
//	    "u8",
//	    "address_length"
//	],
//	[
//	    "u8",
//	    "grp_address",
//	    4
//	],
//	[
//	    "u8",
//	    "src_address",
//	    4
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "u32",
//	    "stats_index"
//	],
//	[
//	    "vl_api_mfib_path_t",
//	    "path",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x61faa26f"
//	}
//
type IPMfibDetails struct {
	TableID       uint32
	EntryFlags    uint32
	RpfID         uint32
	AddressLength uint8
	GrpAddress    []byte `struc:"[4]byte"`
	SrcAddress    []byte `struc:"[4]byte"`
	Count         uint32 `struc:"sizeof=Path"`
	StatsIndex    uint32
	Path          []MfibPath
}

func (*IPMfibDetails) GetMessageName() string {
	return "ip_mfib_details"
}
func (*IPMfibDetails) GetCrcString() string {
	return "61faa26f"
}
func (*IPMfibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IP6MfibDump represents VPP binary API message 'ip6_mfib_dump':
//
//	"ip6_mfib_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type IP6MfibDump struct{}

func (*IP6MfibDump) GetMessageName() string {
	return "ip6_mfib_dump"
}
func (*IP6MfibDump) GetCrcString() string {
	return "51077d14"
}
func (*IP6MfibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IP6MfibDetails represents VPP binary API message 'ip6_mfib_details':
//
//	"ip6_mfib_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u8",
//	    "address_length"
//	],
//	[
//	    "u8",
//	    "grp_address",
//	    16
//	],
//	[
//	    "u8",
//	    "src_address",
//	    16
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "vl_api_mfib_path_t",
//	    "path",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x738c546e"
//	}
//
type IP6MfibDetails struct {
	TableID       uint32
	AddressLength uint8
	GrpAddress    []byte `struc:"[16]byte"`
	SrcAddress    []byte `struc:"[16]byte"`
	Count         uint32 `struc:"sizeof=Path"`
	Path          []MfibPath
}

func (*IP6MfibDetails) GetMessageName() string {
	return "ip6_mfib_details"
}
func (*IP6MfibDetails) GetCrcString() string {
	return "738c546e"
}
func (*IP6MfibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPAddressDetails represents VPP binary API message 'ip_address_details':
//
//	"ip_address_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "ip",
//	    16
//	],
//	[
//	    "u8",
//	    "prefix_length"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	{
//	    "crc": "0x9bc25966"
//	}
//
type IPAddressDetails struct {
	IP           []byte `struc:"[16]byte"`
	PrefixLength uint8
	SwIfIndex    uint32
	IsIPv6       uint8
}

func (*IPAddressDetails) GetMessageName() string {
	return "ip_address_details"
}
func (*IPAddressDetails) GetCrcString() string {
	return "9bc25966"
}
func (*IPAddressDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPAddressDump represents VPP binary API message 'ip_address_dump':
//
//	"ip_address_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	{
//	    "crc": "0x6b7bcd0a"
//	}
//
type IPAddressDump struct {
	SwIfIndex uint32
	IsIPv6    uint8
}

func (*IPAddressDump) GetMessageName() string {
	return "ip_address_dump"
}
func (*IPAddressDump) GetCrcString() string {
	return "6b7bcd0a"
}
func (*IPAddressDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPUnnumberedDetails represents VPP binary API message 'ip_unnumbered_details':
//
//	"ip_unnumbered_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u32",
//	    "ip_sw_if_index"
//	],
//	{
//	    "crc": "0xae694cf4"
//	}
//
type IPUnnumberedDetails struct {
	SwIfIndex   uint32
	IPSwIfIndex uint32
}

func (*IPUnnumberedDetails) GetMessageName() string {
	return "ip_unnumbered_details"
}
func (*IPUnnumberedDetails) GetCrcString() string {
	return "ae694cf4"
}
func (*IPUnnumberedDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPUnnumberedDump represents VPP binary API message 'ip_unnumbered_dump':
//
//	"ip_unnumbered_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0x529cb13f"
//	}
//
type IPUnnumberedDump struct {
	SwIfIndex uint32
}

func (*IPUnnumberedDump) GetMessageName() string {
	return "ip_unnumbered_dump"
}
func (*IPUnnumberedDump) GetCrcString() string {
	return "529cb13f"
}
func (*IPUnnumberedDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPDetails represents VPP binary API message 'ip_details':
//
//	"ip_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	{
//	    "crc": "0x8bb37ec4"
//	}
//
type IPDetails struct {
	SwIfIndex uint32
	IsIPv6    uint8
}

func (*IPDetails) GetMessageName() string {
	return "ip_details"
}
func (*IPDetails) GetCrcString() string {
	return "8bb37ec4"
}
func (*IPDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPDump represents VPP binary API message 'ip_dump':
//
//	"ip_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	{
//	    "crc": "0xde883da4"
//	}
//
type IPDump struct {
	IsIPv6 uint8
}

func (*IPDump) GetMessageName() string {
	return "ip_dump"
}
func (*IPDump) GetCrcString() string {
	return "de883da4"
}
func (*IPDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// MfibSignalDump represents VPP binary API message 'mfib_signal_dump':
//
//	"mfib_signal_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type MfibSignalDump struct{}

func (*MfibSignalDump) GetMessageName() string {
	return "mfib_signal_dump"
}
func (*MfibSignalDump) GetCrcString() string {
	return "51077d14"
}
func (*MfibSignalDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// MfibSignalDetails represents VPP binary API message 'mfib_signal_details':
//
//	"mfib_signal_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u16",
//	    "grp_address_len"
//	],
//	[
//	    "u8",
//	    "grp_address",
//	    16
//	],
//	[
//	    "u8",
//	    "src_address",
//	    16
//	],
//	[
//	    "u16",
//	    "ip_packet_len"
//	],
//	[
//	    "u8",
//	    "ip_packet_data",
//	    256
//	],
//	{
//	    "crc": "0x3f5f03f5"
//	}
//
type MfibSignalDetails struct {
	SwIfIndex     uint32
	TableID       uint32
	GrpAddressLen uint16
	GrpAddress    []byte `struc:"[16]byte"`
	SrcAddress    []byte `struc:"[16]byte"`
	IPPacketLen   uint16
	IPPacketData  []byte `struc:"[256]byte"`
}

func (*MfibSignalDetails) GetMessageName() string {
	return "mfib_signal_details"
}
func (*MfibSignalDetails) GetCrcString() string {
	return "3f5f03f5"
}
func (*MfibSignalDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPPuntPolice represents VPP binary API message 'ip_punt_police':
//
//	"ip_punt_police",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "policer_index"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "u8",
//	    "is_ip6"
//	],
//	{
//	    "crc": "0x38691592"
//	}
//
type IPPuntPolice struct {
	PolicerIndex uint32
	IsAdd        uint8
	IsIP6        uint8
}

func (*IPPuntPolice) GetMessageName() string {
	return "ip_punt_police"
}
func (*IPPuntPolice) GetCrcString() string {
	return "38691592"
}
func (*IPPuntPolice) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPPuntPoliceReply represents VPP binary API message 'ip_punt_police_reply':
//
//	"ip_punt_police_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPPuntPoliceReply struct {
	Retval int32
}

func (*IPPuntPoliceReply) GetMessageName() string {
	return "ip_punt_police_reply"
}
func (*IPPuntPoliceReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPPuntPoliceReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPPuntRedirect represents VPP binary API message 'ip_punt_redirect':
//
//	"ip_punt_redirect",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "vl_api_punt_redirect_t",
//	    "punt"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	{
//	    "crc": "0xa953495b"
//	}
//
type IPPuntRedirect struct {
	Punt  PuntRedirect
	IsAdd uint8
}

func (*IPPuntRedirect) GetMessageName() string {
	return "ip_punt_redirect"
}
func (*IPPuntRedirect) GetCrcString() string {
	return "a953495b"
}
func (*IPPuntRedirect) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPPuntRedirectReply represents VPP binary API message 'ip_punt_redirect_reply':
//
//	"ip_punt_redirect_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPPuntRedirectReply struct {
	Retval int32
}

func (*IPPuntRedirectReply) GetMessageName() string {
	return "ip_punt_redirect_reply"
}
func (*IPPuntRedirectReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPPuntRedirectReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPPuntRedirectDump represents VPP binary API message 'ip_punt_redirect_dump':
//
//	"ip_punt_redirect_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	{
//	    "crc": "0x6b7bcd0a"
//	}
//
type IPPuntRedirectDump struct {
	SwIfIndex uint32
	IsIPv6    uint8
}

func (*IPPuntRedirectDump) GetMessageName() string {
	return "ip_punt_redirect_dump"
}
func (*IPPuntRedirectDump) GetCrcString() string {
	return "6b7bcd0a"
}
func (*IPPuntRedirectDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPPuntRedirectDetails represents VPP binary API message 'ip_punt_redirect_details':
//
//	"ip_punt_redirect_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "vl_api_punt_redirect_t",
//	    "punt"
//	],
//	{
//	    "crc": "0xa47f70da"
//	}
//
type IPPuntRedirectDetails struct {
	Punt PuntRedirect
}

func (*IPPuntRedirectDetails) GetMessageName() string {
	return "ip_punt_redirect_details"
}
func (*IPPuntRedirectDetails) GetCrcString() string {
	return "a47f70da"
}
func (*IPPuntRedirectDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPContainerProxyAddDel represents VPP binary API message 'ip_container_proxy_add_del':
//
//	"ip_container_proxy_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "ip",
//	    16
//	],
//	[
//	    "u8",
//	    "is_ip4"
//	],
//	[
//	    "u8",
//	    "plen"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	{
//	    "crc": "0x0a355d39"
//	}
//
type IPContainerProxyAddDel struct {
	IP        []byte `struc:"[16]byte"`
	IsIP4     uint8
	Plen      uint8
	SwIfIndex uint32
	IsAdd     uint8
}

func (*IPContainerProxyAddDel) GetMessageName() string {
	return "ip_container_proxy_add_del"
}
func (*IPContainerProxyAddDel) GetCrcString() string {
	return "0a355d39"
}
func (*IPContainerProxyAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPContainerProxyAddDelReply represents VPP binary API message 'ip_container_proxy_add_del_reply':
//
//	"ip_container_proxy_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPContainerProxyAddDelReply struct {
	Retval int32
}

func (*IPContainerProxyAddDelReply) GetMessageName() string {
	return "ip_container_proxy_add_del_reply"
}
func (*IPContainerProxyAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPContainerProxyAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPContainerProxyDump represents VPP binary API message 'ip_container_proxy_dump':
//
//	"ip_container_proxy_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type IPContainerProxyDump struct{}

func (*IPContainerProxyDump) GetMessageName() string {
	return "ip_container_proxy_dump"
}
func (*IPContainerProxyDump) GetCrcString() string {
	return "51077d14"
}
func (*IPContainerProxyDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPContainerProxyDetails represents VPP binary API message 'ip_container_proxy_details':
//
//	"ip_container_proxy_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "vl_api_prefix_t",
//	    "prefix"
//	],
//	{
//	    "crc": "0xd528df63"
//	}
//
type IPContainerProxyDetails struct {
	SwIfIndex uint32
	Prefix    Prefix
}

func (*IPContainerProxyDetails) GetMessageName() string {
	return "ip_container_proxy_details"
}
func (*IPContainerProxyDetails) GetCrcString() string {
	return "d528df63"
}
func (*IPContainerProxyDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPSourceAndPortRangeCheckAddDel represents VPP binary API message 'ip_source_and_port_range_check_add_del':
//
//	"ip_source_and_port_range_check_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "u8",
//	    "mask_length"
//	],
//	[
//	    "u8",
//	    "address",
//	    16
//	],
//	[
//	    "u8",
//	    "number_of_ranges"
//	],
//	[
//	    "u16",
//	    "low_ports",
//	    32
//	],
//	[
//	    "u16",
//	    "high_ports",
//	    32
//	],
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	{
//	    "crc": "0x03d6b03a"
//	}
//
type IPSourceAndPortRangeCheckAddDel struct {
	IsIPv6         uint8
	IsAdd          uint8
	MaskLength     uint8
	Address        []byte `struc:"[16]byte"`
	NumberOfRanges uint8
	LowPorts       []uint16 `struc:"[32]uint16"`
	HighPorts      []uint16 `struc:"[32]uint16"`
	VrfID          uint32
}

func (*IPSourceAndPortRangeCheckAddDel) GetMessageName() string {
	return "ip_source_and_port_range_check_add_del"
}
func (*IPSourceAndPortRangeCheckAddDel) GetCrcString() string {
	return "03d6b03a"
}
func (*IPSourceAndPortRangeCheckAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPSourceAndPortRangeCheckAddDelReply represents VPP binary API message 'ip_source_and_port_range_check_add_del_reply':
//
//	"ip_source_and_port_range_check_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPSourceAndPortRangeCheckAddDelReply struct {
	Retval int32
}

func (*IPSourceAndPortRangeCheckAddDelReply) GetMessageName() string {
	return "ip_source_and_port_range_check_add_del_reply"
}
func (*IPSourceAndPortRangeCheckAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPSourceAndPortRangeCheckAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPSourceAndPortRangeCheckInterfaceAddDel represents VPP binary API message 'ip_source_and_port_range_check_interface_add_del':
//
//	"ip_source_and_port_range_check_interface_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u32",
//	    "tcp_in_vrf_id"
//	],
//	[
//	    "u32",
//	    "tcp_out_vrf_id"
//	],
//	[
//	    "u32",
//	    "udp_in_vrf_id"
//	],
//	[
//	    "u32",
//	    "udp_out_vrf_id"
//	],
//	{
//	    "crc": "0x6966bc44"
//	}
//
type IPSourceAndPortRangeCheckInterfaceAddDel struct {
	IsAdd       uint8
	SwIfIndex   uint32
	TCPInVrfID  uint32
	TCPOutVrfID uint32
	UDPInVrfID  uint32
	UDPOutVrfID uint32
}

func (*IPSourceAndPortRangeCheckInterfaceAddDel) GetMessageName() string {
	return "ip_source_and_port_range_check_interface_add_del"
}
func (*IPSourceAndPortRangeCheckInterfaceAddDel) GetCrcString() string {
	return "6966bc44"
}
func (*IPSourceAndPortRangeCheckInterfaceAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPSourceAndPortRangeCheckInterfaceAddDelReply represents VPP binary API message 'ip_source_and_port_range_check_interface_add_del_reply':
//
//	"ip_source_and_port_range_check_interface_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPSourceAndPortRangeCheckInterfaceAddDelReply struct {
	Retval int32
}

func (*IPSourceAndPortRangeCheckInterfaceAddDelReply) GetMessageName() string {
	return "ip_source_and_port_range_check_interface_add_del_reply"
}
func (*IPSourceAndPortRangeCheckInterfaceAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPSourceAndPortRangeCheckInterfaceAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPSourceCheckInterfaceAddDel represents VPP binary API message 'ip_source_check_interface_add_del':
//
//	"ip_source_check_interface_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "u8",
//	    "loose"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0x0a60152a"
//	}
//
type IPSourceCheckInterfaceAddDel struct {
	IsAdd     uint8
	Loose     uint8
	SwIfIndex uint32
}

func (*IPSourceCheckInterfaceAddDel) GetMessageName() string {
	return "ip_source_check_interface_add_del"
}
func (*IPSourceCheckInterfaceAddDel) GetCrcString() string {
	return "0a60152a"
}
func (*IPSourceCheckInterfaceAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPSourceCheckInterfaceAddDelReply represents VPP binary API message 'ip_source_check_interface_add_del_reply':
//
//	"ip_source_check_interface_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPSourceCheckInterfaceAddDelReply struct {
	Retval int32
}

func (*IPSourceCheckInterfaceAddDelReply) GetMessageName() string {
	return "ip_source_check_interface_add_del_reply"
}
func (*IPSourceCheckInterfaceAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPSourceCheckInterfaceAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPScanNeighborEnableDisable represents VPP binary API message 'ip_scan_neighbor_enable_disable':
//
//	"ip_scan_neighbor_enable_disable",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "mode"
//	],
//	[
//	    "u8",
//	    "scan_interval"
//	],
//	[
//	    "u8",
//	    "max_proc_time"
//	],
//	[
//	    "u8",
//	    "max_update"
//	],
//	[
//	    "u8",
//	    "scan_int_delay"
//	],
//	[
//	    "u8",
//	    "stale_threshold"
//	],
//	{
//	    "crc": "0x0a6bf57a"
//	}
//
type IPScanNeighborEnableDisable struct {
	Mode           uint8
	ScanInterval   uint8
	MaxProcTime    uint8
	MaxUpdate      uint8
	ScanIntDelay   uint8
	StaleThreshold uint8
}

func (*IPScanNeighborEnableDisable) GetMessageName() string {
	return "ip_scan_neighbor_enable_disable"
}
func (*IPScanNeighborEnableDisable) GetCrcString() string {
	return "0a6bf57a"
}
func (*IPScanNeighborEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPScanNeighborEnableDisableReply represents VPP binary API message 'ip_scan_neighbor_enable_disable_reply':
//
//	"ip_scan_neighbor_enable_disable_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPScanNeighborEnableDisableReply struct {
	Retval int32
}

func (*IPScanNeighborEnableDisableReply) GetMessageName() string {
	return "ip_scan_neighbor_enable_disable_reply"
}
func (*IPScanNeighborEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPScanNeighborEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPProbeNeighbor represents VPP binary API message 'ip_probe_neighbor':
//
//	"ip_probe_neighbor",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "dst_address",
//	    16
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	{
//	    "crc": "0x1e44bfd7"
//	}
//
type IPProbeNeighbor struct {
	SwIfIndex  uint32
	DstAddress []byte `struc:"[16]byte"`
	IsIPv6     uint8
}

func (*IPProbeNeighbor) GetMessageName() string {
	return "ip_probe_neighbor"
}
func (*IPProbeNeighbor) GetCrcString() string {
	return "1e44bfd7"
}
func (*IPProbeNeighbor) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPProbeNeighborReply represents VPP binary API message 'ip_probe_neighbor_reply':
//
//	"ip_probe_neighbor_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPProbeNeighborReply struct {
	Retval int32
}

func (*IPProbeNeighborReply) GetMessageName() string {
	return "ip_probe_neighbor_reply"
}
func (*IPProbeNeighborReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPProbeNeighborReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantIP4ArpEvents represents VPP binary API message 'want_ip4_arp_events':
//
//	"want_ip4_arp_events",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	[
//	    "u32",
//	    "address"
//	],
//	{
//	    "crc": "0x77e06379"
//	}
//
type WantIP4ArpEvents struct {
	EnableDisable uint8
	PID           uint32
	Address       uint32
}

func (*WantIP4ArpEvents) GetMessageName() string {
	return "want_ip4_arp_events"
}
func (*WantIP4ArpEvents) GetCrcString() string {
	return "77e06379"
}
func (*WantIP4ArpEvents) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP4ArpEventsReply represents VPP binary API message 'want_ip4_arp_events_reply':
//
//	"want_ip4_arp_events_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP4ArpEventsReply struct {
	Retval int32
}

func (*WantIP4ArpEventsReply) GetMessageName() string {
	return "want_ip4_arp_events_reply"
}
func (*WantIP4ArpEventsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP4ArpEventsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IP4ArpEvent represents VPP binary API message 'ip4_arp_event':
//
//	"ip4_arp_event",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "address"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "new_mac",
//	    6
//	],
//	[
//	    "u8",
//	    "mac_ip"
//	],
//	{
//	    "crc": "0xef7235f7"
//	}
//
type IP4ArpEvent struct {
	Address   uint32
	PID       uint32
	SwIfIndex uint32
	NewMac    []byte `struc:"[6]byte"`
	MacIP     uint8
}

func (*IP4ArpEvent) GetMessageName() string {
	return "ip4_arp_event"
}
func (*IP4ArpEvent) GetCrcString() string {
	return "ef7235f7"
}
func (*IP4ArpEvent) GetMessageType() api.MessageType {
	return api.EventMessage
}

// WantIP6NdEvents represents VPP binary API message 'want_ip6_nd_events':
//
//	"want_ip6_nd_events",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	[
//	    "u8",
//	    "address",
//	    16
//	],
//	{
//	    "crc": "0x1cf65fbb"
//	}
//
type WantIP6NdEvents struct {
	EnableDisable uint8
	PID           uint32
	Address       []byte `struc:"[16]byte"`
}

func (*WantIP6NdEvents) GetMessageName() string {
	return "want_ip6_nd_events"
}
func (*WantIP6NdEvents) GetCrcString() string {
	return "1cf65fbb"
}
func (*WantIP6NdEvents) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP6NdEventsReply represents VPP binary API message 'want_ip6_nd_events_reply':
//
//	"want_ip6_nd_events_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP6NdEventsReply struct {
	Retval int32
}

func (*WantIP6NdEventsReply) GetMessageName() string {
	return "want_ip6_nd_events_reply"
}
func (*WantIP6NdEventsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP6NdEventsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IP6NdEvent represents VPP binary API message 'ip6_nd_event':
//
//	"ip6_nd_event",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "address",
//	    16
//	],
//	[
//	    "u8",
//	    "new_mac",
//	    6
//	],
//	[
//	    "u8",
//	    "mac_ip"
//	],
//	{
//	    "crc": "0x96ab2fdd"
//	}
//
type IP6NdEvent struct {
	PID       uint32
	SwIfIndex uint32
	Address   []byte `struc:"[16]byte"`
	NewMac    []byte `struc:"[6]byte"`
	MacIP     uint8
}

func (*IP6NdEvent) GetMessageName() string {
	return "ip6_nd_event"
}
func (*IP6NdEvent) GetCrcString() string {
	return "96ab2fdd"
}
func (*IP6NdEvent) GetMessageType() api.MessageType {
	return api.EventMessage
}

// WantIP6RaEvents represents VPP binary API message 'want_ip6_ra_events':
//
//	"want_ip6_ra_events",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x05b454b5"
//	}
//
type WantIP6RaEvents struct {
	EnableDisable uint8
	PID           uint32
}

func (*WantIP6RaEvents) GetMessageName() string {
	return "want_ip6_ra_events"
}
func (*WantIP6RaEvents) GetCrcString() string {
	return "05b454b5"
}
func (*WantIP6RaEvents) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP6RaEventsReply represents VPP binary API message 'want_ip6_ra_events_reply':
//
//	"want_ip6_ra_events_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP6RaEventsReply struct {
	Retval int32
}

func (*WantIP6RaEventsReply) GetMessageName() string {
	return "want_ip6_ra_events_reply"
}
func (*WantIP6RaEventsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP6RaEventsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IP6RaEvent represents VPP binary API message 'ip6_ra_event':
//
//	"ip6_ra_event",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "router_address",
//	    16
//	],
//	[
//	    "u8",
//	    "current_hop_limit"
//	],
//	[
//	    "u8",
//	    "flags"
//	],
//	[
//	    "u16",
//	    "router_lifetime_in_sec"
//	],
//	[
//	    "u32",
//	    "neighbor_reachable_time_in_msec"
//	],
//	[
//	    "u32",
//	    "time_in_msec_between_retransmitted_neighbor_solicitations"
//	],
//	[
//	    "u32",
//	    "n_prefixes"
//	],
//	[
//	    "vl_api_ip6_ra_prefix_info_t",
//	    "prefixes",
//	    0,
//	    "n_prefixes"
//	],
//	{
//	    "crc": "0xc5e54257"
//	}
//
type IP6RaEvent struct {
	PID                                                 uint32
	SwIfIndex                                           uint32
	RouterAddress                                       []byte `struc:"[16]byte"`
	CurrentHopLimit                                     uint8
	Flags                                               uint8
	RouterLifetimeInSec                                 uint16
	NeighborReachableTimeInMsec                         uint32
	TimeInMsecBetweenRetransmittedNeighborSolicitations uint32
	NPrefixes                                           uint32 `struc:"sizeof=Prefixes"`
	Prefixes                                            []IP6RaPrefixInfo
}

func (*IP6RaEvent) GetMessageName() string {
	return "ip6_ra_event"
}
func (*IP6RaEvent) GetCrcString() string {
	return "c5e54257"
}
func (*IP6RaEvent) GetMessageType() api.MessageType {
	return api.EventMessage
}

// ProxyArpAddDel represents VPP binary API message 'proxy_arp_add_del':
//
//	"proxy_arp_add_del",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "is_add"
//	],
//	[
//	    "vl_api_proxy_arp_t",
//	    "proxy"
//	],
//	{
//	    "crc": "0x227988d9"
//	}
//
type ProxyArpAddDel struct {
	IsAdd uint8
	Proxy ProxyArp
}

func (*ProxyArpAddDel) GetMessageName() string {
	return "proxy_arp_add_del"
}
func (*ProxyArpAddDel) GetCrcString() string {
	return "227988d9"
}
func (*ProxyArpAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// ProxyArpAddDelReply represents VPP binary API message 'proxy_arp_add_del_reply':
//
//	"proxy_arp_add_del_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type ProxyArpAddDelReply struct {
	Retval int32
}

func (*ProxyArpAddDelReply) GetMessageName() string {
	return "proxy_arp_add_del_reply"
}
func (*ProxyArpAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*ProxyArpAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// ProxyArpDump represents VPP binary API message 'proxy_arp_dump':
//
//	"proxy_arp_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type ProxyArpDump struct{}

func (*ProxyArpDump) GetMessageName() string {
	return "proxy_arp_dump"
}
func (*ProxyArpDump) GetCrcString() string {
	return "51077d14"
}
func (*ProxyArpDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// ProxyArpDetails represents VPP binary API message 'proxy_arp_details':
//
//	"proxy_arp_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "vl_api_proxy_arp_t",
//	    "proxy"
//	],
//	{
//	    "crc": "0x9b707c77"
//	}
//
type ProxyArpDetails struct {
	Proxy ProxyArp
}

func (*ProxyArpDetails) GetMessageName() string {
	return "proxy_arp_details"
}
func (*ProxyArpDetails) GetCrcString() string {
	return "9b707c77"
}
func (*ProxyArpDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// ProxyArpIntfcEnableDisable represents VPP binary API message 'proxy_arp_intfc_enable_disable':
//
//	"proxy_arp_intfc_enable_disable",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "enable_disable"
//	],
//	{
//	    "crc": "0x69d24598"
//	}
//
type ProxyArpIntfcEnableDisable struct {
	SwIfIndex     uint32
	EnableDisable uint8
}

func (*ProxyArpIntfcEnableDisable) GetMessageName() string {
	return "proxy_arp_intfc_enable_disable"
}
func (*ProxyArpIntfcEnableDisable) GetCrcString() string {
	return "69d24598"
}
func (*ProxyArpIntfcEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// ProxyArpIntfcEnableDisableReply represents VPP binary API message 'proxy_arp_intfc_enable_disable_reply':
//
//	"proxy_arp_intfc_enable_disable_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type ProxyArpIntfcEnableDisableReply struct {
	Retval int32
}

func (*ProxyArpIntfcEnableDisableReply) GetMessageName() string {
	return "proxy_arp_intfc_enable_disable_reply"
}
func (*ProxyArpIntfcEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*ProxyArpIntfcEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// ProxyArpIntfcDump represents VPP binary API message 'proxy_arp_intfc_dump':
//
//	"proxy_arp_intfc_dump",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type ProxyArpIntfcDump struct{}

func (*ProxyArpIntfcDump) GetMessageName() string {
	return "proxy_arp_intfc_dump"
}
func (*ProxyArpIntfcDump) GetCrcString() string {
	return "51077d14"
}
func (*ProxyArpIntfcDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// ProxyArpIntfcDetails represents VPP binary API message 'proxy_arp_intfc_details':
//
//	"proxy_arp_intfc_details",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	{
//	    "crc": "0xf6458e5f"
//	}
//
type ProxyArpIntfcDetails struct {
	SwIfIndex uint32
}

func (*ProxyArpIntfcDetails) GetMessageName() string {
	return "proxy_arp_intfc_details"
}
func (*ProxyArpIntfcDetails) GetCrcString() string {
	return "f6458e5f"
}
func (*ProxyArpIntfcDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// ResetFib represents VPP binary API message 'reset_fib':
//
//	"reset_fib",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	{
//	    "crc": "0x8553ebd9"
//	}
//
type ResetFib struct {
	VrfID  uint32
	IsIPv6 uint8
}

func (*ResetFib) GetMessageName() string {
	return "reset_fib"
}
func (*ResetFib) GetCrcString() string {
	return "8553ebd9"
}
func (*ResetFib) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// ResetFibReply represents VPP binary API message 'reset_fib_reply':
//
//	"reset_fib_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type ResetFibReply struct {
	Retval int32
}

func (*ResetFibReply) GetMessageName() string {
	return "reset_fib_reply"
}
func (*ResetFibReply) GetCrcString() string {
	return "e8d4e804"
}
func (*ResetFibReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// SetArpNeighborLimit represents VPP binary API message 'set_arp_neighbor_limit':
//
//	"set_arp_neighbor_limit",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "is_ipv6"
//	],
//	[
//	    "u32",
//	    "arp_neighbor_limit"
//	],
//	{
//	    "crc": "0x97d01fd6"
//	}
//
type SetArpNeighborLimit struct {
	IsIPv6           uint8
	ArpNeighborLimit uint32
}

func (*SetArpNeighborLimit) GetMessageName() string {
	return "set_arp_neighbor_limit"
}
func (*SetArpNeighborLimit) GetCrcString() string {
	return "97d01fd6"
}
func (*SetArpNeighborLimit) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// SetArpNeighborLimitReply represents VPP binary API message 'set_arp_neighbor_limit_reply':
//
//	"set_arp_neighbor_limit_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type SetArpNeighborLimitReply struct {
	Retval int32
}

func (*SetArpNeighborLimitReply) GetMessageName() string {
	return "set_arp_neighbor_limit_reply"
}
func (*SetArpNeighborLimitReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SetArpNeighborLimitReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IoamEnable represents VPP binary API message 'ioam_enable':
//
//	"ioam_enable",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u16",
//	    "id"
//	],
//	[
//	    "u8",
//	    "seqno"
//	],
//	[
//	    "u8",
//	    "analyse"
//	],
//	[
//	    "u8",
//	    "pot_enable"
//	],
//	[
//	    "u8",
//	    "trace_enable"
//	],
//	[
//	    "u32",
//	    "node_id"
//	],
//	{
//	    "crc": "0x9392e032"
//	}
//
type IoamEnable struct {
	ID          uint16
	Seqno       uint8
	Analyse     uint8
	PotEnable   uint8
	TraceEnable uint8
	NodeID      uint32
}

func (*IoamEnable) GetMessageName() string {
	return "ioam_enable"
}
func (*IoamEnable) GetCrcString() string {
	return "9392e032"
}
func (*IoamEnable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IoamEnableReply represents VPP binary API message 'ioam_enable_reply':
//
//	"ioam_enable_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IoamEnableReply struct {
	Retval int32
}

func (*IoamEnableReply) GetMessageName() string {
	return "ioam_enable_reply"
}
func (*IoamEnableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IoamEnableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IoamDisable represents VPP binary API message 'ioam_disable':
//
//	"ioam_disable",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u16",
//	    "id"
//	],
//	{
//	    "crc": "0x6b16a45e"
//	}
//
type IoamDisable struct {
	ID uint16
}

func (*IoamDisable) GetMessageName() string {
	return "ioam_disable"
}
func (*IoamDisable) GetCrcString() string {
	return "6b16a45e"
}
func (*IoamDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IoamDisableReply represents VPP binary API message 'ioam_disable_reply':
//
//	"ioam_disable_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IoamDisableReply struct {
	Retval int32
}

func (*IoamDisableReply) GetMessageName() string {
	return "ioam_disable_reply"
}
func (*IoamDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IoamDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPReassemblySet represents VPP binary API message 'ip_reassembly_set':
//
//	"ip_reassembly_set",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "timeout_ms"
//	],
//	[
//	    "u32",
//	    "max_reassemblies"
//	],
//	[
//	    "u32",
//	    "expire_walk_interval_ms"
//	],
//	[
//	    "u8",
//	    "is_ip6"
//	],
//	{
//	    "crc": "0x1db184de"
//	}
//
type IPReassemblySet struct {
	TimeoutMs            uint32
	MaxReassemblies      uint32
	ExpireWalkIntervalMs uint32
	IsIP6                uint8
}

func (*IPReassemblySet) GetMessageName() string {
	return "ip_reassembly_set"
}
func (*IPReassemblySet) GetCrcString() string {
	return "1db184de"
}
func (*IPReassemblySet) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPReassemblySetReply represents VPP binary API message 'ip_reassembly_set_reply':
//
//	"ip_reassembly_set_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPReassemblySetReply struct {
	Retval int32
}

func (*IPReassemblySetReply) GetMessageName() string {
	return "ip_reassembly_set_reply"
}
func (*IPReassemblySetReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPReassemblySetReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPReassemblyGet represents VPP binary API message 'ip_reassembly_get':
//
//	"ip_reassembly_get",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u8",
//	    "is_ip6"
//	],
//	{
//	    "crc": "0x6fe91190"
//	}
//
type IPReassemblyGet struct {
	IsIP6 uint8
}

func (*IPReassemblyGet) GetMessageName() string {
	return "ip_reassembly_get"
}
func (*IPReassemblyGet) GetCrcString() string {
	return "6fe91190"
}
func (*IPReassemblyGet) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPReassemblyGetReply represents VPP binary API message 'ip_reassembly_get_reply':
//
//	"ip_reassembly_get_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "u32",
//	    "timeout_ms"
//	],
//	[
//	    "u32",
//	    "max_reassemblies"
//	],
//	[
//	    "u32",
//	    "expire_walk_interval_ms"
//	],
//	[
//	    "u8",
//	    "is_ip6"
//	],
//	{
//	    "crc": "0x1f90afd1"
//	}
//
type IPReassemblyGetReply struct {
	Retval               int32
	TimeoutMs            uint32
	MaxReassemblies      uint32
	ExpireWalkIntervalMs uint32
	IsIP6                uint8
}

func (*IPReassemblyGetReply) GetMessageName() string {
	return "ip_reassembly_get_reply"
}
func (*IPReassemblyGetReply) GetCrcString() string {
	return "1f90afd1"
}
func (*IPReassemblyGetReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// IPReassemblyEnableDisable represents VPP binary API message 'ip_reassembly_enable_disable':
//
//	"ip_reassembly_enable_disable",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "enable_ip4"
//	],
//	[
//	    "u8",
//	    "enable_ip6"
//	],
//	{
//	    "crc": "0xbb8dc5d0"
//	}
//
type IPReassemblyEnableDisable struct {
	SwIfIndex uint32
	EnableIP4 uint8
	EnableIP6 uint8
}

func (*IPReassemblyEnableDisable) GetMessageName() string {
	return "ip_reassembly_enable_disable"
}
func (*IPReassemblyEnableDisable) GetCrcString() string {
	return "bb8dc5d0"
}
func (*IPReassemblyEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// IPReassemblyEnableDisableReply represents VPP binary API message 'ip_reassembly_enable_disable_reply':
//
//	"ip_reassembly_enable_disable_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type IPReassemblyEnableDisableReply struct {
	Retval int32
}

func (*IPReassemblyEnableDisableReply) GetMessageName() string {
	return "ip_reassembly_enable_disable_reply"
}
func (*IPReassemblyEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IPReassemblyEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func init() {
	api.RegisterMessage((*IPTableAddDel)(nil), "ip.IPTableAddDel")
	api.RegisterMessage((*IPTableAddDelReply)(nil), "ip.IPTableAddDelReply")
	api.RegisterMessage((*IPFibDump)(nil), "ip.IPFibDump")
	api.RegisterMessage((*IPFibDetails)(nil), "ip.IPFibDetails")
	api.RegisterMessage((*IP6FibDump)(nil), "ip.IP6FibDump")
	api.RegisterMessage((*IP6FibDetails)(nil), "ip.IP6FibDetails")
	api.RegisterMessage((*IPNeighborDump)(nil), "ip.IPNeighborDump")
	api.RegisterMessage((*IPNeighborDetails)(nil), "ip.IPNeighborDetails")
	api.RegisterMessage((*IPNeighborAddDel)(nil), "ip.IPNeighborAddDel")
	api.RegisterMessage((*IPNeighborAddDelReply)(nil), "ip.IPNeighborAddDelReply")
	api.RegisterMessage((*SetIPFlowHash)(nil), "ip.SetIPFlowHash")
	api.RegisterMessage((*SetIPFlowHashReply)(nil), "ip.SetIPFlowHashReply")
	api.RegisterMessage((*SwInterfaceIP6ndRaConfig)(nil), "ip.SwInterfaceIP6ndRaConfig")
	api.RegisterMessage((*SwInterfaceIP6ndRaConfigReply)(nil), "ip.SwInterfaceIP6ndRaConfigReply")
	api.RegisterMessage((*SwInterfaceIP6ndRaPrefix)(nil), "ip.SwInterfaceIP6ndRaPrefix")
	api.RegisterMessage((*SwInterfaceIP6ndRaPrefixReply)(nil), "ip.SwInterfaceIP6ndRaPrefixReply")
	api.RegisterMessage((*IP6ndProxyAddDel)(nil), "ip.IP6ndProxyAddDel")
	api.RegisterMessage((*IP6ndProxyAddDelReply)(nil), "ip.IP6ndProxyAddDelReply")
	api.RegisterMessage((*IP6ndProxyDetails)(nil), "ip.IP6ndProxyDetails")
	api.RegisterMessage((*IP6ndProxyDump)(nil), "ip.IP6ndProxyDump")
	api.RegisterMessage((*IP6ndSendRouterSolicitation)(nil), "ip.IP6ndSendRouterSolicitation")
	api.RegisterMessage((*IP6ndSendRouterSolicitationReply)(nil), "ip.IP6ndSendRouterSolicitationReply")
	api.RegisterMessage((*SwInterfaceIP6EnableDisable)(nil), "ip.SwInterfaceIP6EnableDisable")
	api.RegisterMessage((*SwInterfaceIP6EnableDisableReply)(nil), "ip.SwInterfaceIP6EnableDisableReply")
	api.RegisterMessage((*IPAddDelRoute)(nil), "ip.IPAddDelRoute")
	api.RegisterMessage((*IPAddDelRouteReply)(nil), "ip.IPAddDelRouteReply")
	api.RegisterMessage((*IPMrouteAddDel)(nil), "ip.IPMrouteAddDel")
	api.RegisterMessage((*IPMrouteAddDelReply)(nil), "ip.IPMrouteAddDelReply")
	api.RegisterMessage((*IPMfibDump)(nil), "ip.IPMfibDump")
	api.RegisterMessage((*IPMfibDetails)(nil), "ip.IPMfibDetails")
	api.RegisterMessage((*IP6MfibDump)(nil), "ip.IP6MfibDump")
	api.RegisterMessage((*IP6MfibDetails)(nil), "ip.IP6MfibDetails")
	api.RegisterMessage((*IPAddressDetails)(nil), "ip.IPAddressDetails")
	api.RegisterMessage((*IPAddressDump)(nil), "ip.IPAddressDump")
	api.RegisterMessage((*IPUnnumberedDetails)(nil), "ip.IPUnnumberedDetails")
	api.RegisterMessage((*IPUnnumberedDump)(nil), "ip.IPUnnumberedDump")
	api.RegisterMessage((*IPDetails)(nil), "ip.IPDetails")
	api.RegisterMessage((*IPDump)(nil), "ip.IPDump")
	api.RegisterMessage((*MfibSignalDump)(nil), "ip.MfibSignalDump")
	api.RegisterMessage((*MfibSignalDetails)(nil), "ip.MfibSignalDetails")
	api.RegisterMessage((*IPPuntPolice)(nil), "ip.IPPuntPolice")
	api.RegisterMessage((*IPPuntPoliceReply)(nil), "ip.IPPuntPoliceReply")
	api.RegisterMessage((*IPPuntRedirect)(nil), "ip.IPPuntRedirect")
	api.RegisterMessage((*IPPuntRedirectReply)(nil), "ip.IPPuntRedirectReply")
	api.RegisterMessage((*IPPuntRedirectDump)(nil), "ip.IPPuntRedirectDump")
	api.RegisterMessage((*IPPuntRedirectDetails)(nil), "ip.IPPuntRedirectDetails")
	api.RegisterMessage((*IPContainerProxyAddDel)(nil), "ip.IPContainerProxyAddDel")
	api.RegisterMessage((*IPContainerProxyAddDelReply)(nil), "ip.IPContainerProxyAddDelReply")
	api.RegisterMessage((*IPContainerProxyDump)(nil), "ip.IPContainerProxyDump")
	api.RegisterMessage((*IPContainerProxyDetails)(nil), "ip.IPContainerProxyDetails")
	api.RegisterMessage((*IPSourceAndPortRangeCheckAddDel)(nil), "ip.IPSourceAndPortRangeCheckAddDel")
	api.RegisterMessage((*IPSourceAndPortRangeCheckAddDelReply)(nil), "ip.IPSourceAndPortRangeCheckAddDelReply")
	api.RegisterMessage((*IPSourceAndPortRangeCheckInterfaceAddDel)(nil), "ip.IPSourceAndPortRangeCheckInterfaceAddDel")
	api.RegisterMessage((*IPSourceAndPortRangeCheckInterfaceAddDelReply)(nil), "ip.IPSourceAndPortRangeCheckInterfaceAddDelReply")
	api.RegisterMessage((*IPSourceCheckInterfaceAddDel)(nil), "ip.IPSourceCheckInterfaceAddDel")
	api.RegisterMessage((*IPSourceCheckInterfaceAddDelReply)(nil), "ip.IPSourceCheckInterfaceAddDelReply")
	api.RegisterMessage((*IPScanNeighborEnableDisable)(nil), "ip.IPScanNeighborEnableDisable")
	api.RegisterMessage((*IPScanNeighborEnableDisableReply)(nil), "ip.IPScanNeighborEnableDisableReply")
	api.RegisterMessage((*IPProbeNeighbor)(nil), "ip.IPProbeNeighbor")
	api.RegisterMessage((*IPProbeNeighborReply)(nil), "ip.IPProbeNeighborReply")
	api.RegisterMessage((*WantIP4ArpEvents)(nil), "ip.WantIP4ArpEvents")
	api.RegisterMessage((*WantIP4ArpEventsReply)(nil), "ip.WantIP4ArpEventsReply")
	api.RegisterMessage((*IP4ArpEvent)(nil), "ip.IP4ArpEvent")
	api.RegisterMessage((*WantIP6NdEvents)(nil), "ip.WantIP6NdEvents")
	api.RegisterMessage((*WantIP6NdEventsReply)(nil), "ip.WantIP6NdEventsReply")
	api.RegisterMessage((*IP6NdEvent)(nil), "ip.IP6NdEvent")
	api.RegisterMessage((*WantIP6RaEvents)(nil), "ip.WantIP6RaEvents")
	api.RegisterMessage((*WantIP6RaEventsReply)(nil), "ip.WantIP6RaEventsReply")
	api.RegisterMessage((*IP6RaEvent)(nil), "ip.IP6RaEvent")
	api.RegisterMessage((*ProxyArpAddDel)(nil), "ip.ProxyArpAddDel")
	api.RegisterMessage((*ProxyArpAddDelReply)(nil), "ip.ProxyArpAddDelReply")
	api.RegisterMessage((*ProxyArpDump)(nil), "ip.ProxyArpDump")
	api.RegisterMessage((*ProxyArpDetails)(nil), "ip.ProxyArpDetails")
	api.RegisterMessage((*ProxyArpIntfcEnableDisable)(nil), "ip.ProxyArpIntfcEnableDisable")
	api.RegisterMessage((*ProxyArpIntfcEnableDisableReply)(nil), "ip.ProxyArpIntfcEnableDisableReply")
	api.RegisterMessage((*ProxyArpIntfcDump)(nil), "ip.ProxyArpIntfcDump")
	api.RegisterMessage((*ProxyArpIntfcDetails)(nil), "ip.ProxyArpIntfcDetails")
	api.RegisterMessage((*ResetFib)(nil), "ip.ResetFib")
	api.RegisterMessage((*ResetFibReply)(nil), "ip.ResetFibReply")
	api.RegisterMessage((*SetArpNeighborLimit)(nil), "ip.SetArpNeighborLimit")
	api.RegisterMessage((*SetArpNeighborLimitReply)(nil), "ip.SetArpNeighborLimitReply")
	api.RegisterMessage((*IoamEnable)(nil), "ip.IoamEnable")
	api.RegisterMessage((*IoamEnableReply)(nil), "ip.IoamEnableReply")
	api.RegisterMessage((*IoamDisable)(nil), "ip.IoamDisable")
	api.RegisterMessage((*IoamDisableReply)(nil), "ip.IoamDisableReply")
	api.RegisterMessage((*IPReassemblySet)(nil), "ip.IPReassemblySet")
	api.RegisterMessage((*IPReassemblySetReply)(nil), "ip.IPReassemblySetReply")
	api.RegisterMessage((*IPReassemblyGet)(nil), "ip.IPReassemblyGet")
	api.RegisterMessage((*IPReassemblyGetReply)(nil), "ip.IPReassemblyGetReply")
	api.RegisterMessage((*IPReassemblyEnableDisable)(nil), "ip.IPReassemblyEnableDisable")
	api.RegisterMessage((*IPReassemblyEnableDisableReply)(nil), "ip.IPReassemblyEnableDisableReply")
}
