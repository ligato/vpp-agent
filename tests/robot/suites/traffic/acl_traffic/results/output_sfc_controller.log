*** Time:2018-05-16 15:17:09.754 Command: sudo docker create -it --name sfc_controller ligato/prod_sfc_controller
9386c35dc335b2ceff69a81ea34076d0dbd6745babdd9a4cb2f03f7c42ebcea8
*** Time:2018-05-16 15:17:10.114 Command: sudo docker cp /tmp/acl_basic.conf sfc_controller:/opt/sfc-controller/dev/sfc.conf

*** Time:2018-05-16 15:17:10.493 Command: sudo docker start -i sfc_controller
[36mINFO[0m[0000] Starting agent                                [36mBuildDate[0m= [36mCommitHash[0m= [36mloc[0m="core/agent_core.go(195)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin Logs: Init took 57.463Âµs               [36mdurationInNs[0m=57463 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[37mDEBU[0m[0000] Microservice label is set to vpp1             [37mloc[0m="servicelabel/plugin_impl_servicelabel.go(49)" [37mlogger[0m=defaultLogger
[36mINFO[0m[0000] plugin ServiceLabel: Init took 55.784Âµs       [36mdurationInNs[0m=55784 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin StatusCheck: Init took 3.22Âµs          [36mdurationInNs[0m=3220 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin HTTP: Init took 117.909Âµs              [36mdurationInNs[0m=117909 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin HealthRPC: Init took 459ns             [36mdurationInNs[0m=459 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin LogMngRPC: Init took 2.789Âµs           [36mdurationInNs[0m=2789 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] Connecting to etcd took 764.186Âµs             [36mdurationInNs[0m=764186 [36mloc[0m="etcdv3/bytes_broker_impl.go(85)" [36mlogger[0m=etcdv3
[36mINFO[0m[0000] Plugin etcdv3: status check probe registered  [36mloc[0m="statuscheck/plugin_impl_statuscheck.go(144)" [36mlogger[0m=status-check
[36mINFO[0m[0000] plugin ETCD: Init took 3.697434ms             [36mdurationInNs[0m=3697434 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] Plugin SfcController: status check probe registered  [36mloc[0m="statuscheck/plugin_impl_statuscheck.go(144)" [36mlogger[0m=status-check
[36mINFO[0m[0000] Initializing sfcCtrlPlugin 'SfcController'    [36mloc[0m="core/controller_core.go(116)" [36mlogger[0m=defaultLogger
[37mDEBU[0m[0000] LogFlags:                                     [37mloc[0m="core/controller_core.go(62)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] 	cnpDriver:'sfcctlrl2'                        [37mloc[0m="core/controller_core.go(63)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] 	sfcConfigFile:'/opt/sfc-controller/dev/sfc.conf'  [37mloc[0m="core/controller_core.go(64)" [37mlogger[0m=defaultLogger
[36mINFO[0m[0000] InitHTTPHandlers: registering controller URLs. sfcplug:%!(EXTRA *core.SfcControllerPluginHandler=&{etcdv3 http 0xc420166a80 {0 0} <nil> <nil> {map[] map[] map[] {0 0 0 0 <nil> <nil>}} false 0xc42016b720 map[]})  [36mloc[0m="core/http_handlers.go(45)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] CNP Driver: Sfc Controller L2 Plugin: sfcctlrl2  [36mloc[0m="core/controller_core.go(131)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileStart: enter ...                     [36mloc[0m="core/reconcile.go(44)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileLoadAllVppLabels: begin ...          [36mloc[0m="core/reconcile.go(71)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileLoadAllVppLabels: adding label to reconcile label map: agent_vpp_1  [36mloc[0m="core/reconcile.go(82)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileLoadAllVppLabels: adding label to reconcile label map: node_1  [36mloc[0m="core/reconcile.go(82)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileLoadAllVppLabels: adding label to reconcile label map: node_2  [36mloc[0m="core/reconcile.go(82)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileLoadAllVppLabels: exit ...           [36mloc[0m="core/reconcile.go(91)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileStart: begin ...                     [36mloc[0m="l2driver/reconcile.go(95)" [36mlogger[0m=defaultLogger
sequencerInitFromReconcileCache: sequence IDs after loading id's:  {0 0 0 0}
[36mINFO[0m[0000] ReconcileStart: exit ...                      [36mloc[0m="l2driver/reconcile.go(114)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileStart: exit ...                      [36mloc[0m="core/reconcile.go(54)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReadEtcdDatastoreIntoRAMCache: start ...      [36mloc[0m="core/database.go(60)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReadEtcdDatastoreIntoRAMCache: end ...        [36mloc[0m="core/database.go(75)" [36mlogger[0m=defaultLogger
[37mDEBU[0m[0000] fpath of sfc-config: '/opt/sfc-controller/dev/sfc.conf'  [37mloc[0m="core/sfc_config_yaml.go(39)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] sfc-config: '&{%!s(int=1) Basic Example static config for hosting 2 containers with a vnf-agent and 1 container with agent and vpp [] [{agent_vpp_1    02:00:00:AA:BB:00 6.0.0.100   %!s(bool=false) %!s(uint32=0) RX_MODE_UNKNOWN}] [{two-sample-vnf-containers Wire 2 VNF containers to the vpp switch SFC_EW_BD  %!s(uint32=0) <nil> [container:"node_1" port_label:"node1_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.10" type:NON_VPP_CONTAINER_AFP  container:"node_2" port_label:"node2_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.11" type:NON_VPP_CONTAINER_AFP ]}] {%!s(uint32=0) %!s(uint32=0) %!s(uint32=0) %!s(uint32=0) <nil> <nil>}}'  [37mloc[0m="core/sfc_config_yaml.go(52)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] copyYamlConfigToRAMCache: sp: %!(EXTRA controller.SystemParameters={0 0 0 0 <nil> <nil>})  [37mloc[0m="core/sfc_config_yaml.go(61)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] copyYamlConfigToRAMCache: he: %!(EXTRA controller.HostEntity={agent_vpp_1    02:00:00:AA:BB:00 6.0.0.100   false 0 RX_MODE_UNKNOWN})  [37mloc[0m="core/sfc_config_yaml.go(69)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] copyYamlConfigToRAMCache: sfc: %!(EXTRA controller.SfcEntity={two-sample-vnf-containers Wire 2 VNF containers to the vpp switch SFC_EW_BD  0 <nil> [container:"node_1" port_label:"node1_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.10" type:NON_VPP_CONTAINER_AFP  container:"node_2" port_label:"node2_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.11" type:NON_VPP_CONTAINER_AFP ]})  [37mloc[0m="core/sfc_config_yaml.go(73)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] copyYamlConfigToRAMCache: num_chain_elements=2  [37mloc[0m="core/sfc_config_yaml.go(74)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] copyYamlConfigToRAMCache: sfc_chain_element[0]=%!(EXTRA *controller.SfcEntity_SfcElement=container:"node_1" port_label:"node1_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.10" type:NON_VPP_CONTAINER_AFP )  [37mloc[0m="core/sfc_config_yaml.go(76)" [37mlogger[0m=defaultLogger
[37mDEBU[0m[0000] copyYamlConfigToRAMCache: sfc_chain_element[1]=%!(EXTRA *controller.SfcEntity_SfcElement=container:"node_2" port_label:"node2_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.11" type:NON_VPP_CONTAINER_AFP )  [37mloc[0m="core/sfc_config_yaml.go(76)" [37mlogger[0m=defaultLogger
[36mINFO[0m[0000] validateSystemParameters: initial SP's        [36mloc[0m="core/validate.go(53)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] validateSystemParameters: sys mtu = 0, defaulting to 1500  [36mloc[0m="core/validate.go(56)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] validateSystemParameters: sys starting vlan_id = 0, defaulting to 5000  [36mloc[0m="core/validate.go(60)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] validateSystemParameters: sys default static route weight = 0, defaulting to 5  [36mloc[0m="core/validate.go(64)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] validateSystemParameters: final SP'smtu:1500 starting_vlan_id:5000 default_static_route_weight:5 dynamic_bridge_parms:<flood:true unknown_unicast_flood:true forward:true learn:true > static_bridge_parms:<forward:true >   [36mloc[0m="core/validate.go(87)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] DatastoreSystemParametersCreate: setting key: '/sfc-controller/v1/SP'  [36mloc[0m="core/database.go(340)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] DatastoreHostEntityCreate: setting key: '/sfc-controller/v1/HE/agent_vpp_1'  [36mloc[0m="core/database.go(183)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] DatastoreSfcEntityCreate: setting key: '/sfc-controller/v1/SFC/two-sample-vnf-containers'  [36mloc[0m="core/database.go(261)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] render system parameters from ram cache       [36mloc[0m="core/renderer.go(31)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] renderSystemParameters: sp: %!(EXTRA controller.SystemParameters={1500 5000 5 0 flood:true unknown_unicast_flood:true forward:true learn:true  forward:true })  [36mloc[0m="core/renderer.go(83)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] SetSystemParameters: setting starting valnId: %!(EXTRA uint32=4999)  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(174)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] SetSystemParameters: SP%!(EXTRA *controller.SystemParameters=mtu:1500 starting_vlan_id:5000 default_static_route_weight:5 dynamic_bridge_parms:<flood:true unknown_unicast_flood:true forward:true learn:true > static_bridge_parms:<forward:true > )  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(176)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] render host entities from ram cache           [36mloc[0m="core/renderer.go(37)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] renderHostEntity: sh:'agent_vpp_1', configOnlyFrom=%!d(bool=true), wireToOtherEntities=%!d(bool=false)  [36mloc[0m="core/renderer.go(118)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] WireInternalsForHostEntity: he:'agent_vpp_1'  [36mloc[0m="core/renderer.go(122)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] WireInternalsForHostEntity: caching host: %!(EXTRA *controller.HostEntity=name:"agent_vpp_1" loopback_mac_addr:"02:00:00:AA:BB:00" loopback_ipv4:"6.0.0.100" )  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(330)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] getMtu: 0                                     [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2081)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] getMtu: replacing with system value: 1500     [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2084)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] getMtu: 0                                     [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2081)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] getMtu: replacing with system value: 1500     [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2084)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] DatastoreHEIDsCreate: setting key: '/sfc-controller/v1/id/HE/agent_vpp_1'%!(EXTRA *l2.HEIDs=name:"agent_vpp_1" )  [36mloc[0m="l2driver/database.go(67)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] render external entities from ram cache       [36mloc[0m="core/renderer.go(45)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] renderHostEntity: sh:'agent_vpp_1', configOnlyFrom=%!d(bool=false), wireToOtherEntities=%!d(bool=true)  [36mloc[0m="core/renderer.go(118)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] render external entities from ram cache       [36mloc[0m="core/renderer.go(60)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] render sfc's from ram cache                   [36mloc[0m="core/renderer.go(68)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] renderServiceFunctionEntity: sfc:'two-sample-vnf-containers'  [36mloc[0m="core/renderer.go(151)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] renderServiceFunctionEntity: WireSfcEntities: for 'two-sample-vnf-containers'/'Wire 2 VNF containers to the vpp switch'  [36mloc[0m="core/renderer.go(159)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] wireSfcEastWestElements: sfc entity element[0]: %!(EXTRA *controller.SfcEntity_SfcElement=container:"node_1" port_label:"node1_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.10" type:NON_VPP_CONTAINER_AFP )  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(1048)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] createAFPacketVEthPairAndAddToBridge: vnf: 'node_1', host: 'agent_vpp_1'  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(1589)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] createAFPacketVEthPair: vnf: 'node_1', host: 'agent_vpp_1'  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(1454)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] DatastoreSFCIDsRetrieve: not found: /sfc-controller/v1/id/SFC/two-sample-vnf-containers/node_1_node1_veth  [36mloc[0m="l2driver/database.go(377)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] getMtu: 0                                     [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2081)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] getMtu: replacing with system value: 1500     [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2084)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] DatastoreSFCIDsCreate: setting key: '/sfc-controller/v1/id/SFC/two-sample-vnf-containers/node_1_node1_veth'  [36mloc[0m="l2driver/database.go(353)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] wireSfcEastWestElements: sfc entity element[1]: %!(EXTRA *controller.SfcEntity_SfcElement=container:"node_2" port_label:"node2_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.11" type:NON_VPP_CONTAINER_AFP )  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(1048)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] createAFPacketVEthPairAndAddToBridge: vnf: 'node_2', host: 'agent_vpp_1'  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(1589)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] createAFPacketVEthPair: vnf: 'node_2', host: 'agent_vpp_1'  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(1454)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] DatastoreSFCIDsRetrieve: not found: /sfc-controller/v1/id/SFC/two-sample-vnf-containers/node_2_node2_veth  [36mloc[0m="l2driver/database.go(377)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] getMtu: 0                                     [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2081)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] getMtu: replacing with system value: 1500     [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2084)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] DatastoreSFCIDsCreate: setting key: '/sfc-controller/v1/id/SFC/two-sample-vnf-containers/node_2_node2_veth'  [36mloc[0m="l2driver/database.go(353)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] {4999 0 2 2}                                  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2065)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] {map[] map[agent_vpp_1:{agent_vpp_1    02:00:00:AA:BB:00 6.0.0.100   false 0 RX_MODE_UNKNOWN}] map[two-sample-vnf-containers:{two-sample-vnf-containers Wire 2 VNF containers to the vpp switch SFC_EW_BD  0 <nil> [container:"node_1" port_label:"node1_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.10" type:NON_VPP_CONTAINER_AFP  container:"node_2" port_label:"node2_veth" etcd_vpp_switch_key:"agent_vpp_1" ipv4_addr:"10.0.0.11" type:NON_VPP_CONTAINER_AFP ]}] {1500 5000 5 0 flood:true unknown_unicast_flood:true forward:true learn:true  forward:true }}  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2066)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] {map[] map[] map[] map[agent_vpp_1:0xc4202267a0] map[node_1/node1_veth:{10.0.0.10/24 02:00:00:00:00:01} node_2/node2_veth:{10.0.0.11/24 02:00:00:00:00:02}]}  [36mloc[0m="l2driver/sfcctlr_l2_driver.go(2067)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: begin ...                       [36mloc[0m="core/reconcile.go(60)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: begin ...                       [36mloc[0m="l2driver/reconcile.go(124)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: reconcileBefore%!(EXTRA l2driver.reconcileCacheType={map[] map[] map[] map[] map[] map[] map[] map[]})  [36mloc[0m="l2driver/reconcile.go(125)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: reconcileAfter%!(EXTRA l2driver.reconcileCacheType={map[/vnf-agent/agent_vpp_1/vpp/config/v1/interface/IF_LOOPBACK_H_agent_vpp_1:{IF_LOOPBACK_H_agent_vpp_1  0 true 02:00:00:AA:BB:00 1500 0  [6.0.0.100] <nil> <nil> <nil> <nil> <nil> <nil>} /vnf-agent/agent_vpp_1/vpp/config/v1/interface/IF_AFPIF_VSWITCH_node_1_node1_veth:{IF_AFPIF_VSWITCH_node_1_node1_veth  4 true  1500 0  [] <nil> <nil> <nil> <nil> 0xc4202274d0 <nil>} /vnf-agent/agent_vpp_1/vpp/config/v1/interface/IF_AFPIF_VSWITCH_node_2_node2_veth:{IF_AFPIF_VSWITCH_node_2_node2_veth  4 true  1500 0  [] <nil> <nil> <nil> <nil> 0xc420227b80 <nil>}] map[/vnf-agent/agent_vpp_1/linux/config/v1/interface/IF_VETH_VNF_node_1_node1_veth:{IF_VETH_VNF_node_1_node1_veth  0 true 02:00:00:00:00:01 1500 node1_veth [10.0.0.10/24] 0xc4201e3e80 0xc4202274b0} /vnf-agent/agent_vpp_1/linux/config/v1/interface/IF_VETH_VSWITCH_node_1_node1_veth:{IF_VETH_VSWITCH_node_1_node1_veth  0 true  1500 node_1_noeth_1 [] 0xc4201e3ec0 0xc4202274c0} /vnf-agent/agent_vpp_1/linux/config/v1/interface/IF_VETH_VNF_node_2_node2_veth:{IF_VETH_VNF_node_2_node2_veth  0 true 02:00:00:00:00:02 1500 node2_veth [10.0.0.11/24] 0xc42023a340 0xc420227b60} /vnf-agent/agent_vpp_1/linux/config/v1/interface/IF_VETH_VSWITCH_node_2_node2_veth:{IF_VETH_VSWITCH_node_2_node2_veth  0 true  1500 node_2_noeth_2 [] 0xc42023a380 0xc420227b70}] map[/vnf-agent/agent_vpp_1/vpp/config/v1/bd/BD_INTERNAL_EW_agent_vpp_1:{BD_INTERNAL_EW_agent_vpp_1 true true true true false 0 [0xc420209f60 0xc42023e3c0] []} /vnf-agent/agent_vpp_1/vpp/config/v1/bd/BD_INTERNAL_EW_L2FIB_agent_vpp_1:{BD_INTERNAL_EW_L2FIB_agent_vpp_1 false false true false false 0 [] []}] map[] map[/sfc-controller/v1/id/HE/agent_vpp_1:{agent_vpp_1 0}] map[] map[] map[/sfc-controller/v1/id/SFC/two-sample-vnf-containers/node_1_node1_veth:{two-sample-vnf-containers node_1 node1_veth 0 1 0 1} /sfc-controller/v1/id/SFC/two-sample-vnf-containers/node_2_node2_veth:{two-sample-vnf-containers node_2 node2_veth 0 2 0 2}]})  [36mloc[0m="l2driver/reconcile.go(126)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add i/f key to etcd: /vnf-agent/agent_vpp_1/vpp/config/v1/interface/IF_LOOPBACK_H_agent_vpp_1{IF_LOOPBACK_H_agent_vpp_1  SOFTWARE_LOOPBACK true 02:00:00:AA:BB:00 1500 0  [6.0.0.100] <nil> <nil> <nil> <nil> <nil> <nil>}  [36mloc[0m="l2driver/reconcile.go(154)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add i/f key to etcd: /vnf-agent/agent_vpp_1/vpp/config/v1/interface/IF_AFPIF_VSWITCH_node_1_node1_veth{IF_AFPIF_VSWITCH_node_1_node1_veth  AF_PACKET_INTERFACE true  1500 0  [] <nil> <nil> <nil> <nil> host_if_name:"node_1_noeth_1"  <nil>}  [36mloc[0m="l2driver/reconcile.go(154)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add i/f key to etcd: /vnf-agent/agent_vpp_1/vpp/config/v1/interface/IF_AFPIF_VSWITCH_node_2_node2_veth{IF_AFPIF_VSWITCH_node_2_node2_veth  AF_PACKET_INTERFACE true  1500 0  [] <nil> <nil> <nil> <nil> host_if_name:"node_2_noeth_2"  <nil>}  [36mloc[0m="l2driver/reconcile.go(154)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add linux i/f key to etcd: /vnf-agent/agent_vpp_1/linux/config/v1/interface/IF_VETH_VNF_node_1_node1_veth{IF_VETH_VNF_node_1_node1_veth  VETH true 02:00:00:00:00:01 1500 node1_veth [10.0.0.10/24] type:MICROSERVICE_REF_NS microservice:"node_1"  peer_if_name:"IF_VETH_VSWITCH_node_1_node1_veth" }  [36mloc[0m="l2driver/reconcile.go(179)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add linux i/f key to etcd: /vnf-agent/agent_vpp_1/linux/config/v1/interface/IF_VETH_VSWITCH_node_1_node1_veth{IF_VETH_VSWITCH_node_1_node1_veth  VETH true  1500 node_1_noeth_1 [] type:MICROSERVICE_REF_NS microservice:"agent_vpp_1"  peer_if_name:"IF_VETH_VNF_node_1_node1_veth" }  [36mloc[0m="l2driver/reconcile.go(179)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add linux i/f key to etcd: /vnf-agent/agent_vpp_1/linux/config/v1/interface/IF_VETH_VNF_node_2_node2_veth{IF_VETH_VNF_node_2_node2_veth  VETH true 02:00:00:00:00:02 1500 node2_veth [10.0.0.11/24] type:MICROSERVICE_REF_NS microservice:"node_2"  peer_if_name:"IF_VETH_VSWITCH_node_2_node2_veth" }  [36mloc[0m="l2driver/reconcile.go(179)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add linux i/f key to etcd: /vnf-agent/agent_vpp_1/linux/config/v1/interface/IF_VETH_VSWITCH_node_2_node2_veth{IF_VETH_VSWITCH_node_2_node2_veth  VETH true  1500 node_2_noeth_2 [] type:MICROSERVICE_REF_NS microservice:"agent_vpp_1"  peer_if_name:"IF_VETH_VNF_node_2_node2_veth" }  [36mloc[0m="l2driver/reconcile.go(179)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add BD key to etcd: /vnf-agent/agent_vpp_1/vpp/config/v1/bd/BD_INTERNAL_EW_agent_vpp_1{BD_INTERNAL_EW_agent_vpp_1 true true true true false 0 [name:"IF_AFPIF_VSWITCH_node_1_node1_veth"  name:"IF_AFPIF_VSWITCH_node_2_node2_veth" ] []}  [36mloc[0m="l2driver/reconcile.go(206)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add BD key to etcd: /vnf-agent/agent_vpp_1/vpp/config/v1/bd/BD_INTERNAL_EW_L2FIB_agent_vpp_1{BD_INTERNAL_EW_L2FIB_agent_vpp_1 false false true false false 0 [] []}  [36mloc[0m="l2driver/reconcile.go(206)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add HE ID key to etcd: /sfc-controller/v1/id/HE/agent_vpp_1{agent_vpp_1 0}  [36mloc[0m="l2driver/reconcile.go(268)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add SFC ID key to etcd: /sfc-controller/v1/id/SFC/two-sample-vnf-containers/node_1_node1_veth{two-sample-vnf-containers node_1 node1_veth 0 1 0 1}  [36mloc[0m="l2driver/reconcile.go(343)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: add SFC ID key to etcd: /sfc-controller/v1/id/SFC/two-sample-vnf-containers/node_2_node2_veth{two-sample-vnf-containers node_2 node2_veth 0 2 0 2}  [36mloc[0m="l2driver/reconcile.go(343)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: exit ...                        [36mloc[0m="l2driver/reconcile.go(351)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] ReconcileEnd: exit ...                        [36mloc[0m="core/reconcile.go(65)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] Agent plugin state update.                    [36mlastErr[0m="<nil>" [36mloc[0m="statuscheck/plugin_impl_statuscheck.go(189)" [36mlogger[0m=status-check [36mplugin[0m=SfcController [36mstate[0m=ok
[36mINFO[0m[0000] plugin Sfc: Init took 139.214887ms            [36mdurationInNs[0m=139214887 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] Initializing p 'vnf-driver'                   [36mloc[0m="vnfdriver/vnfdriver.go(50)" [36mlogger[0m=defaultLogger
[36mINFO[0m[0000] plugin VNFDriver: Init took 39.818Âµs          [36mdurationInNs[0m=39818 [36mloc[0m="core/agent_core.go(295)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin Logs: AfterInit took 256ns             [36mdurationInNs[0m=256 [36mloc[0m="core/agent_core.go(345)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin ServiceLabel: not implement AfterInit  [36mloc[0m="core/agent_core.go(348)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin StatusCheck: AfterInit took 1.583Âµs    [36mdurationInNs[0m=1583 [36mloc[0m="core/agent_core.go(345)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] Listening on http://0.0.0.0:9191              [36mloc[0m="rest/plugin_impl_rest.go(100)" [36mlogger[0m=http
[36mINFO[0m[0000] plugin HTTP: AfterInit took 100.800787ms      [36mdurationInNs[0m=100800787 [36mloc[0m="core/agent_core.go(345)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] Starting health http-probe on port 9191       [36mloc[0m="probe/plugin_impl_probes.go(44)" [36mlogger[0m=health-rpc
[36mINFO[0m[0000] plugin HealthRPC: AfterInit took 1.87161ms    [36mdurationInNs[0m=1871610 [36mloc[0m="core/agent_core.go(345)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin LogMngRPC: AfterInit took 63.481Âµs     [36mdurationInNs[0m=63481 [36mloc[0m="core/agent_core.go(345)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin ETCD: AfterInit took 384ns             [36mdurationInNs[0m=384 [36mloc[0m="core/agent_core.go(345)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin Sfc: not implement AfterInit           [36mloc[0m="core/agent_core.go(348)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] plugin VNFDriver: not implement AfterInit     [36mloc[0m="core/agent_core.go(348)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] All plugins initialized successfully, took 250.570442ms  [36mdurationInNs[0m=250570442 [36mloc[0m="core/agent_core.go(365)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] Agent Init took 146.598961ms                  [36mdurationInNs[0m=146598961 [36mloc[0m="core/agent_core.go(366)" [36mlogger[0m=agentcore
[36mINFO[0m[0000] Agent AfterInit took 103.971481ms             [36mdurationInNs[0m=103971481 [36mloc[0m="core/agent_core.go(367)" [36mlogger[0m=agentcore
[36mINFO[0m[0005] Agent plugin state update.                    [36mlastErr[0m="<nil>" [36mloc[0m="statuscheck/plugin_impl_statuscheck.go(189)" [36mlogger[0m=status-check [36mplugin[0m=etcdv3 [36mstate[0m=ok

msestak@msestak-VirtualBox:~$ 