// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ligato/configurator/statspoller.proto

package configurator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	vpp "go.ligato.io/vpp-agent/v3/proto/ligato/vpp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Stats struct {
	// Types that are valid to be assigned to Stats:
	//	*Stats_VppStats
	Stats                isStats_Stats `protobuf_oneof:"stats"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_a59f0470c39b77d1, []int{0}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

type isStats_Stats interface {
	isStats_Stats()
}

type Stats_VppStats struct {
	VppStats *vpp.Stats `protobuf:"bytes,1,opt,name=vpp_stats,json=vppStats,proto3,oneof"`
}

func (*Stats_VppStats) isStats_Stats() {}

func (m *Stats) GetStats() isStats_Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *Stats) GetVppStats() *vpp.Stats {
	if x, ok := m.GetStats().(*Stats_VppStats); ok {
		return x.VppStats
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Stats) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Stats_VppStats)(nil),
	}
}

type PollStatsRequest struct {
	// PeriodSec defines polling period (in seconds)
	PeriodSec            uint32   `protobuf:"varint,1,opt,name=period_sec,json=periodSec,proto3" json:"period_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollStatsRequest) Reset()         { *m = PollStatsRequest{} }
func (m *PollStatsRequest) String() string { return proto.CompactTextString(m) }
func (*PollStatsRequest) ProtoMessage()    {}
func (*PollStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a59f0470c39b77d1, []int{1}
}

func (m *PollStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollStatsRequest.Unmarshal(m, b)
}
func (m *PollStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollStatsRequest.Marshal(b, m, deterministic)
}
func (m *PollStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollStatsRequest.Merge(m, src)
}
func (m *PollStatsRequest) XXX_Size() int {
	return xxx_messageInfo_PollStatsRequest.Size(m)
}
func (m *PollStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PollStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PollStatsRequest proto.InternalMessageInfo

func (m *PollStatsRequest) GetPeriodSec() uint32 {
	if m != nil {
		return m.PeriodSec
	}
	return 0
}

type PollStatsResponse struct {
	PollSeq              uint32   `protobuf:"varint,1,opt,name=poll_seq,json=pollSeq,proto3" json:"poll_seq,omitempty"`
	Stats                *Stats   `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollStatsResponse) Reset()         { *m = PollStatsResponse{} }
func (m *PollStatsResponse) String() string { return proto.CompactTextString(m) }
func (*PollStatsResponse) ProtoMessage()    {}
func (*PollStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a59f0470c39b77d1, []int{2}
}

func (m *PollStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollStatsResponse.Unmarshal(m, b)
}
func (m *PollStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollStatsResponse.Marshal(b, m, deterministic)
}
func (m *PollStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollStatsResponse.Merge(m, src)
}
func (m *PollStatsResponse) XXX_Size() int {
	return xxx_messageInfo_PollStatsResponse.Size(m)
}
func (m *PollStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PollStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PollStatsResponse proto.InternalMessageInfo

func (m *PollStatsResponse) GetPollSeq() uint32 {
	if m != nil {
		return m.PollSeq
	}
	return 0
}

func (m *PollStatsResponse) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func init() {
	proto.RegisterType((*Stats)(nil), "ligato.configurator.Stats")
	proto.RegisterType((*PollStatsRequest)(nil), "ligato.configurator.PollStatsRequest")
	proto.RegisterType((*PollStatsResponse)(nil), "ligato.configurator.PollStatsResponse")
}

func init() {
	proto.RegisterFile("ligato/configurator/statspoller.proto", fileDescriptor_a59f0470c39b77d1)
}

var fileDescriptor_a59f0470c39b77d1 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x5b, 0xa1, 0xb6, 0x19, 0x11, 0xec, 0xea, 0xa1, 0x06, 0x04, 0x09, 0x54, 0xbc, 0x98,
	0xc4, 0xf6, 0xe8, 0x45, 0x72, 0xf2, 0x58, 0x92, 0x9b, 0x07, 0x63, 0x8c, 0x63, 0x08, 0x84, 0xec,
	0x64, 0x77, 0x9b, 0xdf, 0x2f, 0x3b, 0x1b, 0x25, 0x48, 0xc0, 0x43, 0x20, 0x33, 0x7c, 0xef, 0xcd,
	0xcc, 0x5b, 0xd8, 0x36, 0x75, 0x55, 0x18, 0x19, 0x95, 0xb2, 0xfd, 0xaa, 0xab, 0xa3, 0x2a, 0x8c,
	0x54, 0x91, 0x36, 0x85, 0xd1, 0x24, 0x9b, 0x06, 0x55, 0x48, 0x4a, 0x1a, 0x29, 0x2e, 0x1d, 0x16,
	0x8e, 0x31, 0xff, 0x6a, 0xd0, 0xf6, 0x44, 0xf6, 0x73, 0x68, 0x90, 0xc0, 0x22, 0xb3, 0x7a, 0x11,
	0x83, 0xd7, 0x13, 0xe5, 0x6c, 0xb6, 0x99, 0xdf, 0xce, 0xef, 0xcf, 0x76, 0xeb, 0x70, 0xf0, 0xb1,
	0x38, 0x53, 0x2f, 0xb3, 0x74, 0xd5, 0x13, 0xf1, 0x7f, 0xb2, 0x84, 0x05, 0xd3, 0xc1, 0x23, 0x5c,
	0x1c, 0x64, 0xd3, 0x70, 0x37, 0xc5, 0xee, 0x88, 0xda, 0x88, 0x1b, 0x00, 0x42, 0x55, 0xcb, 0xcf,
	0x5c, 0x63, 0xc9, 0x7e, 0xe7, 0xa9, 0xe7, 0x3a, 0x19, 0x96, 0xc1, 0x3b, 0xac, 0x47, 0x12, 0x4d,
	0xb2, 0xd5, 0x28, 0xae, 0x61, 0x65, 0xcf, 0xc8, 0x35, 0x76, 0x83, 0x62, 0x69, 0xeb, 0x0c, 0x3b,
	0x11, 0x0f, 0xb3, 0x36, 0x27, 0xbc, 0x99, 0x1f, 0x4e, 0x5c, 0xe8, 0x56, 0x4c, 0x1d, 0xb8, 0x33,
	0x20, 0xb8, 0x3e, 0x70, 0x30, 0x19, 0xaa, 0xbe, 0x2e, 0x51, 0xbc, 0x81, 0xf7, 0x3b, 0x57, 0x6c,
	0x27, 0x5d, 0xfe, 0x9e, 0xe2, 0xdf, 0xfd, 0x87, 0xb9, 0xf5, 0x83, 0x59, 0x3c, 0x4f, 0x92, 0xd7,
	0xe7, 0x4a, 0xfe, 0xf0, 0x35, 0x87, 0xfd, 0x50, 0x54, 0xd8, 0x9a, 0xa8, 0xdf, 0x47, 0x9c, 0x78,
	0x34, 0xf1, 0x84, 0x4f, 0xe3, 0xe2, 0xe3, 0x94, 0xb9, 0xfd, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x5d, 0xce, 0x4c, 0x70, 0xed, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StatsPollerServiceClient is the client API for StatsPollerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsPollerServiceClient interface {
	// PollStats is used for polling metrics using poll period.
	PollStats(ctx context.Context, in *PollStatsRequest, opts ...grpc.CallOption) (StatsPollerService_PollStatsClient, error)
}

type statsPollerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStatsPollerServiceClient(cc grpc.ClientConnInterface) StatsPollerServiceClient {
	return &statsPollerServiceClient{cc}
}

func (c *statsPollerServiceClient) PollStats(ctx context.Context, in *PollStatsRequest, opts ...grpc.CallOption) (StatsPollerService_PollStatsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StatsPollerService_serviceDesc.Streams[0], "/ligato.configurator.StatsPollerService/PollStats", opts...)
	if err != nil {
		return nil, err
	}
	x := &statsPollerServicePollStatsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StatsPollerService_PollStatsClient interface {
	Recv() (*PollStatsResponse, error)
	grpc.ClientStream
}

type statsPollerServicePollStatsClient struct {
	grpc.ClientStream
}

func (x *statsPollerServicePollStatsClient) Recv() (*PollStatsResponse, error) {
	m := new(PollStatsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StatsPollerServiceServer is the server API for StatsPollerService service.
type StatsPollerServiceServer interface {
	// PollStats is used for polling metrics using poll period.
	PollStats(*PollStatsRequest, StatsPollerService_PollStatsServer) error
}

// UnimplementedStatsPollerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStatsPollerServiceServer struct {
}

func (*UnimplementedStatsPollerServiceServer) PollStats(req *PollStatsRequest, srv StatsPollerService_PollStatsServer) error {
	return status.Errorf(codes.Unimplemented, "method PollStats not implemented")
}

func RegisterStatsPollerServiceServer(s *grpc.Server, srv StatsPollerServiceServer) {
	s.RegisterService(&_StatsPollerService_serviceDesc, srv)
}

func _StatsPollerService_PollStats_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PollStatsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StatsPollerServiceServer).PollStats(m, &statsPollerServicePollStatsServer{stream})
}

type StatsPollerService_PollStatsServer interface {
	Send(*PollStatsResponse) error
	grpc.ServerStream
}

type statsPollerServicePollStatsServer struct {
	grpc.ServerStream
}

func (x *statsPollerServicePollStatsServer) Send(m *PollStatsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _StatsPollerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ligato.configurator.StatsPollerService",
	HandlerType: (*StatsPollerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PollStats",
			Handler:       _StatsPollerService_PollStats_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ligato/configurator/statspoller.proto",
}
