// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: ligato/kvscheduler/value_status.proto

package kvscheduler

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ValueState int32

const (
	// ValueState_NONEXISTENT is assigned to value that was deleted or has never
	// existed.
	ValueState_NONEXISTENT ValueState = 0
	// ValueState_MISSING is assigned to NB value that was configured but refresh
	// found it to be missing.
	ValueState_MISSING ValueState = 1
	// ValueState_UNIMPLEMENTED marks value received from NB that cannot
	// be configured because there is no registered descriptor associated
	// with it.
	ValueState_UNIMPLEMENTED ValueState = 2
	// ValueState_REMOVED is assigned to NB value after it was removed or when
	// it is being re-created. The state is only temporary: for re-create, the
	// value transits to whatever state the following Create operation produces,
	// and delete values are removed from the graph (go to the NONEXISTENT state)
	// immediately after the notification about the state change is sent.
	ValueState_REMOVED ValueState = 3
	// ValueState_CONFIGURED marks value defined by NB and successfully configured.
	ValueState_CONFIGURED ValueState = 4
	// ValueState_OBTAINED marks value not managed by NB, instead created
	// automatically or externally in SB. The KVScheduler learns about the value
	// either using Retrieve() or through a SB notification.
	ValueState_OBTAINED ValueState = 5
	// ValueState_DISCOVERED marks NB value that was found (=retrieved) by refresh
	// but not actually configured by the agent in this run.
	ValueState_DISCOVERED ValueState = 6
	// ValueState_PENDING represents (NB) value that cannot be configured yet
	// due to missing dependencies.
	ValueState_PENDING ValueState = 7
	// ValueState_INVALID represents (NB) value that will not be configured
	// because it has a logically invalid content as declared by the Validate
	// method of the associated descriptor.
	// The corresponding error and the list of affected fields are stored
	// in the <InvalidValueDetails> structure available via <details> for invalid
	// value.
	ValueState_INVALID ValueState = 8
	// ValueState_FAILED marks (NB) value for which the last executed operation
	// returned an error.
	// The error and the type of the operation which caused the error are stored
	// in the <FailedValueDetails> structure available via <details> for failed
	// value.
	ValueState_FAILED ValueState = 9
	// ValueState_RETRYING marks unsucessfully applied (NB) value, for which,
	// however, one or more attempts to fix the error by repeating the last
	// operation are planned, and only if all the retries fail, the value will
	// then transit to the FAILED state.
	ValueState_RETRYING ValueState = 10
)

// Enum value maps for ValueState.
var (
	ValueState_name = map[int32]string{
		0:  "NONEXISTENT",
		1:  "MISSING",
		2:  "UNIMPLEMENTED",
		3:  "REMOVED",
		4:  "CONFIGURED",
		5:  "OBTAINED",
		6:  "DISCOVERED",
		7:  "PENDING",
		8:  "INVALID",
		9:  "FAILED",
		10: "RETRYING",
	}
	ValueState_value = map[string]int32{
		"NONEXISTENT":   0,
		"MISSING":       1,
		"UNIMPLEMENTED": 2,
		"REMOVED":       3,
		"CONFIGURED":    4,
		"OBTAINED":      5,
		"DISCOVERED":    6,
		"PENDING":       7,
		"INVALID":       8,
		"FAILED":        9,
		"RETRYING":      10,
	}
)

func (x ValueState) Enum() *ValueState {
	p := new(ValueState)
	*p = x
	return p
}

func (x ValueState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueState) Descriptor() protoreflect.EnumDescriptor {
	return file_ligato_kvscheduler_value_status_proto_enumTypes[0].Descriptor()
}

func (ValueState) Type() protoreflect.EnumType {
	return &file_ligato_kvscheduler_value_status_proto_enumTypes[0]
}

func (x ValueState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueState.Descriptor instead.
func (ValueState) EnumDescriptor() ([]byte, []int) {
	return file_ligato_kvscheduler_value_status_proto_rawDescGZIP(), []int{0}
}

type TxnOperation int32

const (
	TxnOperation_UNDEFINED TxnOperation = 0
	TxnOperation_VALIDATE  TxnOperation = 1
	TxnOperation_CREATE    TxnOperation = 2
	TxnOperation_UPDATE    TxnOperation = 3
	TxnOperation_DELETE    TxnOperation = 4
)

// Enum value maps for TxnOperation.
var (
	TxnOperation_name = map[int32]string{
		0: "UNDEFINED",
		1: "VALIDATE",
		2: "CREATE",
		3: "UPDATE",
		4: "DELETE",
	}
	TxnOperation_value = map[string]int32{
		"UNDEFINED": 0,
		"VALIDATE":  1,
		"CREATE":    2,
		"UPDATE":    3,
		"DELETE":    4,
	}
)

func (x TxnOperation) Enum() *TxnOperation {
	p := new(TxnOperation)
	*p = x
	return p
}

func (x TxnOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxnOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_ligato_kvscheduler_value_status_proto_enumTypes[1].Descriptor()
}

func (TxnOperation) Type() protoreflect.EnumType {
	return &file_ligato_kvscheduler_value_status_proto_enumTypes[1]
}

func (x TxnOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxnOperation.Descriptor instead.
func (TxnOperation) EnumDescriptor() ([]byte, []int) {
	return file_ligato_kvscheduler_value_status_proto_rawDescGZIP(), []int{1}
}

type ValueStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	State         ValueState   `protobuf:"varint,2,opt,name=state,proto3,enum=ligato.kvscheduler.ValueState" json:"state,omitempty"`
	Error         string       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"` // error returned by the last operation (none if empty string)
	LastOperation TxnOperation `protobuf:"varint,4,opt,name=last_operation,json=lastOperation,proto3,enum=ligato.kvscheduler.TxnOperation" json:"last_operation,omitempty"`
	// - for invalid value, details is a list of invalid fields
	// - for pending value, details is a list of missing dependencies (labels)
	Details []string `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ValueStatus) Reset() {
	*x = ValueStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_kvscheduler_value_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueStatus) ProtoMessage() {}

func (x *ValueStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_kvscheduler_value_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueStatus.ProtoReflect.Descriptor instead.
func (*ValueStatus) Descriptor() ([]byte, []int) {
	return file_ligato_kvscheduler_value_status_proto_rawDescGZIP(), []int{0}
}

func (x *ValueStatus) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ValueStatus) GetState() ValueState {
	if x != nil {
		return x.State
	}
	return ValueState_NONEXISTENT
}

func (x *ValueStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ValueStatus) GetLastOperation() TxnOperation {
	if x != nil {
		return x.LastOperation
	}
	return TxnOperation_UNDEFINED
}

func (x *ValueStatus) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

type BaseValueStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value         *ValueStatus   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	DerivedValues []*ValueStatus `protobuf:"bytes,2,rep,name=derived_values,json=derivedValues,proto3" json:"derived_values,omitempty"`
}

func (x *BaseValueStatus) Reset() {
	*x = BaseValueStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_kvscheduler_value_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseValueStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseValueStatus) ProtoMessage() {}

func (x *BaseValueStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_kvscheduler_value_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseValueStatus.ProtoReflect.Descriptor instead.
func (*BaseValueStatus) Descriptor() ([]byte, []int) {
	return file_ligato_kvscheduler_value_status_proto_rawDescGZIP(), []int{1}
}

func (x *BaseValueStatus) GetValue() *ValueStatus {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BaseValueStatus) GetDerivedValues() []*ValueStatus {
	if x != nil {
		return x.DerivedValues
	}
	return nil
}

var File_ligato_kvscheduler_value_status_proto protoreflect.FileDescriptor

var file_ligato_kvscheduler_value_status_proto_rawDesc = []byte{
	0x0a, 0x25, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e,
	0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x22, 0xce, 0x01, 0x0a, 0x0b,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c,
	0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x6b, 0x76, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x90, 0x01, 0x0a,
	0x0f, 0x42, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x64, 0x65, 0x72, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0d, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2a,
	0xac, 0x01, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x4e, 0x4f, 0x4e, 0x45, 0x58, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x4f, 0x42, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49,
	0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x09,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x54, 0x52, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x2a, 0x4f,
	0x0a, 0x0c, 0x54, 0x78, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d,
	0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x42,
	0x34, 0x5a, 0x32, 0x67, 0x6f, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x69, 0x6f, 0x2f,
	0x76, 0x70, 0x70, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x33, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x6b, 0x76, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ligato_kvscheduler_value_status_proto_rawDescOnce sync.Once
	file_ligato_kvscheduler_value_status_proto_rawDescData = file_ligato_kvscheduler_value_status_proto_rawDesc
)

func file_ligato_kvscheduler_value_status_proto_rawDescGZIP() []byte {
	file_ligato_kvscheduler_value_status_proto_rawDescOnce.Do(func() {
		file_ligato_kvscheduler_value_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_ligato_kvscheduler_value_status_proto_rawDescData)
	})
	return file_ligato_kvscheduler_value_status_proto_rawDescData
}

var file_ligato_kvscheduler_value_status_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ligato_kvscheduler_value_status_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ligato_kvscheduler_value_status_proto_goTypes = []interface{}{
	(ValueState)(0),         // 0: ligato.kvscheduler.ValueState
	(TxnOperation)(0),       // 1: ligato.kvscheduler.TxnOperation
	(*ValueStatus)(nil),     // 2: ligato.kvscheduler.ValueStatus
	(*BaseValueStatus)(nil), // 3: ligato.kvscheduler.BaseValueStatus
}
var file_ligato_kvscheduler_value_status_proto_depIdxs = []int32{
	0, // 0: ligato.kvscheduler.ValueStatus.state:type_name -> ligato.kvscheduler.ValueState
	1, // 1: ligato.kvscheduler.ValueStatus.last_operation:type_name -> ligato.kvscheduler.TxnOperation
	2, // 2: ligato.kvscheduler.BaseValueStatus.value:type_name -> ligato.kvscheduler.ValueStatus
	2, // 3: ligato.kvscheduler.BaseValueStatus.derived_values:type_name -> ligato.kvscheduler.ValueStatus
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ligato_kvscheduler_value_status_proto_init() }
func file_ligato_kvscheduler_value_status_proto_init() {
	if File_ligato_kvscheduler_value_status_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ligato_kvscheduler_value_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_kvscheduler_value_status_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseValueStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ligato_kvscheduler_value_status_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ligato_kvscheduler_value_status_proto_goTypes,
		DependencyIndexes: file_ligato_kvscheduler_value_status_proto_depIdxs,
		EnumInfos:         file_ligato_kvscheduler_value_status_proto_enumTypes,
		MessageInfos:      file_ligato_kvscheduler_value_status_proto_msgTypes,
	}.Build()
	File_ligato_kvscheduler_value_status_proto = out.File
	file_ligato_kvscheduler_value_status_proto_rawDesc = nil
	file_ligato_kvscheduler_value_status_proto_goTypes = nil
	file_ligato_kvscheduler_value_status_proto_depIdxs = nil
}
