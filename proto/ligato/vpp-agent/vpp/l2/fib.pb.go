// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ligato/vpp-agent/vpp/l2/fib.proto

package vpp_l2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FIBEntry_Action int32

const (
	FIBEntry_FORWARD FIBEntry_Action = 0
	FIBEntry_DROP    FIBEntry_Action = 1
)

var FIBEntry_Action_name = map[int32]string{
	0: "FORWARD",
	1: "DROP",
}

var FIBEntry_Action_value = map[string]int32{
	"FORWARD": 0,
	"DROP":    1,
}

func (x FIBEntry_Action) String() string {
	return proto.EnumName(FIBEntry_Action_name, int32(x))
}

func (FIBEntry_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56fe4ded512f487b, []int{0, 0}
}

type FIBEntry struct {
	PhysAddress             string          `protobuf:"bytes,1,opt,name=phys_address,json=physAddress,proto3" json:"phys_address,omitempty"`
	BridgeDomain            string          `protobuf:"bytes,2,opt,name=bridge_domain,json=bridgeDomain,proto3" json:"bridge_domain,omitempty"`
	Action                  FIBEntry_Action `protobuf:"varint,3,opt,name=action,proto3,enum=ligato.vpp_agent.vpp.l2.FIBEntry_Action" json:"action,omitempty"`
	OutgoingInterface       string          `protobuf:"bytes,4,opt,name=outgoing_interface,json=outgoingInterface,proto3" json:"outgoing_interface,omitempty"`
	StaticConfig            bool            `protobuf:"varint,5,opt,name=static_config,json=staticConfig,proto3" json:"static_config,omitempty"`
	BridgedVirtualInterface bool            `protobuf:"varint,6,opt,name=bridged_virtual_interface,json=bridgedVirtualInterface,proto3" json:"bridged_virtual_interface,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}        `json:"-"`
	XXX_unrecognized        []byte          `json:"-"`
	XXX_sizecache           int32           `json:"-"`
}

func (m *FIBEntry) Reset()         { *m = FIBEntry{} }
func (m *FIBEntry) String() string { return proto.CompactTextString(m) }
func (*FIBEntry) ProtoMessage()    {}
func (*FIBEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_56fe4ded512f487b, []int{0}
}

func (m *FIBEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FIBEntry.Unmarshal(m, b)
}
func (m *FIBEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FIBEntry.Marshal(b, m, deterministic)
}
func (m *FIBEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FIBEntry.Merge(m, src)
}
func (m *FIBEntry) XXX_Size() int {
	return xxx_messageInfo_FIBEntry.Size(m)
}
func (m *FIBEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_FIBEntry.DiscardUnknown(m)
}

var xxx_messageInfo_FIBEntry proto.InternalMessageInfo

func (m *FIBEntry) GetPhysAddress() string {
	if m != nil {
		return m.PhysAddress
	}
	return ""
}

func (m *FIBEntry) GetBridgeDomain() string {
	if m != nil {
		return m.BridgeDomain
	}
	return ""
}

func (m *FIBEntry) GetAction() FIBEntry_Action {
	if m != nil {
		return m.Action
	}
	return FIBEntry_FORWARD
}

func (m *FIBEntry) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *FIBEntry) GetStaticConfig() bool {
	if m != nil {
		return m.StaticConfig
	}
	return false
}

func (m *FIBEntry) GetBridgedVirtualInterface() bool {
	if m != nil {
		return m.BridgedVirtualInterface
	}
	return false
}

func init() {
	proto.RegisterEnum("ligato.vpp_agent.vpp.l2.FIBEntry_Action", FIBEntry_Action_name, FIBEntry_Action_value)
	proto.RegisterType((*FIBEntry)(nil), "ligato.vpp_agent.vpp.l2.FIBEntry")
}

func init() { proto.RegisterFile("ligato/vpp-agent/vpp/l2/fib.proto", fileDescriptor_56fe4ded512f487b) }

var fileDescriptor_56fe4ded512f487b = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0x1d, 0xe2, 0xc4, 0x82, 0x06, 0x7b, 0x61, 0x9e, 0x04, 0xbc, 0xec, 0x42, 0x97, 0xcc,
	0x9b, 0x26, 0x06, 0x10, 0x49, 0x38, 0x61, 0x7a, 0xd0, 0xc4, 0x4b, 0xd3, 0xfd, 0xaa, 0x4d, 0x66,
	0xdb, 0x74, 0x65, 0x09, 0x7f, 0xa0, 0xff, 0x97, 0x59, 0xcb, 0x8c, 0x1e, 0xb8, 0xbd, 0x7c, 0xde,
	0xe7, 0xed, 0xfb, 0xd6, 0x07, 0x26, 0x25, 0x67, 0xd4, 0xc8, 0xa8, 0x56, 0x6a, 0x46, 0x59, 0x2e,
	0x4c, 0x53, 0x45, 0x65, 0x1c, 0x15, 0x3c, 0x41, 0x4a, 0x4b, 0x23, 0xe1, 0xc8, 0x29, 0xa8, 0x56,
	0x8a, 0x58, 0xa5, 0xa9, 0x50, 0x19, 0x4f, 0xbf, 0x3b, 0xa0, 0xb7, 0xde, 0x2c, 0x5f, 0x84, 0xd1,
	0x7b, 0x38, 0x01, 0x03, 0xf5, 0xb9, 0xaf, 0x08, 0xcd, 0x32, 0x9d, 0x57, 0x55, 0xe0, 0x8d, 0xbd,
	0xf0, 0x02, 0xf7, 0x1b, 0xb6, 0x70, 0x08, 0xde, 0x81, 0xcb, 0x44, 0xf3, 0x8c, 0xe5, 0x24, 0x93,
	0x5f, 0x94, 0x8b, 0xa0, 0x63, 0x9d, 0x81, 0x83, 0x2b, 0xcb, 0xe0, 0x1c, 0xf8, 0x34, 0x35, 0x5c,
	0x8a, 0xe0, 0x74, 0xec, 0x85, 0x57, 0x71, 0x88, 0x8e, 0xc4, 0xa3, 0x36, 0x1a, 0x2d, 0xac, 0x8f,
	0x0f, 0x73, 0x70, 0x06, 0xa0, 0xdc, 0x19, 0x26, 0xb9, 0x60, 0x84, 0x0b, 0x93, 0xeb, 0x82, 0xa6,
	0x79, 0xd0, 0xb5, 0x59, 0xd7, 0x6d, 0x67, 0xd3, 0x36, 0x9a, 0xad, 0x2a, 0x43, 0x0d, 0x4f, 0x49,
	0x2a, 0x45, 0xc1, 0x59, 0x70, 0x36, 0xf6, 0xc2, 0x1e, 0x1e, 0x38, 0xf8, 0x6c, 0x19, 0x7c, 0x00,
	0x37, 0x6e, 0xcb, 0x8c, 0xd4, 0x5c, 0x9b, 0x1d, 0x2d, 0xff, 0x7c, 0xda, 0xb7, 0x03, 0xa3, 0x83,
	0xf0, 0xe6, 0xfa, 0xbf, 0x01, 0xd3, 0x5b, 0xe0, 0xbb, 0x0d, 0x61, 0x1f, 0x9c, 0xaf, 0xb7, 0xf8,
	0x7d, 0x81, 0x57, 0xc3, 0x13, 0xd8, 0x03, 0xdd, 0x15, 0xde, 0xbe, 0x0e, 0xbd, 0xe5, 0xfc, 0xe3,
	0x89, 0xc9, 0xf6, 0x37, 0xf9, 0xbf, 0x5b, 0xc4, 0x91, 0xbd, 0x41, 0x74, 0xe4, 0x4a, 0x8f, 0xcd,
	0xa3, 0x94, 0x71, 0xe2, 0x5b, 0xeb, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x1c, 0x45, 0xed,
	0xce, 0x01, 0x00, 0x00,
}
