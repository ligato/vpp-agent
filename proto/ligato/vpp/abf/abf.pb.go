// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: ligato/vpp/abf/abf.proto

package vpp_abf

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ABF defines ACL based forwarding.
type ABF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index              uint32                   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                   // ABF index (unique identifier)
	AclName            string                   `protobuf:"bytes,2,opt,name=acl_name,json=aclName,proto3" json:"acl_name,omitempty"` // Name of the associated access list
	AttachedInterfaces []*ABF_AttachedInterface `protobuf:"bytes,3,rep,name=attached_interfaces,json=attachedInterfaces,proto3" json:"attached_interfaces,omitempty"`
	ForwardingPaths    []*ABF_ForwardingPath    `protobuf:"bytes,4,rep,name=forwarding_paths,json=forwardingPaths,proto3" json:"forwarding_paths,omitempty"`
}

func (x *ABF) Reset() {
	*x = ABF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_abf_abf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABF) ProtoMessage() {}

func (x *ABF) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_abf_abf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABF.ProtoReflect.Descriptor instead.
func (*ABF) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_abf_abf_proto_rawDescGZIP(), []int{0}
}

func (x *ABF) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ABF) GetAclName() string {
	if x != nil {
		return x.AclName
	}
	return ""
}

func (x *ABF) GetAttachedInterfaces() []*ABF_AttachedInterface {
	if x != nil {
		return x.AttachedInterfaces
	}
	return nil
}

func (x *ABF) GetForwardingPaths() []*ABF_ForwardingPath {
	if x != nil {
		return x.ForwardingPaths
	}
	return nil
}

// List of interfaces attached to the ABF
type ABF_AttachedInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputInterface string `protobuf:"bytes,1,opt,name=input_interface,json=inputInterface,proto3" json:"input_interface,omitempty"`
	Priority       uint32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	IsIpv6         bool   `protobuf:"varint,3,opt,name=is_ipv6,json=isIpv6,proto3" json:"is_ipv6,omitempty"`
}

func (x *ABF_AttachedInterface) Reset() {
	*x = ABF_AttachedInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_abf_abf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABF_AttachedInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABF_AttachedInterface) ProtoMessage() {}

func (x *ABF_AttachedInterface) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_abf_abf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABF_AttachedInterface.ProtoReflect.Descriptor instead.
func (*ABF_AttachedInterface) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_abf_abf_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ABF_AttachedInterface) GetInputInterface() string {
	if x != nil {
		return x.InputInterface
	}
	return ""
}

func (x *ABF_AttachedInterface) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ABF_AttachedInterface) GetIsIpv6() bool {
	if x != nil {
		return x.IsIpv6
	}
	return false
}

// List of forwarding paths added to the ABF policy (via)
type ABF_ForwardingPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextHopIp     string `protobuf:"bytes,1,opt,name=next_hop_ip,json=nextHopIp,proto3" json:"next_hop_ip,omitempty"`
	InterfaceName string `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	Weight        uint32 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Preference    uint32 `protobuf:"varint,4,opt,name=preference,proto3" json:"preference,omitempty"`
	Dvr           bool   `protobuf:"varint,5,opt,name=dvr,proto3" json:"dvr,omitempty"`
}

func (x *ABF_ForwardingPath) Reset() {
	*x = ABF_ForwardingPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_abf_abf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABF_ForwardingPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABF_ForwardingPath) ProtoMessage() {}

func (x *ABF_ForwardingPath) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_abf_abf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABF_ForwardingPath.ProtoReflect.Descriptor instead.
func (*ABF_ForwardingPath) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_abf_abf_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ABF_ForwardingPath) GetNextHopIp() string {
	if x != nil {
		return x.NextHopIp
	}
	return ""
}

func (x *ABF_ForwardingPath) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *ABF_ForwardingPath) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ABF_ForwardingPath) GetPreference() uint32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

func (x *ABF_ForwardingPath) GetDvr() bool {
	if x != nil {
		return x.Dvr
	}
	return false
}

var File_ligato_vpp_abf_abf_proto protoreflect.FileDescriptor

var file_ligato_vpp_abf_abf_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2f, 0x61, 0x62, 0x66,
	0x2f, 0x61, 0x62, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6c, 0x69, 0x67, 0x61,
	0x74, 0x6f, 0x2e, 0x76, 0x70, 0x70, 0x2e, 0x61, 0x62, 0x66, 0x22, 0xf4, 0x03, 0x0a, 0x03, 0x41,
	0x42, 0x46, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x76, 0x70, 0x70, 0x2e, 0x61, 0x62,
	0x66, 0x2e, 0x41, 0x42, 0x46, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x12, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x76,
	0x70, 0x70, 0x2e, 0x61, 0x62, 0x66, 0x2e, 0x41, 0x42, 0x46, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x68, 0x73, 0x1a, 0x71, 0x0a, 0x11, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x69, 0x70, 0x76, 0x36, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x49, 0x70, 0x76, 0x36, 0x1a, 0xa1, 0x01,
	0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x49, 0x70,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x76, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x76,
	0x72, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x6f, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x69,
	0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x33, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2f,
	0x61, 0x62, 0x66, 0x3b, 0x76, 0x70, 0x70, 0x5f, 0x61, 0x62, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ligato_vpp_abf_abf_proto_rawDescOnce sync.Once
	file_ligato_vpp_abf_abf_proto_rawDescData = file_ligato_vpp_abf_abf_proto_rawDesc
)

func file_ligato_vpp_abf_abf_proto_rawDescGZIP() []byte {
	file_ligato_vpp_abf_abf_proto_rawDescOnce.Do(func() {
		file_ligato_vpp_abf_abf_proto_rawDescData = protoimpl.X.CompressGZIP(file_ligato_vpp_abf_abf_proto_rawDescData)
	})
	return file_ligato_vpp_abf_abf_proto_rawDescData
}

var file_ligato_vpp_abf_abf_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ligato_vpp_abf_abf_proto_goTypes = []interface{}{
	(*ABF)(nil),                   // 0: ligato.vpp.abf.ABF
	(*ABF_AttachedInterface)(nil), // 1: ligato.vpp.abf.ABF.AttachedInterface
	(*ABF_ForwardingPath)(nil),    // 2: ligato.vpp.abf.ABF.ForwardingPath
}
var file_ligato_vpp_abf_abf_proto_depIdxs = []int32{
	1, // 0: ligato.vpp.abf.ABF.attached_interfaces:type_name -> ligato.vpp.abf.ABF.AttachedInterface
	2, // 1: ligato.vpp.abf.ABF.forwarding_paths:type_name -> ligato.vpp.abf.ABF.ForwardingPath
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ligato_vpp_abf_abf_proto_init() }
func file_ligato_vpp_abf_abf_proto_init() {
	if File_ligato_vpp_abf_abf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ligato_vpp_abf_abf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_abf_abf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABF_AttachedInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_abf_abf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABF_ForwardingPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ligato_vpp_abf_abf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ligato_vpp_abf_abf_proto_goTypes,
		DependencyIndexes: file_ligato_vpp_abf_abf_proto_depIdxs,
		MessageInfos:      file_ligato_vpp_abf_abf_proto_msgTypes,
	}.Build()
	File_ligato_vpp_abf_abf_proto = out.File
	file_ligato_vpp_abf_abf_proto_rawDesc = nil
	file_ligato_vpp_abf_abf_proto_goTypes = nil
	file_ligato_vpp_abf_abf_proto_depIdxs = nil
}
