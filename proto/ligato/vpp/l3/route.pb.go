// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ligato/vpp/l3/route.proto

package vpp_l3

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Route_RouteType int32

const (
	// Forwarding is being done in the specified vrf_id only, or according to
	// the specified outgoing interface.
	Route_INTRA_VRF Route_RouteType = 0
	// Forwarding is being done by lookup into a different VRF,
	// specified as via_vrf_id field. In case of these routes, the outgoing
	// interface should not be specified. The next hop IP address
	// does not have to be specified either, in that case VPP does full
	// recursive lookup in the via_vrf_id VRF.
	Route_INTER_VRF Route_RouteType = 1
	// Drops the network communication designated for specific IP address.
	Route_DROP Route_RouteType = 2
)

var Route_RouteType_name = map[int32]string{
	0: "INTRA_VRF",
	1: "INTER_VRF",
	2: "DROP",
}

var Route_RouteType_value = map[string]int32{
	"INTRA_VRF": 0,
	"INTER_VRF": 1,
	"DROP":      2,
}

func (x Route_RouteType) String() string {
	return proto.EnumName(Route_RouteType_name, int32(x))
}

func (Route_RouteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_40b3e1f32796b68b, []int{0, 0}
}

type Route struct {
	Type Route_RouteType `protobuf:"varint,10,opt,name=type,proto3,enum=ligato.vpp.l3.Route_RouteType" json:"type,omitempty"`
	// VRF identifier, field required for remote client. This value should be
	// consistent with VRF ID in static route key. If it is not, value from
	// key will be preffered and this field will be overriden.
	// Non-zero VRF has to be explicitly created (see api/models/vpp/l3/vrf.proto)
	VrfId uint32 `protobuf:"varint,1,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	// Destination network defined by IP address and prefix (format: <address>/<prefix>).
	DstNetwork string `protobuf:"bytes,3,opt,name=dst_network,json=dstNetwork,proto3" json:"dst_network,omitempty"`
	// Next hop address.
	NextHopAddr string `protobuf:"bytes,4,opt,name=next_hop_addr,json=nextHopAddr,proto3" json:"next_hop_addr,omitempty"`
	// Interface name of the outgoing interface.
	OutgoingInterface string `protobuf:"bytes,5,opt,name=outgoing_interface,json=outgoingInterface,proto3" json:"outgoing_interface,omitempty"`
	// Weight is used for unequal cost load balancing.
	Weight uint32 `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	// Preference defines path preference. Lower preference is preferred.
	// Only paths with the best preference contribute to forwarding (a poor man's primary and backup).
	Preference uint32 `protobuf:"varint,7,opt,name=preference,proto3" json:"preference,omitempty"`
	// Specifies VRF ID for the next hop lookup / recursive lookup
	ViaVrfId             uint32   `protobuf:"varint,8,opt,name=via_vrf_id,json=viaVrfId,proto3" json:"via_vrf_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_40b3e1f32796b68b, []int{0}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetType() Route_RouteType {
	if m != nil {
		return m.Type
	}
	return Route_INTRA_VRF
}

func (m *Route) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func (m *Route) GetDstNetwork() string {
	if m != nil {
		return m.DstNetwork
	}
	return ""
}

func (m *Route) GetNextHopAddr() string {
	if m != nil {
		return m.NextHopAddr
	}
	return ""
}

func (m *Route) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *Route) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Route) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *Route) GetViaVrfId() uint32 {
	if m != nil {
		return m.ViaVrfId
	}
	return 0
}

func init() {
	proto.RegisterEnum("ligato.vpp.l3.Route_RouteType", Route_RouteType_name, Route_RouteType_value)
	proto.RegisterType((*Route)(nil), "ligato.vpp.l3.Route")
}

func init() { proto.RegisterFile("ligato/vpp/l3/route.proto", fileDescriptor_40b3e1f32796b68b) }

var fileDescriptor_40b3e1f32796b68b = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x41, 0x6b, 0x2a, 0x31,
	0x14, 0x85, 0xdf, 0xf8, 0x74, 0x9e, 0x5e, 0x99, 0x87, 0x0d, 0xb4, 0xa4, 0x50, 0xac, 0xb8, 0x72,
	0xe3, 0x0c, 0x38, 0xa5, 0x9b, 0xae, 0x2c, 0x6d, 0xa9, 0x1b, 0x5b, 0x82, 0xb8, 0xe8, 0x26, 0x4c,
	0xcd, 0x9d, 0x31, 0x74, 0x98, 0x84, 0x18, 0x63, 0xfd, 0x99, 0xfd, 0x47, 0xc5, 0xa8, 0xa5, 0x6e,
	0x02, 0xe7, 0x7c, 0x67, 0x91, 0x73, 0x0f, 0x5c, 0x96, 0xb2, 0xc8, 0xac, 0x4a, 0x9c, 0xd6, 0x49,
	0x99, 0x26, 0x46, 0xad, 0x2d, 0xc6, 0xda, 0x28, 0xab, 0x48, 0xb4, 0x47, 0xb1, 0xd3, 0x3a, 0x2e,
	0xd3, 0xfe, 0x57, 0x0d, 0x1a, 0x6c, 0x87, 0xc9, 0x08, 0xea, 0x76, 0xab, 0x91, 0x42, 0x2f, 0x18,
	0xfc, 0x1f, 0x75, 0xe3, 0x93, 0x5c, 0xec, 0x33, 0xfb, 0x77, 0xb6, 0xd5, 0xc8, 0x7c, 0x96, 0x9c,
	0x43, 0xe8, 0x4c, 0xce, 0xa5, 0xa0, 0x41, 0x2f, 0x18, 0x44, 0xac, 0xe1, 0x4c, 0x3e, 0x11, 0xe4,
	0x1a, 0xda, 0x62, 0x65, 0x79, 0x85, 0x76, 0xa3, 0xcc, 0x07, 0xfd, 0xdb, 0x0b, 0x06, 0x2d, 0x06,
	0x62, 0x65, 0xa7, 0x7b, 0x87, 0xf4, 0x21, 0xaa, 0xf0, 0xd3, 0xf2, 0xa5, 0xd2, 0x3c, 0x13, 0xc2,
	0xd0, 0xba, 0x8f, 0xb4, 0x77, 0xe6, 0xb3, 0xd2, 0x63, 0x21, 0x0c, 0x19, 0x02, 0x51, 0x6b, 0x5b,
	0x28, 0x59, 0x15, 0x5c, 0x56, 0x16, 0x4d, 0x9e, 0x2d, 0x90, 0x36, 0x7c, 0xf0, 0xec, 0x48, 0x26,
	0x47, 0x40, 0x2e, 0x20, 0xdc, 0xa0, 0x2c, 0x96, 0x96, 0x86, 0xfe, 0x2b, 0x07, 0x45, 0xba, 0x00,
	0xda, 0x60, 0x8e, 0x06, 0xab, 0x05, 0xd2, 0x7f, 0x9e, 0xfd, 0x72, 0xc8, 0x15, 0x80, 0x93, 0x19,
	0x3f, 0xd4, 0x68, 0x7a, 0xde, 0x74, 0x32, 0x9b, 0xef, 0x9a, 0xf4, 0x53, 0x68, 0xfd, 0x74, 0x26,
	0x11, 0xb4, 0x26, 0xd3, 0x19, 0x1b, 0xf3, 0x39, 0x7b, 0xea, 0xfc, 0x39, 0xc8, 0x47, 0xe6, 0x65,
	0x40, 0x9a, 0x50, 0x7f, 0x60, 0x2f, 0xaf, 0x9d, 0xda, 0xfd, 0xed, 0xdb, 0x4d, 0xa1, 0x8e, 0xf7,
	0x93, 0x7e, 0x85, 0x61, 0x56, 0x60, 0x65, 0x13, 0x97, 0x26, 0x7e, 0x85, 0xe4, 0x64, 0x9f, 0x3b,
	0xa7, 0x35, 0x2f, 0xd3, 0xf7, 0xd0, 0xb3, 0xf4, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x47, 0x80, 0xb2,
	0x9e, 0xbe, 0x01, 0x00, 0x00,
}
