// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: ligato/vpp/l3/l3.proto

package vpp_l3

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type IPScanNeighbor_Mode int32

const (
	IPScanNeighbor_DISABLED IPScanNeighbor_Mode = 0
	IPScanNeighbor_IPV4     IPScanNeighbor_Mode = 1
	IPScanNeighbor_IPV6     IPScanNeighbor_Mode = 2
	IPScanNeighbor_BOTH     IPScanNeighbor_Mode = 3
)

// Enum value maps for IPScanNeighbor_Mode.
var (
	IPScanNeighbor_Mode_name = map[int32]string{
		0: "DISABLED",
		1: "IPV4",
		2: "IPV6",
		3: "BOTH",
	}
	IPScanNeighbor_Mode_value = map[string]int32{
		"DISABLED": 0,
		"IPV4":     1,
		"IPV6":     2,
		"BOTH":     3,
	}
)

func (x IPScanNeighbor_Mode) Enum() *IPScanNeighbor_Mode {
	p := new(IPScanNeighbor_Mode)
	*p = x
	return p
}

func (x IPScanNeighbor_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPScanNeighbor_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_ligato_vpp_l3_l3_proto_enumTypes[0].Descriptor()
}

func (IPScanNeighbor_Mode) Type() protoreflect.EnumType {
	return &file_ligato_vpp_l3_l3_proto_enumTypes[0]
}

func (x IPScanNeighbor_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPScanNeighbor_Mode.Descriptor instead.
func (IPScanNeighbor_Mode) EnumDescriptor() ([]byte, []int) {
	return file_ligato_vpp_l3_l3_proto_rawDescGZIP(), []int{1, 0}
}

// ARP Proxy
type ProxyARP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of interfaces proxy ARP is enabled for.
	Interfaces []*ProxyARP_Interface `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Ranges     []*ProxyARP_Range     `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
}

func (x *ProxyARP) Reset() {
	*x = ProxyARP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_l3_l3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyARP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyARP) ProtoMessage() {}

func (x *ProxyARP) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_l3_l3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyARP.ProtoReflect.Descriptor instead.
func (*ProxyARP) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_l3_l3_proto_rawDescGZIP(), []int{0}
}

func (x *ProxyARP) GetInterfaces() []*ProxyARP_Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *ProxyARP) GetRanges() []*ProxyARP_Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

// IP Neighbour Config
type IPScanNeighbor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode           IPScanNeighbor_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=ligato.vpp.l3.IPScanNeighbor_Mode" json:"mode,omitempty"`
	ScanInterval   uint32              `protobuf:"varint,2,opt,name=scan_interval,json=scanInterval,proto3" json:"scan_interval,omitempty"`
	MaxProcTime    uint32              `protobuf:"varint,3,opt,name=max_proc_time,json=maxProcTime,proto3" json:"max_proc_time,omitempty"`
	MaxUpdate      uint32              `protobuf:"varint,4,opt,name=max_update,json=maxUpdate,proto3" json:"max_update,omitempty"`
	ScanIntDelay   uint32              `protobuf:"varint,5,opt,name=scan_int_delay,json=scanIntDelay,proto3" json:"scan_int_delay,omitempty"`
	StaleThreshold uint32              `protobuf:"varint,6,opt,name=stale_threshold,json=staleThreshold,proto3" json:"stale_threshold,omitempty"`
}

func (x *IPScanNeighbor) Reset() {
	*x = IPScanNeighbor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_l3_l3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPScanNeighbor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPScanNeighbor) ProtoMessage() {}

func (x *IPScanNeighbor) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_l3_l3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPScanNeighbor.ProtoReflect.Descriptor instead.
func (*IPScanNeighbor) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_l3_l3_proto_rawDescGZIP(), []int{1}
}

func (x *IPScanNeighbor) GetMode() IPScanNeighbor_Mode {
	if x != nil {
		return x.Mode
	}
	return IPScanNeighbor_DISABLED
}

func (x *IPScanNeighbor) GetScanInterval() uint32 {
	if x != nil {
		return x.ScanInterval
	}
	return 0
}

func (x *IPScanNeighbor) GetMaxProcTime() uint32 {
	if x != nil {
		return x.MaxProcTime
	}
	return 0
}

func (x *IPScanNeighbor) GetMaxUpdate() uint32 {
	if x != nil {
		return x.MaxUpdate
	}
	return 0
}

func (x *IPScanNeighbor) GetScanIntDelay() uint32 {
	if x != nil {
		return x.ScanIntDelay
	}
	return 0
}

func (x *IPScanNeighbor) GetStaleThreshold() uint32 {
	if x != nil {
		return x.StaleThreshold
	}
	return 0
}

// DHCP Proxy
type DHCPProxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceIpAddress string                  `protobuf:"bytes,1,opt,name=source_ip_address,json=sourceIpAddress,proto3" json:"source_ip_address,omitempty"`
	RxVrfId         uint32                  `protobuf:"varint,2,opt,name=rx_vrf_id,json=rxVrfId,proto3" json:"rx_vrf_id,omitempty"`
	Servers         []*DHCPProxy_DHCPServer `protobuf:"bytes,4,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *DHCPProxy) Reset() {
	*x = DHCPProxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_l3_l3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DHCPProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DHCPProxy) ProtoMessage() {}

func (x *DHCPProxy) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_l3_l3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DHCPProxy.ProtoReflect.Descriptor instead.
func (*DHCPProxy) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_l3_l3_proto_rawDescGZIP(), []int{2}
}

func (x *DHCPProxy) GetSourceIpAddress() string {
	if x != nil {
		return x.SourceIpAddress
	}
	return ""
}

func (x *DHCPProxy) GetRxVrfId() uint32 {
	if x != nil {
		return x.RxVrfId
	}
	return 0
}

func (x *DHCPProxy) GetServers() []*DHCPProxy_DHCPServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type ProxyARP_Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProxyARP_Interface) Reset() {
	*x = ProxyARP_Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_l3_l3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyARP_Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyARP_Interface) ProtoMessage() {}

func (x *ProxyARP_Interface) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_l3_l3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyARP_Interface.ProtoReflect.Descriptor instead.
func (*ProxyARP_Interface) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_l3_l3_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ProxyARP_Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProxyARP_Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstIpAddr string `protobuf:"bytes,1,opt,name=first_ip_addr,json=firstIpAddr,proto3" json:"first_ip_addr,omitempty"`
	LastIpAddr  string `protobuf:"bytes,2,opt,name=last_ip_addr,json=lastIpAddr,proto3" json:"last_ip_addr,omitempty"`
	VrfId       uint32 `protobuf:"varint,3,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
}

func (x *ProxyARP_Range) Reset() {
	*x = ProxyARP_Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_l3_l3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyARP_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyARP_Range) ProtoMessage() {}

func (x *ProxyARP_Range) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_l3_l3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyARP_Range.ProtoReflect.Descriptor instead.
func (*ProxyARP_Range) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_l3_l3_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ProxyARP_Range) GetFirstIpAddr() string {
	if x != nil {
		return x.FirstIpAddr
	}
	return ""
}

func (x *ProxyARP_Range) GetLastIpAddr() string {
	if x != nil {
		return x.LastIpAddr
	}
	return ""
}

func (x *ProxyARP_Range) GetVrfId() uint32 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

type DHCPProxy_DHCPServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VrfId     uint32 `protobuf:"varint,1,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
}

func (x *DHCPProxy_DHCPServer) Reset() {
	*x = DHCPProxy_DHCPServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_l3_l3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DHCPProxy_DHCPServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DHCPProxy_DHCPServer) ProtoMessage() {}

func (x *DHCPProxy_DHCPServer) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_l3_l3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DHCPProxy_DHCPServer.ProtoReflect.Descriptor instead.
func (*DHCPProxy_DHCPServer) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_l3_l3_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DHCPProxy_DHCPServer) GetVrfId() uint32 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *DHCPProxy_DHCPServer) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

var File_ligato_vpp_l3_l3_proto protoreflect.FileDescriptor

var file_ligato_vpp_l3_l3_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2f, 0x6c, 0x33, 0x2f,
	0x6c, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f,
	0x2e, 0x76, 0x70, 0x70, 0x2e, 0x6c, 0x33, 0x22, 0x8b, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x41, 0x52, 0x50, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74,
	0x6f, 0x2e, 0x76, 0x70, 0x70, 0x2e, 0x6c, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x52,
	0x50, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f,
	0x2e, 0x76, 0x70, 0x70, 0x2e, 0x6c, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x52, 0x50,
	0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0x1f,
	0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a,
	0x64, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x20, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x72, 0x66, 0x49, 0x64, 0x22, 0xb3, 0x02, 0x0a, 0x0e, 0x49, 0x50, 0x53, 0x63, 0x61, 0x6e,
	0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e,
	0x76, 0x70, 0x70, 0x2e, 0x6c, 0x33, 0x2e, 0x49, 0x50, 0x53, 0x63, 0x61, 0x6e, 0x4e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61,
	0x78, 0x50, 0x72, 0x6f, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x61, 0x6e,
	0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x32, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x49, 0x50, 0x56, 0x34, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x36, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x03, 0x22, 0xd6, 0x01, 0x0a, 0x09,
	0x44, 0x48, 0x43, 0x50, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x78, 0x5f, 0x76, 0x72, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x78, 0x56, 0x72, 0x66, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x76, 0x70, 0x70, 0x2e,
	0x6c, 0x33, 0x2e, 0x44, 0x48, 0x43, 0x50, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x44, 0x48, 0x43,
	0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x1a, 0x42, 0x0a, 0x0a, 0x44, 0x48, 0x43, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x72, 0x66, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x6f, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74,
	0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x33, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x76,
	0x70, 0x70, 0x2f, 0x6c, 0x33, 0x3b, 0x76, 0x70, 0x70, 0x5f, 0x6c, 0x33, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ligato_vpp_l3_l3_proto_rawDescOnce sync.Once
	file_ligato_vpp_l3_l3_proto_rawDescData = file_ligato_vpp_l3_l3_proto_rawDesc
)

func file_ligato_vpp_l3_l3_proto_rawDescGZIP() []byte {
	file_ligato_vpp_l3_l3_proto_rawDescOnce.Do(func() {
		file_ligato_vpp_l3_l3_proto_rawDescData = protoimpl.X.CompressGZIP(file_ligato_vpp_l3_l3_proto_rawDescData)
	})
	return file_ligato_vpp_l3_l3_proto_rawDescData
}

var file_ligato_vpp_l3_l3_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ligato_vpp_l3_l3_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ligato_vpp_l3_l3_proto_goTypes = []interface{}{
	(IPScanNeighbor_Mode)(0),     // 0: ligato.vpp.l3.IPScanNeighbor.Mode
	(*ProxyARP)(nil),             // 1: ligato.vpp.l3.ProxyARP
	(*IPScanNeighbor)(nil),       // 2: ligato.vpp.l3.IPScanNeighbor
	(*DHCPProxy)(nil),            // 3: ligato.vpp.l3.DHCPProxy
	(*ProxyARP_Interface)(nil),   // 4: ligato.vpp.l3.ProxyARP.Interface
	(*ProxyARP_Range)(nil),       // 5: ligato.vpp.l3.ProxyARP.Range
	(*DHCPProxy_DHCPServer)(nil), // 6: ligato.vpp.l3.DHCPProxy.DHCPServer
}
var file_ligato_vpp_l3_l3_proto_depIdxs = []int32{
	4, // 0: ligato.vpp.l3.ProxyARP.interfaces:type_name -> ligato.vpp.l3.ProxyARP.Interface
	5, // 1: ligato.vpp.l3.ProxyARP.ranges:type_name -> ligato.vpp.l3.ProxyARP.Range
	0, // 2: ligato.vpp.l3.IPScanNeighbor.mode:type_name -> ligato.vpp.l3.IPScanNeighbor.Mode
	6, // 3: ligato.vpp.l3.DHCPProxy.servers:type_name -> ligato.vpp.l3.DHCPProxy.DHCPServer
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ligato_vpp_l3_l3_proto_init() }
func file_ligato_vpp_l3_l3_proto_init() {
	if File_ligato_vpp_l3_l3_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ligato_vpp_l3_l3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyARP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_l3_l3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPScanNeighbor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_l3_l3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DHCPProxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_l3_l3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyARP_Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_l3_l3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyARP_Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_l3_l3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DHCPProxy_DHCPServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ligato_vpp_l3_l3_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ligato_vpp_l3_l3_proto_goTypes,
		DependencyIndexes: file_ligato_vpp_l3_l3_proto_depIdxs,
		EnumInfos:         file_ligato_vpp_l3_l3_proto_enumTypes,
		MessageInfos:      file_ligato_vpp_l3_l3_proto_msgTypes,
	}.Build()
	File_ligato_vpp_l3_l3_proto = out.File
	file_ligato_vpp_l3_l3_proto_rawDesc = nil
	file_ligato_vpp_l3_l3_proto_goTypes = nil
	file_ligato_vpp_l3_l3_proto_depIdxs = nil
}
