// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ligato/vpp/ipsec/ipsec.proto

package vpp_ipsec

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Cryptographic algorithm for encryption
type CryptoAlg int32

const (
	CryptoAlg_NONE_CRYPTO CryptoAlg = 0
	CryptoAlg_AES_CBC_128 CryptoAlg = 1
	CryptoAlg_AES_CBC_192 CryptoAlg = 2
	CryptoAlg_AES_CBC_256 CryptoAlg = 3
	CryptoAlg_AES_CTR_128 CryptoAlg = 4
	CryptoAlg_AES_CTR_192 CryptoAlg = 5
	CryptoAlg_AES_CTR_256 CryptoAlg = 6
	CryptoAlg_AES_GCM_128 CryptoAlg = 7
	CryptoAlg_AES_GCM_192 CryptoAlg = 8
	CryptoAlg_AES_GCM_256 CryptoAlg = 9
	CryptoAlg_DES_CBC     CryptoAlg = 10
	CryptoAlg_DES3_CBC    CryptoAlg = 11
)

var CryptoAlg_name = map[int32]string{
	0:  "NONE_CRYPTO",
	1:  "AES_CBC_128",
	2:  "AES_CBC_192",
	3:  "AES_CBC_256",
	4:  "AES_CTR_128",
	5:  "AES_CTR_192",
	6:  "AES_CTR_256",
	7:  "AES_GCM_128",
	8:  "AES_GCM_192",
	9:  "AES_GCM_256",
	10: "DES_CBC",
	11: "DES3_CBC",
}

var CryptoAlg_value = map[string]int32{
	"NONE_CRYPTO": 0,
	"AES_CBC_128": 1,
	"AES_CBC_192": 2,
	"AES_CBC_256": 3,
	"AES_CTR_128": 4,
	"AES_CTR_192": 5,
	"AES_CTR_256": 6,
	"AES_GCM_128": 7,
	"AES_GCM_192": 8,
	"AES_GCM_256": 9,
	"DES_CBC":     10,
	"DES3_CBC":    11,
}

func (x CryptoAlg) String() string {
	return proto.EnumName(CryptoAlg_name, int32(x))
}

func (CryptoAlg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{0}
}

// Cryptographic algorithm for authentication
type IntegAlg int32

const (
	IntegAlg_NONE_INTEG  IntegAlg = 0
	IntegAlg_MD5_96      IntegAlg = 1
	IntegAlg_SHA1_96     IntegAlg = 2
	IntegAlg_SHA_256_96  IntegAlg = 3
	IntegAlg_SHA_256_128 IntegAlg = 4
	IntegAlg_SHA_384_192 IntegAlg = 5
	IntegAlg_SHA_512_256 IntegAlg = 6
)

var IntegAlg_name = map[int32]string{
	0: "NONE_INTEG",
	1: "MD5_96",
	2: "SHA1_96",
	3: "SHA_256_96",
	4: "SHA_256_128",
	5: "SHA_384_192",
	6: "SHA_512_256",
}

var IntegAlg_value = map[string]int32{
	"NONE_INTEG":  0,
	"MD5_96":      1,
	"SHA1_96":     2,
	"SHA_256_96":  3,
	"SHA_256_128": 4,
	"SHA_384_192": 5,
	"SHA_512_256": 6,
}

func (x IntegAlg) String() string {
	return proto.EnumName(IntegAlg_name, int32(x))
}

func (IntegAlg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{1}
}

type SecurityPolicyDatabase_PolicyEntry_Action int32

const (
	SecurityPolicyDatabase_PolicyEntry_BYPASS  SecurityPolicyDatabase_PolicyEntry_Action = 0
	SecurityPolicyDatabase_PolicyEntry_DISCARD SecurityPolicyDatabase_PolicyEntry_Action = 1
	SecurityPolicyDatabase_PolicyEntry_RESOLVE SecurityPolicyDatabase_PolicyEntry_Action = 2
	SecurityPolicyDatabase_PolicyEntry_PROTECT SecurityPolicyDatabase_PolicyEntry_Action = 3
)

var SecurityPolicyDatabase_PolicyEntry_Action_name = map[int32]string{
	0: "BYPASS",
	1: "DISCARD",
	2: "RESOLVE",
	3: "PROTECT",
}

var SecurityPolicyDatabase_PolicyEntry_Action_value = map[string]int32{
	"BYPASS":  0,
	"DISCARD": 1,
	"RESOLVE": 2,
	"PROTECT": 3,
}

func (x SecurityPolicyDatabase_PolicyEntry_Action) String() string {
	return proto.EnumName(SecurityPolicyDatabase_PolicyEntry_Action_name, int32(x))
}

func (SecurityPolicyDatabase_PolicyEntry_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{0, 1, 0}
}

type SecurityPolicy_Action int32

const (
	SecurityPolicy_BYPASS  SecurityPolicy_Action = 0
	SecurityPolicy_DISCARD SecurityPolicy_Action = 1
	SecurityPolicy_RESOLVE SecurityPolicy_Action = 2
	SecurityPolicy_PROTECT SecurityPolicy_Action = 3
)

var SecurityPolicy_Action_name = map[int32]string{
	0: "BYPASS",
	1: "DISCARD",
	2: "RESOLVE",
	3: "PROTECT",
}

var SecurityPolicy_Action_value = map[string]int32{
	"BYPASS":  0,
	"DISCARD": 1,
	"RESOLVE": 2,
	"PROTECT": 3,
}

func (x SecurityPolicy_Action) String() string {
	return proto.EnumName(SecurityPolicy_Action_name, int32(x))
}

func (SecurityPolicy_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{1, 0}
}

type SecurityAssociation_IPSecProtocol int32

const (
	SecurityAssociation_AH  SecurityAssociation_IPSecProtocol = 0
	SecurityAssociation_ESP SecurityAssociation_IPSecProtocol = 1
)

var SecurityAssociation_IPSecProtocol_name = map[int32]string{
	0: "AH",
	1: "ESP",
}

var SecurityAssociation_IPSecProtocol_value = map[string]int32{
	"AH":  0,
	"ESP": 1,
}

func (x SecurityAssociation_IPSecProtocol) String() string {
	return proto.EnumName(SecurityAssociation_IPSecProtocol_name, int32(x))
}

func (SecurityAssociation_IPSecProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{2, 0}
}

// Security Policy Database (SPD)
type SecurityPolicyDatabase struct {
	Index      uint32                              `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Interfaces []*SecurityPolicyDatabase_Interface `protobuf:"bytes,2,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	// List of policy entries belonging to this SPD.
	// Deprecated and actually trying to use this will return an error.
	// Use separate model for Security Policy (SP) defined below.
	PolicyEntries        []*SecurityPolicyDatabase_PolicyEntry `protobuf:"bytes,3,rep,name=policy_entries,json=policyEntries,proto3" json:"policy_entries,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *SecurityPolicyDatabase) Reset()         { *m = SecurityPolicyDatabase{} }
func (m *SecurityPolicyDatabase) String() string { return proto.CompactTextString(m) }
func (*SecurityPolicyDatabase) ProtoMessage()    {}
func (*SecurityPolicyDatabase) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{0}
}

func (m *SecurityPolicyDatabase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityPolicyDatabase.Unmarshal(m, b)
}
func (m *SecurityPolicyDatabase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityPolicyDatabase.Marshal(b, m, deterministic)
}
func (m *SecurityPolicyDatabase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityPolicyDatabase.Merge(m, src)
}
func (m *SecurityPolicyDatabase) XXX_Size() int {
	return xxx_messageInfo_SecurityPolicyDatabase.Size(m)
}
func (m *SecurityPolicyDatabase) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityPolicyDatabase.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityPolicyDatabase proto.InternalMessageInfo

func (m *SecurityPolicyDatabase) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SecurityPolicyDatabase) GetInterfaces() []*SecurityPolicyDatabase_Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

// Deprecated: Do not use.
func (m *SecurityPolicyDatabase) GetPolicyEntries() []*SecurityPolicyDatabase_PolicyEntry {
	if m != nil {
		return m.PolicyEntries
	}
	return nil
}

type SecurityPolicyDatabase_Interface struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecurityPolicyDatabase_Interface) Reset()         { *m = SecurityPolicyDatabase_Interface{} }
func (m *SecurityPolicyDatabase_Interface) String() string { return proto.CompactTextString(m) }
func (*SecurityPolicyDatabase_Interface) ProtoMessage()    {}
func (*SecurityPolicyDatabase_Interface) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{0, 0}
}

func (m *SecurityPolicyDatabase_Interface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityPolicyDatabase_Interface.Unmarshal(m, b)
}
func (m *SecurityPolicyDatabase_Interface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityPolicyDatabase_Interface.Marshal(b, m, deterministic)
}
func (m *SecurityPolicyDatabase_Interface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityPolicyDatabase_Interface.Merge(m, src)
}
func (m *SecurityPolicyDatabase_Interface) XXX_Size() int {
	return xxx_messageInfo_SecurityPolicyDatabase_Interface.Size(m)
}
func (m *SecurityPolicyDatabase_Interface) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityPolicyDatabase_Interface.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityPolicyDatabase_Interface proto.InternalMessageInfo

func (m *SecurityPolicyDatabase_Interface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SecurityPolicyDatabase_PolicyEntry struct {
	SaIndex              uint32                                    `protobuf:"varint,1,opt,name=sa_index,json=saIndex,proto3" json:"sa_index,omitempty"`
	Priority             int32                                     `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	IsOutbound           bool                                      `protobuf:"varint,3,opt,name=is_outbound,json=isOutbound,proto3" json:"is_outbound,omitempty"`
	RemoteAddrStart      string                                    `protobuf:"bytes,4,opt,name=remote_addr_start,json=remoteAddrStart,proto3" json:"remote_addr_start,omitempty"`
	RemoteAddrStop       string                                    `protobuf:"bytes,5,opt,name=remote_addr_stop,json=remoteAddrStop,proto3" json:"remote_addr_stop,omitempty"`
	LocalAddrStart       string                                    `protobuf:"bytes,6,opt,name=local_addr_start,json=localAddrStart,proto3" json:"local_addr_start,omitempty"`
	LocalAddrStop        string                                    `protobuf:"bytes,7,opt,name=local_addr_stop,json=localAddrStop,proto3" json:"local_addr_stop,omitempty"`
	Protocol             uint32                                    `protobuf:"varint,8,opt,name=protocol,proto3" json:"protocol,omitempty"`
	RemotePortStart      uint32                                    `protobuf:"varint,9,opt,name=remote_port_start,json=remotePortStart,proto3" json:"remote_port_start,omitempty"`
	RemotePortStop       uint32                                    `protobuf:"varint,10,opt,name=remote_port_stop,json=remotePortStop,proto3" json:"remote_port_stop,omitempty"`
	LocalPortStart       uint32                                    `protobuf:"varint,11,opt,name=local_port_start,json=localPortStart,proto3" json:"local_port_start,omitempty"`
	LocalPortStop        uint32                                    `protobuf:"varint,12,opt,name=local_port_stop,json=localPortStop,proto3" json:"local_port_stop,omitempty"`
	Action               SecurityPolicyDatabase_PolicyEntry_Action `protobuf:"varint,13,opt,name=action,proto3,enum=ligato.vpp.ipsec.SecurityPolicyDatabase_PolicyEntry_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *SecurityPolicyDatabase_PolicyEntry) Reset()         { *m = SecurityPolicyDatabase_PolicyEntry{} }
func (m *SecurityPolicyDatabase_PolicyEntry) String() string { return proto.CompactTextString(m) }
func (*SecurityPolicyDatabase_PolicyEntry) ProtoMessage()    {}
func (*SecurityPolicyDatabase_PolicyEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{0, 1}
}

func (m *SecurityPolicyDatabase_PolicyEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityPolicyDatabase_PolicyEntry.Unmarshal(m, b)
}
func (m *SecurityPolicyDatabase_PolicyEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityPolicyDatabase_PolicyEntry.Marshal(b, m, deterministic)
}
func (m *SecurityPolicyDatabase_PolicyEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityPolicyDatabase_PolicyEntry.Merge(m, src)
}
func (m *SecurityPolicyDatabase_PolicyEntry) XXX_Size() int {
	return xxx_messageInfo_SecurityPolicyDatabase_PolicyEntry.Size(m)
}
func (m *SecurityPolicyDatabase_PolicyEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityPolicyDatabase_PolicyEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityPolicyDatabase_PolicyEntry proto.InternalMessageInfo

func (m *SecurityPolicyDatabase_PolicyEntry) GetSaIndex() uint32 {
	if m != nil {
		return m.SaIndex
	}
	return 0
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetIsOutbound() bool {
	if m != nil {
		return m.IsOutbound
	}
	return false
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetRemoteAddrStart() string {
	if m != nil {
		return m.RemoteAddrStart
	}
	return ""
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetRemoteAddrStop() string {
	if m != nil {
		return m.RemoteAddrStop
	}
	return ""
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetLocalAddrStart() string {
	if m != nil {
		return m.LocalAddrStart
	}
	return ""
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetLocalAddrStop() string {
	if m != nil {
		return m.LocalAddrStop
	}
	return ""
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetRemotePortStart() uint32 {
	if m != nil {
		return m.RemotePortStart
	}
	return 0
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetRemotePortStop() uint32 {
	if m != nil {
		return m.RemotePortStop
	}
	return 0
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetLocalPortStart() uint32 {
	if m != nil {
		return m.LocalPortStart
	}
	return 0
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetLocalPortStop() uint32 {
	if m != nil {
		return m.LocalPortStop
	}
	return 0
}

func (m *SecurityPolicyDatabase_PolicyEntry) GetAction() SecurityPolicyDatabase_PolicyEntry_Action {
	if m != nil {
		return m.Action
	}
	return SecurityPolicyDatabase_PolicyEntry_BYPASS
}

type SecurityPolicy struct {
	SpdIndex             uint32                `protobuf:"varint,1,opt,name=spd_index,json=spdIndex,proto3" json:"spd_index,omitempty"`
	SaIndex              uint32                `protobuf:"varint,2,opt,name=sa_index,json=saIndex,proto3" json:"sa_index,omitempty"`
	Priority             int32                 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	IsOutbound           bool                  `protobuf:"varint,4,opt,name=is_outbound,json=isOutbound,proto3" json:"is_outbound,omitempty"`
	RemoteAddrStart      string                `protobuf:"bytes,5,opt,name=remote_addr_start,json=remoteAddrStart,proto3" json:"remote_addr_start,omitempty"`
	RemoteAddrStop       string                `protobuf:"bytes,6,opt,name=remote_addr_stop,json=remoteAddrStop,proto3" json:"remote_addr_stop,omitempty"`
	LocalAddrStart       string                `protobuf:"bytes,7,opt,name=local_addr_start,json=localAddrStart,proto3" json:"local_addr_start,omitempty"`
	LocalAddrStop        string                `protobuf:"bytes,8,opt,name=local_addr_stop,json=localAddrStop,proto3" json:"local_addr_stop,omitempty"`
	Protocol             uint32                `protobuf:"varint,9,opt,name=protocol,proto3" json:"protocol,omitempty"`
	RemotePortStart      uint32                `protobuf:"varint,10,opt,name=remote_port_start,json=remotePortStart,proto3" json:"remote_port_start,omitempty"`
	RemotePortStop       uint32                `protobuf:"varint,11,opt,name=remote_port_stop,json=remotePortStop,proto3" json:"remote_port_stop,omitempty"`
	LocalPortStart       uint32                `protobuf:"varint,12,opt,name=local_port_start,json=localPortStart,proto3" json:"local_port_start,omitempty"`
	LocalPortStop        uint32                `protobuf:"varint,13,opt,name=local_port_stop,json=localPortStop,proto3" json:"local_port_stop,omitempty"`
	Action               SecurityPolicy_Action `protobuf:"varint,14,opt,name=action,proto3,enum=ligato.vpp.ipsec.SecurityPolicy_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SecurityPolicy) Reset()         { *m = SecurityPolicy{} }
func (m *SecurityPolicy) String() string { return proto.CompactTextString(m) }
func (*SecurityPolicy) ProtoMessage()    {}
func (*SecurityPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{1}
}

func (m *SecurityPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityPolicy.Unmarshal(m, b)
}
func (m *SecurityPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityPolicy.Marshal(b, m, deterministic)
}
func (m *SecurityPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityPolicy.Merge(m, src)
}
func (m *SecurityPolicy) XXX_Size() int {
	return xxx_messageInfo_SecurityPolicy.Size(m)
}
func (m *SecurityPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityPolicy proto.InternalMessageInfo

func (m *SecurityPolicy) GetSpdIndex() uint32 {
	if m != nil {
		return m.SpdIndex
	}
	return 0
}

func (m *SecurityPolicy) GetSaIndex() uint32 {
	if m != nil {
		return m.SaIndex
	}
	return 0
}

func (m *SecurityPolicy) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *SecurityPolicy) GetIsOutbound() bool {
	if m != nil {
		return m.IsOutbound
	}
	return false
}

func (m *SecurityPolicy) GetRemoteAddrStart() string {
	if m != nil {
		return m.RemoteAddrStart
	}
	return ""
}

func (m *SecurityPolicy) GetRemoteAddrStop() string {
	if m != nil {
		return m.RemoteAddrStop
	}
	return ""
}

func (m *SecurityPolicy) GetLocalAddrStart() string {
	if m != nil {
		return m.LocalAddrStart
	}
	return ""
}

func (m *SecurityPolicy) GetLocalAddrStop() string {
	if m != nil {
		return m.LocalAddrStop
	}
	return ""
}

func (m *SecurityPolicy) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *SecurityPolicy) GetRemotePortStart() uint32 {
	if m != nil {
		return m.RemotePortStart
	}
	return 0
}

func (m *SecurityPolicy) GetRemotePortStop() uint32 {
	if m != nil {
		return m.RemotePortStop
	}
	return 0
}

func (m *SecurityPolicy) GetLocalPortStart() uint32 {
	if m != nil {
		return m.LocalPortStart
	}
	return 0
}

func (m *SecurityPolicy) GetLocalPortStop() uint32 {
	if m != nil {
		return m.LocalPortStop
	}
	return 0
}

func (m *SecurityPolicy) GetAction() SecurityPolicy_Action {
	if m != nil {
		return m.Action
	}
	return SecurityPolicy_BYPASS
}

// Security Association (SA)
type SecurityAssociation struct {
	Index                uint32                            `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Spi                  uint32                            `protobuf:"varint,2,opt,name=spi,proto3" json:"spi,omitempty"`
	Protocol             SecurityAssociation_IPSecProtocol `protobuf:"varint,3,opt,name=protocol,proto3,enum=ligato.vpp.ipsec.SecurityAssociation_IPSecProtocol" json:"protocol,omitempty"`
	CryptoAlg            CryptoAlg                         `protobuf:"varint,4,opt,name=crypto_alg,json=cryptoAlg,proto3,enum=ligato.vpp.ipsec.CryptoAlg" json:"crypto_alg,omitempty"`
	CryptoKey            string                            `protobuf:"bytes,5,opt,name=crypto_key,json=cryptoKey,proto3" json:"crypto_key,omitempty"`
	IntegAlg             IntegAlg                          `protobuf:"varint,6,opt,name=integ_alg,json=integAlg,proto3,enum=ligato.vpp.ipsec.IntegAlg" json:"integ_alg,omitempty"`
	IntegKey             string                            `protobuf:"bytes,7,opt,name=integ_key,json=integKey,proto3" json:"integ_key,omitempty"`
	UseEsn               bool                              `protobuf:"varint,8,opt,name=use_esn,json=useEsn,proto3" json:"use_esn,omitempty"`
	UseAntiReplay        bool                              `protobuf:"varint,9,opt,name=use_anti_replay,json=useAntiReplay,proto3" json:"use_anti_replay,omitempty"`
	TunnelSrcAddr        string                            `protobuf:"bytes,10,opt,name=tunnel_src_addr,json=tunnelSrcAddr,proto3" json:"tunnel_src_addr,omitempty"`
	TunnelDstAddr        string                            `protobuf:"bytes,11,opt,name=tunnel_dst_addr,json=tunnelDstAddr,proto3" json:"tunnel_dst_addr,omitempty"`
	EnableUdpEncap       bool                              `protobuf:"varint,12,opt,name=enable_udp_encap,json=enableUdpEncap,proto3" json:"enable_udp_encap,omitempty"`
	TunnelSrcPort        uint32                            `protobuf:"varint,13,opt,name=tunnel_src_port,json=tunnelSrcPort,proto3" json:"tunnel_src_port,omitempty"`
	TunnelDstPort        uint32                            `protobuf:"varint,14,opt,name=tunnel_dst_port,json=tunnelDstPort,proto3" json:"tunnel_dst_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SecurityAssociation) Reset()         { *m = SecurityAssociation{} }
func (m *SecurityAssociation) String() string { return proto.CompactTextString(m) }
func (*SecurityAssociation) ProtoMessage()    {}
func (*SecurityAssociation) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{2}
}

func (m *SecurityAssociation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityAssociation.Unmarshal(m, b)
}
func (m *SecurityAssociation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityAssociation.Marshal(b, m, deterministic)
}
func (m *SecurityAssociation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityAssociation.Merge(m, src)
}
func (m *SecurityAssociation) XXX_Size() int {
	return xxx_messageInfo_SecurityAssociation.Size(m)
}
func (m *SecurityAssociation) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityAssociation.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityAssociation proto.InternalMessageInfo

func (m *SecurityAssociation) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SecurityAssociation) GetSpi() uint32 {
	if m != nil {
		return m.Spi
	}
	return 0
}

func (m *SecurityAssociation) GetProtocol() SecurityAssociation_IPSecProtocol {
	if m != nil {
		return m.Protocol
	}
	return SecurityAssociation_AH
}

func (m *SecurityAssociation) GetCryptoAlg() CryptoAlg {
	if m != nil {
		return m.CryptoAlg
	}
	return CryptoAlg_NONE_CRYPTO
}

func (m *SecurityAssociation) GetCryptoKey() string {
	if m != nil {
		return m.CryptoKey
	}
	return ""
}

func (m *SecurityAssociation) GetIntegAlg() IntegAlg {
	if m != nil {
		return m.IntegAlg
	}
	return IntegAlg_NONE_INTEG
}

func (m *SecurityAssociation) GetIntegKey() string {
	if m != nil {
		return m.IntegKey
	}
	return ""
}

func (m *SecurityAssociation) GetUseEsn() bool {
	if m != nil {
		return m.UseEsn
	}
	return false
}

func (m *SecurityAssociation) GetUseAntiReplay() bool {
	if m != nil {
		return m.UseAntiReplay
	}
	return false
}

func (m *SecurityAssociation) GetTunnelSrcAddr() string {
	if m != nil {
		return m.TunnelSrcAddr
	}
	return ""
}

func (m *SecurityAssociation) GetTunnelDstAddr() string {
	if m != nil {
		return m.TunnelDstAddr
	}
	return ""
}

func (m *SecurityAssociation) GetEnableUdpEncap() bool {
	if m != nil {
		return m.EnableUdpEncap
	}
	return false
}

func (m *SecurityAssociation) GetTunnelSrcPort() uint32 {
	if m != nil {
		return m.TunnelSrcPort
	}
	return 0
}

func (m *SecurityAssociation) GetTunnelDstPort() uint32 {
	if m != nil {
		return m.TunnelDstPort
	}
	return 0
}

// TunnelProtection allows enabling IPSec tunnel protection on an existing interface
// (only IPIP tunnel interfaces are currently supported)
type TunnelProtection struct {
	// Name of the interface to be protected with IPSec.
	Interface string `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	// Outbound security associations identified by SA index.
	SaOut []uint32 `protobuf:"varint,2,rep,packed,name=sa_out,json=saOut,proto3" json:"sa_out,omitempty"`
	// Inbound security associations identified by SA index.
	SaIn []uint32 `protobuf:"varint,3,rep,packed,name=sa_in,json=saIn,proto3" json:"sa_in,omitempty"`
	// (Optional) Next hop IP address, used for multipoint tunnels.
	NextHopAddr          string   `protobuf:"bytes,4,opt,name=next_hop_addr,json=nextHopAddr,proto3" json:"next_hop_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TunnelProtection) Reset()         { *m = TunnelProtection{} }
func (m *TunnelProtection) String() string { return proto.CompactTextString(m) }
func (*TunnelProtection) ProtoMessage()    {}
func (*TunnelProtection) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa20672189bf205, []int{3}
}

func (m *TunnelProtection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TunnelProtection.Unmarshal(m, b)
}
func (m *TunnelProtection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TunnelProtection.Marshal(b, m, deterministic)
}
func (m *TunnelProtection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TunnelProtection.Merge(m, src)
}
func (m *TunnelProtection) XXX_Size() int {
	return xxx_messageInfo_TunnelProtection.Size(m)
}
func (m *TunnelProtection) XXX_DiscardUnknown() {
	xxx_messageInfo_TunnelProtection.DiscardUnknown(m)
}

var xxx_messageInfo_TunnelProtection proto.InternalMessageInfo

func (m *TunnelProtection) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *TunnelProtection) GetSaOut() []uint32 {
	if m != nil {
		return m.SaOut
	}
	return nil
}

func (m *TunnelProtection) GetSaIn() []uint32 {
	if m != nil {
		return m.SaIn
	}
	return nil
}

func (m *TunnelProtection) GetNextHopAddr() string {
	if m != nil {
		return m.NextHopAddr
	}
	return ""
}

func init() {
	proto.RegisterEnum("ligato.vpp.ipsec.CryptoAlg", CryptoAlg_name, CryptoAlg_value)
	proto.RegisterEnum("ligato.vpp.ipsec.IntegAlg", IntegAlg_name, IntegAlg_value)
	proto.RegisterEnum("ligato.vpp.ipsec.SecurityPolicyDatabase_PolicyEntry_Action", SecurityPolicyDatabase_PolicyEntry_Action_name, SecurityPolicyDatabase_PolicyEntry_Action_value)
	proto.RegisterEnum("ligato.vpp.ipsec.SecurityPolicy_Action", SecurityPolicy_Action_name, SecurityPolicy_Action_value)
	proto.RegisterEnum("ligato.vpp.ipsec.SecurityAssociation_IPSecProtocol", SecurityAssociation_IPSecProtocol_name, SecurityAssociation_IPSecProtocol_value)
	proto.RegisterType((*SecurityPolicyDatabase)(nil), "ligato.vpp.ipsec.SecurityPolicyDatabase")
	proto.RegisterType((*SecurityPolicyDatabase_Interface)(nil), "ligato.vpp.ipsec.SecurityPolicyDatabase.Interface")
	proto.RegisterType((*SecurityPolicyDatabase_PolicyEntry)(nil), "ligato.vpp.ipsec.SecurityPolicyDatabase.PolicyEntry")
	proto.RegisterType((*SecurityPolicy)(nil), "ligato.vpp.ipsec.SecurityPolicy")
	proto.RegisterType((*SecurityAssociation)(nil), "ligato.vpp.ipsec.SecurityAssociation")
	proto.RegisterType((*TunnelProtection)(nil), "ligato.vpp.ipsec.TunnelProtection")
}

func init() {
	proto.RegisterFile("ligato/vpp/ipsec/ipsec.proto", fileDescriptor_3aa20672189bf205)
}

var fileDescriptor_3aa20672189bf205 = []byte{
	// 1067 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0xdf, 0x6e, 0xdb, 0x36,
	0x14, 0xc6, 0xe3, 0x7f, 0xb2, 0x7c, 0x1c, 0x39, 0x1a, 0xbb, 0x3f, 0x5a, 0xda, 0xa1, 0x86, 0x2f,
	0x36, 0x23, 0xc0, 0x1c, 0xc4, 0x69, 0xba, 0xa6, 0x19, 0x30, 0x38, 0xb6, 0xd1, 0x04, 0x5b, 0x63,
	0x43, 0xf2, 0x06, 0x74, 0x37, 0x82, 0x22, 0x71, 0x9e, 0x30, 0x57, 0x24, 0x44, 0x3a, 0xa8, 0xef,
	0xf6, 0x88, 0x7b, 0x87, 0xdd, 0x0d, 0x03, 0xf6, 0x0a, 0x03, 0x0f, 0x65, 0x45, 0x4e, 0xd3, 0xd5,
	0x18, 0x7a, 0x63, 0xe8, 0x7c, 0xfc, 0xf8, 0x51, 0x47, 0xfe, 0x89, 0x14, 0x3c, 0x5a, 0xc4, 0xf3,
	0x40, 0xb2, 0xc3, 0x1b, 0xce, 0x0f, 0x63, 0x2e, 0x68, 0xa8, 0x7f, 0x7b, 0x3c, 0x65, 0x92, 0x11,
	0x5b, 0x8f, 0xf6, 0x6e, 0x38, 0xef, 0xa1, 0xde, 0xf9, 0xcb, 0x80, 0x4f, 0x3d, 0x1a, 0x2e, 0xd3,
	0x58, 0xae, 0xa6, 0x6c, 0x11, 0x87, 0xab, 0x51, 0x20, 0x83, 0xeb, 0x40, 0x50, 0xf2, 0x31, 0xd4,
	0xe2, 0x24, 0xa2, 0x6f, 0x9c, 0x52, 0xbb, 0xd4, 0xb5, 0x5c, 0x5d, 0x10, 0x17, 0x20, 0x4e, 0x24,
	0x4d, 0x7f, 0x09, 0x42, 0x2a, 0x9c, 0x72, 0xbb, 0xd2, 0x6d, 0xf6, 0xfb, 0xbd, 0xbb, 0xb9, 0xbd,
	0xfb, 0x33, 0x7b, 0x97, 0xeb, 0xa9, 0x6e, 0x21, 0x85, 0xf8, 0xd0, 0xe2, 0xe8, 0xf3, 0x69, 0x22,
	0xd3, 0x98, 0x0a, 0xa7, 0x82, 0xb9, 0x4f, 0xb6, 0xce, 0xd5, 0xe5, 0x38, 0x91, 0xe9, 0xea, 0xbc,
	0xec, 0x94, 0x5c, 0x8b, 0xe7, 0x42, 0x4c, 0xc5, 0xfe, 0x63, 0x68, 0xe4, 0x2b, 0x13, 0x02, 0xd5,
	0x24, 0x78, 0x4d, 0xb1, 0xad, 0x86, 0x8b, 0xd7, 0xfb, 0x7f, 0x56, 0xa1, 0x59, 0xc8, 0x20, 0x9f,
	0x83, 0x29, 0x02, 0xbf, 0xd8, 0x7e, 0x5d, 0x04, 0x97, 0xf8, 0x00, 0xf6, 0xc1, 0xe4, 0x69, 0xcc,
	0xd4, 0x4d, 0x38, 0xe5, 0x76, 0xa9, 0x5b, 0x73, 0xf3, 0x9a, 0x3c, 0x86, 0x66, 0x2c, 0x7c, 0xb6,
	0x94, 0xd7, 0x6c, 0x99, 0x44, 0x4e, 0xa5, 0x5d, 0xea, 0x9a, 0x2e, 0xc4, 0x62, 0x92, 0x29, 0xe4,
	0x00, 0x3e, 0x4a, 0xe9, 0x6b, 0x26, 0xa9, 0x1f, 0x44, 0x51, 0xea, 0x0b, 0x19, 0xa4, 0xd2, 0xa9,
	0xe2, 0x8d, 0xec, 0xe9, 0x81, 0x41, 0x14, 0xa5, 0x9e, 0x92, 0x49, 0x17, 0xec, 0x4d, 0x2f, 0xe3,
	0x4e, 0x0d, 0xad, 0xad, 0xa2, 0x95, 0x71, 0xe5, 0x5c, 0xb0, 0x30, 0x58, 0x14, 0x43, 0x0d, 0xed,
	0x44, 0xfd, 0x36, 0xf3, 0x4b, 0xd8, 0xdb, 0x70, 0x32, 0xee, 0xd4, 0xd1, 0x68, 0x15, 0x8c, 0x8c,
	0xeb, 0x26, 0x99, 0x64, 0x21, 0x5b, 0x38, 0x26, 0xf6, 0x9f, 0xd7, 0x85, 0x1e, 0x38, 0x4b, 0x65,
	0xb6, 0x5c, 0x03, 0x4d, 0x59, 0x0f, 0x53, 0x96, 0xca, 0xbb, 0x3d, 0x64, 0x5e, 0xc6, 0x1d, 0x40,
	0x6b, 0xab, 0x68, 0x2d, 0xf6, 0x50, 0x08, 0x6d, 0x6a, 0x27, 0xea, 0xb7, 0x99, 0x79, 0x0f, 0xb7,
	0x91, 0xbb, 0x68, 0xb4, 0x0a, 0x46, 0xc6, 0x89, 0x07, 0x46, 0x10, 0xca, 0x98, 0x25, 0x8e, 0xd5,
	0x2e, 0x75, 0x5b, 0xfd, 0xb3, 0xff, 0x43, 0x53, 0x6f, 0x80, 0x11, 0x6e, 0x16, 0xd5, 0x39, 0x03,
	0x43, 0x2b, 0x04, 0xc0, 0x38, 0x7f, 0x35, 0x1d, 0x78, 0x9e, 0xbd, 0x43, 0x9a, 0x50, 0x1f, 0x5d,
	0x7a, 0xc3, 0x81, 0x3b, 0xb2, 0x4b, 0xaa, 0x70, 0xc7, 0xde, 0xe4, 0x87, 0x9f, 0xc6, 0x76, 0x59,
	0x15, 0x53, 0x77, 0x32, 0x1b, 0x0f, 0x67, 0x76, 0xa5, 0xf3, 0x4f, 0x15, 0x5a, 0x9b, 0x4b, 0x92,
	0x87, 0xd0, 0x10, 0x3c, 0xda, 0x20, 0xcd, 0x14, 0x3c, 0xd2, 0xa8, 0x15, 0x29, 0x2c, 0xbf, 0x9b,
	0xc2, 0xca, 0x7f, 0x53, 0x58, 0xdd, 0x8e, 0xc2, 0xda, 0xf6, 0x14, 0x1a, 0x5b, 0x53, 0x58, 0xdf,
	0x96, 0x42, 0xf3, 0x7d, 0x14, 0x36, 0xb6, 0xa1, 0x10, 0xb6, 0xa7, 0xb0, 0xb9, 0x35, 0x85, 0xbb,
	0xdb, 0x52, 0x68, 0xdd, 0x47, 0xe1, 0x77, 0x39, 0x85, 0x2d, 0xa4, 0xf0, 0xab, 0xf7, 0x51, 0xf8,
	0x41, 0x89, 0xfb, 0xbb, 0x0a, 0x0f, 0xd6, 0xf1, 0x03, 0x21, 0x58, 0x18, 0x07, 0x18, 0x75, 0xff,
	0xde, 0x6e, 0x43, 0x45, 0xf0, 0x38, 0x43, 0x4d, 0x5d, 0x92, 0x49, 0xe1, 0x1f, 0xa8, 0xe0, 0xfd,
	0x1f, 0xbf, 0xfb, 0xfe, 0x0b, 0x0b, 0xf4, 0x2e, 0xa7, 0x1e, 0x0d, 0xa7, 0xd9, 0xd4, 0xc2, 0xdf,
	0xf6, 0x1c, 0x20, 0x4c, 0x57, 0x5c, 0x32, 0x3f, 0x58, 0xcc, 0x11, 0xcd, 0x56, 0xff, 0xe1, 0xdb,
	0x91, 0x43, 0xf4, 0x0c, 0x16, 0x73, 0xb7, 0x11, 0xae, 0x2f, 0xc9, 0x17, 0xf9, 0xdc, 0xdf, 0xe8,
	0x2a, 0xe3, 0x35, 0x1b, 0xfe, 0x9e, 0xae, 0xc8, 0x37, 0xd0, 0x50, 0x67, 0xca, 0x1c, 0x93, 0x0d,
	0x4c, 0xde, 0x7f, 0x3b, 0x59, 0x9d, 0x03, 0x73, 0x15, 0x6c, 0xc6, 0xd9, 0x95, 0x7a, 0x07, 0xf5,
	0x44, 0x15, 0xab, 0x89, 0xd5, 0x83, 0x2a, 0xf5, 0x33, 0xa8, 0x2f, 0x05, 0xf5, 0xa9, 0x48, 0x90,
	0x51, 0xd3, 0x35, 0x96, 0x82, 0x8e, 0x45, 0xa2, 0x00, 0x50, 0x03, 0x41, 0x22, 0x63, 0x3f, 0xa5,
	0x7c, 0x11, 0xac, 0x90, 0x51, 0xd3, 0xb5, 0x96, 0x82, 0x0e, 0x12, 0x19, 0xbb, 0x28, 0x2a, 0x9f,
	0x5c, 0x26, 0x09, 0x5d, 0xf8, 0x22, 0x0d, 0x91, 0x78, 0xc4, 0xb4, 0xe1, 0x5a, 0x5a, 0xf6, 0xd2,
	0x50, 0x01, 0x5f, 0xf0, 0x45, 0x42, 0x6a, 0x5f, 0xb3, 0xe8, 0x1b, 0x09, 0x89, 0xbe, 0x2e, 0xd8,
	0x34, 0x09, 0xae, 0x17, 0xd4, 0x5f, 0x46, 0xdc, 0xa7, 0x49, 0x18, 0xe8, 0xfd, 0xcf, 0x74, 0x5b,
	0x5a, 0xff, 0x31, 0xe2, 0x63, 0xa5, 0xde, 0x59, 0x59, 0x71, 0xba, 0x46, 0x34, 0x5f, 0x59, 0x61,
	0x7a, 0x67, 0x65, 0xf4, 0xb5, 0x8a, 0xbe, 0x91, 0x90, 0xca, 0xd7, 0x69, 0x83, 0xb5, 0xf1, 0xb7,
	0x12, 0x03, 0xca, 0x83, 0x0b, 0x7b, 0x87, 0xd4, 0xa1, 0x32, 0xf6, 0xa6, 0x76, 0xa9, 0xf3, 0x7b,
	0x09, 0xec, 0x19, 0xce, 0x51, 0x1e, 0xaa, 0xb1, 0x7d, 0xa4, 0x1f, 0x2f, 0x1e, 0xbe, 0xd9, 0xa1,
	0x7b, 0x2b, 0x90, 0x4f, 0xc0, 0x10, 0x81, 0xda, 0xac, 0xf0, 0x5b, 0xc2, 0x72, 0x6b, 0x22, 0x98,
	0x2c, 0x25, 0x79, 0x00, 0x35, 0xdc, 0xfa, 0xf0, 0x4b, 0xc0, 0x72, 0xab, 0x6a, 0xdf, 0x23, 0x1d,
	0xb0, 0x12, 0xfa, 0x46, 0xfa, 0xbf, 0x32, 0xae, 0x1f, 0x90, 0x3e, 0x39, 0x9b, 0x4a, 0xbc, 0x60,
	0x5c, 0x3d, 0x9e, 0x83, 0x3f, 0x4a, 0xd0, 0xc8, 0xe9, 0x21, 0x7b, 0xd0, 0xbc, 0x9a, 0x5c, 0x8d,
	0xfd, 0xa1, 0xfb, 0x6a, 0x3a, 0x9b, 0xd8, 0x3b, 0x4a, 0x18, 0x8c, 0x3d, 0x7f, 0x78, 0x3e, 0xf4,
	0x8f, 0xfa, 0xcf, 0xec, 0xd2, 0x86, 0x70, 0xda, 0xb7, 0xcb, 0x45, 0xa1, 0x7f, 0xf2, 0xd4, 0xae,
	0xe4, 0xc2, 0xcc, 0xc5, 0x29, 0xd5, 0x0d, 0xe1, 0xb4, 0x6f, 0xd7, 0x8a, 0x82, 0x9a, 0x62, 0xac,
	0x85, 0x17, 0xc3, 0x97, 0x38, 0xa5, 0xbe, 0x21, 0x9c, 0xf6, 0x6d, 0xb3, 0x28, 0xa8, 0x29, 0x0d,
	0x7c, 0xa1, 0xf5, 0xb2, 0x36, 0x90, 0x5d, 0x30, 0x47, 0x63, 0xef, 0x18, 0xab, 0xe6, 0xc1, 0x0d,
	0x98, 0x6b, 0x6a, 0x49, 0x0b, 0x00, 0x1b, 0xba, 0xbc, 0x9a, 0x8d, 0x5f, 0xd8, 0x3b, 0x6a, 0x4f,
	0x78, 0x39, 0x3a, 0xf1, 0x4f, 0x9f, 0xea, 0x6d, 0xc0, 0xbb, 0x18, 0x1c, 0xa9, 0xa2, 0xac, 0x8c,
	0xde, 0xc5, 0x40, 0x85, 0xab, 0x1a, 0xbb, 0x58, 0xd7, 0x79, 0x17, 0x4a, 0x38, 0x7e, 0xf6, 0xe4,
	0xb6, 0x0b, 0x25, 0x9c, 0x1c, 0xf5, 0x75, 0x17, 0xe7, 0xdf, 0xfe, 0xfc, 0x7c, 0xce, 0xd6, 0x6f,
	0x50, 0x8c, 0xdf, 0x94, 0x5f, 0x07, 0x73, 0x9a, 0xc8, 0xc3, 0x9b, 0xe3, 0x43, 0x7c, 0xa3, 0x0f,
	0xef, 0x7e, 0x6d, 0x9e, 0xdd, 0x70, 0xee, 0xe3, 0xd5, 0xb5, 0x81, 0x8e, 0xe3, 0x7f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x21, 0x27, 0xbb, 0xe8, 0x92, 0x0a, 0x00, 0x00,
}
