// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: ligato/vpp/wireguard/wireguard.proto

package vpp_wg

import (
	_ "go.ligato.io/vpp-agent/v3/proto/ligato"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public-key base64
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Peer UDP port
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Keepalive interval (sec)
	PersistentKeepalive uint32 `protobuf:"varint,3,opt,name=persistent_keepalive,json=persistentKeepalive,proto3" json:"persistent_keepalive,omitempty"`
	// Endpoint IP
	Endpoint string `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// The name of the wireguard interface to which this peer belongs
	WgIfName string `protobuf:"bytes,5,opt,name=wg_if_name,json=wgIfName,proto3" json:"wg_if_name,omitempty"`
	// Flags
	// WIREGUARD_PEER_STATUS_DEAD = 0x1
	Flags uint32 `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	// Allowed IPs
	AllowedIps []string `protobuf:"bytes,7,rep,name=allowed_ips,json=allowedIps,proto3" json:"allowed_ips,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_wireguard_wireguard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_wireguard_wireguard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_wireguard_wireguard_proto_rawDescGZIP(), []int{0}
}

func (x *Peer) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Peer) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Peer) GetPersistentKeepalive() uint32 {
	if x != nil {
		return x.PersistentKeepalive
	}
	return 0
}

func (x *Peer) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Peer) GetWgIfName() string {
	if x != nil {
		return x.WgIfName
	}
	return ""
}

func (x *Peer) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Peer) GetAllowedIps() []string {
	if x != nil {
		return x.AllowedIps
	}
	return nil
}

var File_ligato_vpp_wireguard_wireguard_proto protoreflect.FileDescriptor

var file_ligato_vpp_wireguard_wireguard_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2f, 0x77, 0x69, 0x72,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x76,
	0x70, 0x70, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x18, 0x6c, 0x69,
	0x67, 0x61, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x01, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1d,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0x82, 0x7d,
	0x06, 0x12, 0x04, 0x10, 0xff, 0xff, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x0a,
	0x14, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x65, 0x70,
	0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65,
	0x12, 0x21, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x05, 0x82, 0x7d, 0x02, 0x08, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x77, 0x67, 0x5f, 0x69, 0x66, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x67, 0x49, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x05, 0x82, 0x7d,
	0x02, 0x08, 0x01, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x70, 0x73, 0x42,
	0x3d, 0x5a, 0x3b, 0x67, 0x6f, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x69, 0x6f, 0x2f,
	0x76, 0x70, 0x70, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x33, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2f, 0x77, 0x69,
	0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x3b, 0x76, 0x70, 0x70, 0x5f, 0x77, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ligato_vpp_wireguard_wireguard_proto_rawDescOnce sync.Once
	file_ligato_vpp_wireguard_wireguard_proto_rawDescData = file_ligato_vpp_wireguard_wireguard_proto_rawDesc
)

func file_ligato_vpp_wireguard_wireguard_proto_rawDescGZIP() []byte {
	file_ligato_vpp_wireguard_wireguard_proto_rawDescOnce.Do(func() {
		file_ligato_vpp_wireguard_wireguard_proto_rawDescData = protoimpl.X.CompressGZIP(file_ligato_vpp_wireguard_wireguard_proto_rawDescData)
	})
	return file_ligato_vpp_wireguard_wireguard_proto_rawDescData
}

var file_ligato_vpp_wireguard_wireguard_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ligato_vpp_wireguard_wireguard_proto_goTypes = []interface{}{
	(*Peer)(nil), // 0: ligato.vpp.wireguard.Peer
}
var file_ligato_vpp_wireguard_wireguard_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ligato_vpp_wireguard_wireguard_proto_init() }
func file_ligato_vpp_wireguard_wireguard_proto_init() {
	if File_ligato_vpp_wireguard_wireguard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ligato_vpp_wireguard_wireguard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ligato_vpp_wireguard_wireguard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ligato_vpp_wireguard_wireguard_proto_goTypes,
		DependencyIndexes: file_ligato_vpp_wireguard_wireguard_proto_depIdxs,
		MessageInfos:      file_ligato_vpp_wireguard_wireguard_proto_msgTypes,
	}.Build()
	File_ligato_vpp_wireguard_wireguard_proto = out.File
	file_ligato_vpp_wireguard_wireguard_proto_rawDesc = nil
	file_ligato_vpp_wireguard_wireguard_proto_goTypes = nil
	file_ligato_vpp_wireguard_wireguard_proto_depIdxs = nil
}
