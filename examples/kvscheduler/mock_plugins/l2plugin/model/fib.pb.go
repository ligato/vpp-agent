// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/fib.proto

package mock_l2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FIBEntry_Action int32

const (
	FIBEntry_FORWARD FIBEntry_Action = 0
	FIBEntry_DROP    FIBEntry_Action = 1
)

var FIBEntry_Action_name = map[int32]string{
	0: "FORWARD",
	1: "DROP",
}

var FIBEntry_Action_value = map[string]int32{
	"FORWARD": 0,
	"DROP":    1,
}

func (x FIBEntry_Action) String() string {
	return proto.EnumName(FIBEntry_Action_name, int32(x))
}

func (FIBEntry_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fe592485f465b8e1, []int{0, 0}
}

type FIBEntry struct {
	PhysAddress          string          `protobuf:"bytes,1,opt,name=phys_address,json=physAddress,proto3" json:"phys_address,omitempty"`
	BridgeDomain         string          `protobuf:"bytes,2,opt,name=bridge_domain,json=bridgeDomain,proto3" json:"bridge_domain,omitempty"`
	Action               FIBEntry_Action `protobuf:"varint,3,opt,name=action,proto3,enum=mock.l2.FIBEntry_Action" json:"action,omitempty"`
	OutgoingInterface    string          `protobuf:"bytes,4,opt,name=outgoing_interface,json=outgoingInterface,proto3" json:"outgoing_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FIBEntry) Reset()         { *m = FIBEntry{} }
func (m *FIBEntry) String() string { return proto.CompactTextString(m) }
func (*FIBEntry) ProtoMessage()    {}
func (*FIBEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe592485f465b8e1, []int{0}
}

func (m *FIBEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FIBEntry.Unmarshal(m, b)
}
func (m *FIBEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FIBEntry.Marshal(b, m, deterministic)
}
func (m *FIBEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FIBEntry.Merge(m, src)
}
func (m *FIBEntry) XXX_Size() int {
	return xxx_messageInfo_FIBEntry.Size(m)
}
func (m *FIBEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_FIBEntry.DiscardUnknown(m)
}

var xxx_messageInfo_FIBEntry proto.InternalMessageInfo

func (m *FIBEntry) GetPhysAddress() string {
	if m != nil {
		return m.PhysAddress
	}
	return ""
}

func (m *FIBEntry) GetBridgeDomain() string {
	if m != nil {
		return m.BridgeDomain
	}
	return ""
}

func (m *FIBEntry) GetAction() FIBEntry_Action {
	if m != nil {
		return m.Action
	}
	return FIBEntry_FORWARD
}

func (m *FIBEntry) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func init() {
	proto.RegisterEnum("mock.l2.FIBEntry_Action", FIBEntry_Action_name, FIBEntry_Action_value)
	proto.RegisterType((*FIBEntry)(nil), "mock.l2.FIBEntry")
}

func init() { proto.RegisterFile("model/fib.proto", fileDescriptor_fe592485f465b8e1) }

var fileDescriptor_fe592485f465b8e1 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x45, 0x31, 0x54, 0x69, 0x79, 0x2d, 0x50, 0xde, 0xe4, 0x8d, 0x52, 0x96, 0x2e, 0x18, 0x54,
	0xbe, 0x20, 0x28, 0x54, 0xea, 0x54, 0xe4, 0x85, 0x31, 0x72, 0x62, 0x37, 0x58, 0x34, 0x7e, 0x91,
	0x63, 0x86, 0xfc, 0x27, 0x1f, 0x84, 0xea, 0x24, 0xeb, 0x39, 0x57, 0xf7, 0xea, 0xc2, 0x5d, 0x4d,
	0xda, 0x9c, 0x5e, 0x8e, 0xb6, 0x10, 0x8d, 0xa7, 0x40, 0x38, 0xad, 0xa9, 0xfc, 0x11, 0xa7, 0xed,
	0xfa, 0x8f, 0xc1, 0x6c, 0xb7, 0x7f, 0xff, 0x70, 0xc1, 0x77, 0xf8, 0x08, 0x8b, 0xe6, 0xbb, 0x6b,
	0x73, 0xa5, 0xb5, 0x37, 0x6d, 0xcb, 0xd9, 0x8a, 0x6d, 0xae, 0xe5, 0xfc, 0xcc, 0xd2, 0x1e, 0xe1,
	0x13, 0xdc, 0x14, 0xde, 0xea, 0xca, 0xe4, 0x9a, 0x6a, 0x65, 0x1d, 0xbf, 0x8c, 0x99, 0x45, 0x0f,
	0xb3, 0xc8, 0xf0, 0x15, 0x12, 0x55, 0x06, 0x4b, 0x8e, 0x5f, 0xad, 0xd8, 0xe6, 0x76, 0xcb, 0xc5,
	0x30, 0x27, 0xc6, 0x29, 0x91, 0x46, 0x2f, 0x87, 0x1c, 0x3e, 0x03, 0xd2, 0x6f, 0xa8, 0xc8, 0xba,
	0x2a, 0xb7, 0x2e, 0x18, 0x7f, 0x54, 0xa5, 0xe1, 0x93, 0xd8, 0x7d, 0x3f, 0x9a, 0xfd, 0x28, 0xd6,
	0x0f, 0x90, 0xf4, 0x05, 0x38, 0x87, 0xe9, 0xee, 0x20, 0xbf, 0x52, 0x99, 0x2d, 0x2f, 0x70, 0x06,
	0x93, 0x4c, 0x1e, 0x3e, 0x97, 0xac, 0x48, 0xe2, 0xcd, 0xb7, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x0f, 0xd5, 0x15, 0x81, 0xf9, 0x00, 0x00, 0x00,
}
