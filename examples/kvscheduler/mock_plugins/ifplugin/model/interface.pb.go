// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ligato/vpp-agent/examples/kvscheduler/mock_plugins/ifplugin/model/interface.proto

package mock_interfaces

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Interface_Type int32

const (
	Interface_UNDEFINED_TYPE Interface_Type = 0
	Interface_LOOPBACK       Interface_Type = 1
	Interface_TAP            Interface_Type = 2
)

var Interface_Type_name = map[int32]string{
	0: "UNDEFINED_TYPE",
	1: "LOOPBACK",
	2: "TAP",
}

var Interface_Type_value = map[string]int32{
	"UNDEFINED_TYPE": 0,
	"LOOPBACK":       1,
	"TAP":            2,
}

func (x Interface_Type) String() string {
	return proto.EnumName(Interface_Type_name, int32(x))
}

func (Interface_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aae80c043edc9413, []int{0, 0}
}

type Interface struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 Interface_Type `protobuf:"varint,2,opt,name=type,proto3,enum=mock.interfaces.Interface_Type" json:"type,omitempty"`
	Enabled              bool           `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	PhysAddress          string         `protobuf:"bytes,4,opt,name=phys_address,json=physAddress,proto3" json:"phys_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Interface) Reset()         { *m = Interface{} }
func (m *Interface) String() string { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()    {}
func (*Interface) Descriptor() ([]byte, []int) {
	return fileDescriptor_aae80c043edc9413, []int{0}
}

func (m *Interface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interface.Unmarshal(m, b)
}
func (m *Interface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interface.Marshal(b, m, deterministic)
}
func (m *Interface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interface.Merge(m, src)
}
func (m *Interface) XXX_Size() int {
	return xxx_messageInfo_Interface.Size(m)
}
func (m *Interface) XXX_DiscardUnknown() {
	xxx_messageInfo_Interface.DiscardUnknown(m)
}

var xxx_messageInfo_Interface proto.InternalMessageInfo

func (m *Interface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interface) GetType() Interface_Type {
	if m != nil {
		return m.Type
	}
	return Interface_UNDEFINED_TYPE
}

func (m *Interface) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Interface) GetPhysAddress() string {
	if m != nil {
		return m.PhysAddress
	}
	return ""
}

func init() {
	proto.RegisterEnum("mock.interfaces.Interface_Type", Interface_Type_name, Interface_Type_value)
	proto.RegisterType((*Interface)(nil), "mock.interfaces.Interface")
}

func init() {
	proto.RegisterFile("ligato/vpp-agent/examples/kvscheduler/mock_plugins/ifplugin/model/interface.proto", fileDescriptor_aae80c043edc9413)
}

var fileDescriptor_aae80c043edc9413 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xc1, 0x6e, 0xb2, 0x40,
	0x14, 0x85, 0xff, 0x51, 0xf2, 0xab, 0xb7, 0xc6, 0x92, 0xbb, 0x62, 0x57, 0xea, 0x8a, 0x4d, 0x99,
	0xb4, 0x3e, 0x01, 0xad, 0x34, 0x31, 0x6d, 0x94, 0x12, 0xba, 0xe8, 0x8a, 0x8c, 0x70, 0x45, 0xe2,
	0x00, 0x13, 0x06, 0x4d, 0x79, 0xbf, 0x3e, 0x58, 0x03, 0x46, 0x17, 0xdd, 0x9d, 0xf3, 0xe5, 0xdc,
	0x73, 0x73, 0xe0, 0x43, 0xe6, 0x99, 0x68, 0x2a, 0x7e, 0x52, 0xea, 0x41, 0x64, 0x54, 0x36, 0x9c,
	0xbe, 0x45, 0xa1, 0x24, 0x69, 0x7e, 0x38, 0xe9, 0x64, 0x4f, 0xe9, 0x51, 0x52, 0xcd, 0x8b, 0x2a,
	0x39, 0xc4, 0x4a, 0x1e, 0xb3, 0xbc, 0xd4, 0x3c, 0xdf, 0x9d, 0x15, 0x2f, 0xaa, 0x94, 0x24, 0xcf,
	0xcb, 0x86, 0xea, 0x9d, 0x48, 0xc8, 0x55, 0x75, 0xd5, 0x54, 0x78, 0xdb, 0x85, 0xdd, 0x2b, 0xd5,
	0xf3, 0x1f, 0x06, 0x93, 0xd5, 0xc5, 0x22, 0x82, 0x51, 0x8a, 0x82, 0x2c, 0x66, 0x33, 0x67, 0x12,
	0xf6, 0x1a, 0x17, 0x60, 0x34, 0xad, 0x22, 0x6b, 0x60, 0x33, 0x67, 0xf6, 0x74, 0xe7, 0xfe, 0x69,
	0x70, 0xaf, 0xd7, 0x6e, 0xd4, 0x2a, 0x0a, 0xfb, 0x30, 0x5a, 0x30, 0xa2, 0x52, 0x6c, 0x25, 0xa5,
	0xd6, 0xd0, 0x66, 0xce, 0x38, 0xbc, 0x58, 0xbc, 0x87, 0xa9, 0xda, 0xb7, 0x3a, 0x16, 0x69, 0x5a,
	0x93, 0xd6, 0x96, 0xd1, 0xbf, 0xba, 0xe9, 0x98, 0x77, 0x46, 0xf3, 0x47, 0x30, 0xba, 0x2a, 0x44,
	0x98, 0x7d, 0xae, 0x97, 0xfe, 0xeb, 0x6a, 0xed, 0x2f, 0xe3, 0xe8, 0x2b, 0xf0, 0xcd, 0x7f, 0x38,
	0x85, 0xf1, 0xfb, 0x66, 0x13, 0x3c, 0x7b, 0x2f, 0x6f, 0x26, 0xc3, 0x11, 0x0c, 0x23, 0x2f, 0x30,
	0x07, 0xdb, 0xff, 0xfd, 0xbc, 0xc5, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xde, 0xbf, 0xf1, 0xb1,
	0x33, 0x01, 0x00, 0x00,
}
