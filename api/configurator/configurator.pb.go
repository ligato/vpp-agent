// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ligato/vpp-agent/api/configurator/configurator.proto

package configurator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	linux "github.com/ligato/vpp-agent/api/models/linux"
	netalloc "github.com/ligato/vpp-agent/api/models/netalloc"
	vpp "github.com/ligato/vpp-agent/api/models/vpp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Config groups all supported config data into single message.
type Config struct {
	VppConfig            *vpp.ConfigData      `protobuf:"bytes,1,opt,name=vpp_config,json=vppConfig,proto3" json:"vpp_config,omitempty"`
	LinuxConfig          *linux.ConfigData    `protobuf:"bytes,2,opt,name=linux_config,json=linuxConfig,proto3" json:"linux_config,omitempty"`
	NetallocConfig       *netalloc.ConfigData `protobuf:"bytes,3,opt,name=netalloc_config,json=netallocConfig,proto3" json:"netalloc_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetVppConfig() *vpp.ConfigData {
	if m != nil {
		return m.VppConfig
	}
	return nil
}

func (m *Config) GetLinuxConfig() *linux.ConfigData {
	if m != nil {
		return m.LinuxConfig
	}
	return nil
}

func (m *Config) GetNetallocConfig() *netalloc.ConfigData {
	if m != nil {
		return m.NetallocConfig
	}
	return nil
}

// Notification groups all notification data into single message.
type Notification struct {
	// Types that are valid to be assigned to Notification:
	//	*Notification_VppNotification
	//	*Notification_LinuxNotification
	Notification         isNotification_Notification `protobuf_oneof:"notification"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{1}
}

func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

type isNotification_Notification interface {
	isNotification_Notification()
}

type Notification_VppNotification struct {
	VppNotification *vpp.Notification `protobuf:"bytes,1,opt,name=vpp_notification,json=vppNotification,proto3,oneof"`
}

type Notification_LinuxNotification struct {
	LinuxNotification *linux.Notification `protobuf:"bytes,2,opt,name=linux_notification,json=linuxNotification,proto3,oneof"`
}

func (*Notification_VppNotification) isNotification_Notification() {}

func (*Notification_LinuxNotification) isNotification_Notification() {}

func (m *Notification) GetNotification() isNotification_Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func (m *Notification) GetVppNotification() *vpp.Notification {
	if x, ok := m.GetNotification().(*Notification_VppNotification); ok {
		return x.VppNotification
	}
	return nil
}

func (m *Notification) GetLinuxNotification() *linux.Notification {
	if x, ok := m.GetNotification().(*Notification_LinuxNotification); ok {
		return x.LinuxNotification
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Notification) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Notification_VppNotification)(nil),
		(*Notification_LinuxNotification)(nil),
	}
}

type UpdateRequest struct {
	// Update describes config data to be updated.
	Update *Config `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"`
	// The full_resync option can be used
	// to overwrite all existing data.
	FullResync           bool     `protobuf:"varint,2,opt,name=full_resync,json=fullResync,proto3" json:"full_resync,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{2}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetUpdate() *Config {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UpdateRequest) GetFullResync() bool {
	if m != nil {
		return m.FullResync
	}
	return false
}

type UpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{3}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

type DeleteRequest struct {
	// Delete describes config data to be deleted.
	Delete               *Config  `protobuf:"bytes,1,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{4}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetDelete() *Config {
	if m != nil {
		return m.Delete
	}
	return nil
}

type DeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{5}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{6}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type GetResponse struct {
	// Config describes desired config retrieved from agent.
	Config               *Config  `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{7}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type DumpRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpRequest) Reset()         { *m = DumpRequest{} }
func (m *DumpRequest) String() string { return proto.CompactTextString(m) }
func (*DumpRequest) ProtoMessage()    {}
func (*DumpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{8}
}

func (m *DumpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpRequest.Unmarshal(m, b)
}
func (m *DumpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpRequest.Marshal(b, m, deterministic)
}
func (m *DumpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpRequest.Merge(m, src)
}
func (m *DumpRequest) XXX_Size() int {
	return xxx_messageInfo_DumpRequest.Size(m)
}
func (m *DumpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpRequest proto.InternalMessageInfo

type DumpResponse struct {
	// Dump describes running config dumped from southbound.
	Dump                 *Config  `protobuf:"bytes,1,opt,name=dump,proto3" json:"dump,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpResponse) Reset()         { *m = DumpResponse{} }
func (m *DumpResponse) String() string { return proto.CompactTextString(m) }
func (*DumpResponse) ProtoMessage()    {}
func (*DumpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{9}
}

func (m *DumpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpResponse.Unmarshal(m, b)
}
func (m *DumpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpResponse.Marshal(b, m, deterministic)
}
func (m *DumpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpResponse.Merge(m, src)
}
func (m *DumpResponse) XXX_Size() int {
	return xxx_messageInfo_DumpResponse.Size(m)
}
func (m *DumpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DumpResponse proto.InternalMessageInfo

func (m *DumpResponse) GetDump() *Config {
	if m != nil {
		return m.Dump
	}
	return nil
}

// NotificationRequest represent a notification request which contains
// index of next required message
type NotificationRequest struct {
	Idx                  uint32   `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotificationRequest) Reset()         { *m = NotificationRequest{} }
func (m *NotificationRequest) String() string { return proto.CompactTextString(m) }
func (*NotificationRequest) ProtoMessage()    {}
func (*NotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{10}
}

func (m *NotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationRequest.Unmarshal(m, b)
}
func (m *NotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationRequest.Marshal(b, m, deterministic)
}
func (m *NotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationRequest.Merge(m, src)
}
func (m *NotificationRequest) XXX_Size() int {
	return xxx_messageInfo_NotificationRequest.Size(m)
}
func (m *NotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationRequest proto.InternalMessageInfo

func (m *NotificationRequest) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

// Response to notification request 'get'. Returns indexed notification.
type NotificationResponse struct {
	// Index of following notification
	NextIdx uint32 `protobuf:"varint,1,opt,name=next_idx,json=nextIdx,proto3" json:"next_idx,omitempty"`
	// Notification data
	Notification         *Notification `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NotificationResponse) Reset()         { *m = NotificationResponse{} }
func (m *NotificationResponse) String() string { return proto.CompactTextString(m) }
func (*NotificationResponse) ProtoMessage()    {}
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffa764aa47256cdb, []int{11}
}

func (m *NotificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationResponse.Unmarshal(m, b)
}
func (m *NotificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationResponse.Marshal(b, m, deterministic)
}
func (m *NotificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationResponse.Merge(m, src)
}
func (m *NotificationResponse) XXX_Size() int {
	return xxx_messageInfo_NotificationResponse.Size(m)
}
func (m *NotificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationResponse proto.InternalMessageInfo

func (m *NotificationResponse) GetNextIdx() uint32 {
	if m != nil {
		return m.NextIdx
	}
	return 0
}

func (m *NotificationResponse) GetNotification() *Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "configurator.Config")
	proto.RegisterType((*Notification)(nil), "configurator.Notification")
	proto.RegisterType((*UpdateRequest)(nil), "configurator.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "configurator.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "configurator.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "configurator.DeleteResponse")
	proto.RegisterType((*GetRequest)(nil), "configurator.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "configurator.GetResponse")
	proto.RegisterType((*DumpRequest)(nil), "configurator.DumpRequest")
	proto.RegisterType((*DumpResponse)(nil), "configurator.DumpResponse")
	proto.RegisterType((*NotificationRequest)(nil), "configurator.NotificationRequest")
	proto.RegisterType((*NotificationResponse)(nil), "configurator.NotificationResponse")
}

func init() {
	proto.RegisterFile("ligato/vpp-agent/api/configurator/configurator.proto", fileDescriptor_ffa764aa47256cdb)
}

var fileDescriptor_ffa764aa47256cdb = []byte{
	// 558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xfd, 0xdc, 0x54, 0xfe, 0xca, 0xb5, 0xf3, 0x37, 0xcd, 0xa2, 0x35, 0x48, 0xc0, 0x6c, 0x28,
	0x12, 0x75, 0x50, 0xdb, 0x05, 0x10, 0xa5, 0x8b, 0x26, 0x52, 0x61, 0x83, 0x84, 0x25, 0x36, 0x2c,
	0x88, 0x5c, 0x7b, 0x12, 0x2c, 0x39, 0x9e, 0x69, 0x3c, 0x8e, 0xd2, 0xf7, 0x61, 0xcb, 0x6b, 0xf1,
	0x1c, 0x68, 0x7e, 0xdc, 0xcc, 0x44, 0xc1, 0x2c, 0x12, 0x79, 0xce, 0x9c, 0x73, 0xe6, 0xdc, 0xb9,
	0x57, 0x03, 0x57, 0x79, 0xb6, 0x88, 0x39, 0x1d, 0xae, 0x19, 0x3b, 0x8f, 0x17, 0xa4, 0xe0, 0xc3,
	0x98, 0x65, 0xc3, 0x84, 0x16, 0xf3, 0x6c, 0x51, 0xad, 0x62, 0x4e, 0x57, 0xd6, 0x22, 0x64, 0x2b,
	0xca, 0x29, 0xf2, 0x4d, 0x2c, 0x78, 0xbd, 0xd7, 0x63, 0x49, 0x53, 0x92, 0x97, 0x02, 0x14, 0x3f,
	0x25, 0x0c, 0xce, 0x9b, 0xa8, 0x79, 0x56, 0x54, 0x1b, 0xf5, 0xaf, 0xe9, 0x97, 0x4d, 0xf4, 0x82,
	0xf0, 0x38, 0xcf, 0x69, 0xf2, 0xf8, 0xa1, 0x44, 0xf8, 0x97, 0x03, 0xee, 0x44, 0xe6, 0x43, 0x21,
	0xc0, 0x9a, 0xb1, 0x99, 0x4a, 0x7b, 0xe2, 0xbc, 0x70, 0xce, 0xbc, 0x8b, 0x6e, 0x28, 0xe2, 0x28,
	0xc2, 0x34, 0xe6, 0x71, 0xf4, 0x64, 0xcd, 0x98, 0xe6, 0x5f, 0x81, 0x2f, 0x8f, 0xaf, 0x15, 0x07,
	0x52, 0xd1, 0x0f, 0x55, 0x26, 0x43, 0xe3, 0x49, 0x44, 0xab, 0xc6, 0xd0, 0xad, 0x23, 0xd4, 0xc2,
	0x96, 0x14, 0x0e, 0xc2, 0xc7, 0x68, 0x86, 0xb6, 0x53, 0x83, 0x0a, 0xc3, 0x3f, 0x1d, 0xf0, 0x3f,
	0x53, 0x9e, 0xcd, 0xb3, 0x24, 0xe6, 0x19, 0x2d, 0xd0, 0x35, 0xf4, 0x44, 0xea, 0xc2, 0xc0, 0x74,
	0xf6, 0xbe, 0xcc, 0x6e, 0x92, 0x3f, 0xfe, 0x17, 0x75, 0xd7, 0x8c, 0x59, 0xfa, 0x29, 0x20, 0x55,
	0x85, 0xe5, 0xa0, 0x6a, 0x39, 0xd6, 0xb5, 0xec, 0x78, 0xf4, 0x25, 0x6a, 0x82, 0x37, 0x1d, 0xf0,
	0x4d, 0x3d, 0xfe, 0x0e, 0xed, 0xaf, 0x2c, 0x8d, 0x39, 0x89, 0xc8, 0x7d, 0x45, 0x4a, 0x8e, 0xde,
	0x80, 0x5b, 0x49, 0x40, 0x87, 0x1b, 0x84, 0xd6, 0xa4, 0xa8, 0xea, 0x22, 0xcd, 0x41, 0xcf, 0xc1,
	0x9b, 0x57, 0x79, 0x3e, 0x5b, 0x91, 0xf2, 0xa1, 0x48, 0x64, 0x9a, 0xa3, 0x08, 0x04, 0x14, 0x49,
	0x04, 0xf7, 0xa0, 0x53, 0xfb, 0x97, 0x8c, 0x16, 0x25, 0xc1, 0x63, 0x68, 0x4f, 0x49, 0x4e, 0xac,
	0x13, 0x53, 0x09, 0x34, 0x9f, 0xa8, 0x38, 0xc2, 0xb0, 0x96, 0x6b, 0x43, 0x1f, 0xe0, 0x96, 0x70,
	0xed, 0x86, 0x47, 0xe0, 0xc9, 0x95, 0xda, 0x14, 0xe6, 0xd6, 0x9c, 0xfc, 0xc5, 0x5c, 0x81, 0xb8,
	0x0d, 0xde, 0xb4, 0x5a, 0xb2, 0xda, 0xeb, 0x1d, 0xf8, 0x6a, 0xa9, 0xcd, 0xce, 0xe0, 0x30, 0xad,
	0x96, 0xac, 0xd1, 0x4a, 0x32, 0xf0, 0x2b, 0x38, 0x36, 0xaf, 0xbd, 0x2e, 0xb5, 0x07, 0xad, 0x2c,
	0xdd, 0x48, 0x7d, 0x3b, 0x12, 0x9f, 0xf8, 0x1e, 0x06, 0x36, 0x51, 0x1f, 0x75, 0x0a, 0x47, 0x05,
	0xd9, 0xf0, 0xd9, 0x96, 0xfe, 0xbf, 0x58, 0x7f, 0x4a, 0x37, 0xe8, 0xda, 0x6e, 0xa1, 0x1e, 0x81,
	0xc0, 0x4e, 0x63, 0x99, 0x5a, 0xfc, 0x8b, 0xdf, 0x07, 0xe0, 0x4f, 0x0c, 0x2e, 0xfa, 0x00, 0xad,
	0x5b, 0xc2, 0xd1, 0x89, 0xed, 0xb0, 0xbd, 0xd3, 0xe0, 0x74, 0xcf, 0x8e, 0xce, 0x39, 0x01, 0x57,
	0xf5, 0x17, 0x3d, 0xb5, 0x49, 0xd6, 0x54, 0x05, 0xcf, 0xf6, 0x6f, 0x6e, 0x4d, 0x54, 0x4f, 0x77,
	0x4d, 0xac, 0x41, 0xd9, 0x35, 0xb1, 0xc7, 0x00, 0x8d, 0xe1, 0x50, 0x34, 0x0b, 0xed, 0x84, 0x35,
	0xfa, 0x19, 0x04, 0xfb, 0xb6, 0xb4, 0xfc, 0x0b, 0xb8, 0xf2, 0xce, 0x1e, 0xd0, 0xcb, 0x86, 0x9b,
	0xd4, 0x46, 0xb8, 0x89, 0xa2, 0x0c, 0xdf, 0x3a, 0x37, 0xa3, 0x6f, 0xef, 0x17, 0x19, 0xff, 0x51,
	0xdd, 0x85, 0x09, 0x5d, 0x0e, 0xff, 0xf9, 0x24, 0x8f, 0xcc, 0xc5, 0x9d, 0x2b, 0x9f, 0xbd, 0xcb,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x08, 0x8d, 0x99, 0xfe, 0xcb, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfiguratorClient is the client API for Configurator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfiguratorClient interface {
	// Get is used for listing desired config.
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// Update is used for updating desired config.
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	// Delete is used for deleting desired config.
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Dump is used for dumping running config.
	Dump(ctx context.Context, in *DumpRequest, opts ...grpc.CallOption) (*DumpResponse, error)
	// Notify is used for subscribing to notifications.
	Notify(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (Configurator_NotifyClient, error)
}

type configuratorClient struct {
	cc *grpc.ClientConn
}

func NewConfiguratorClient(cc *grpc.ClientConn) ConfiguratorClient {
	return &configuratorClient{cc}
}

func (c *configuratorClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/configurator.Configurator/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configuratorClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/configurator.Configurator/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configuratorClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/configurator.Configurator/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configuratorClient) Dump(ctx context.Context, in *DumpRequest, opts ...grpc.CallOption) (*DumpResponse, error) {
	out := new(DumpResponse)
	err := c.cc.Invoke(ctx, "/configurator.Configurator/Dump", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configuratorClient) Notify(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (Configurator_NotifyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Configurator_serviceDesc.Streams[0], "/configurator.Configurator/Notify", opts...)
	if err != nil {
		return nil, err
	}
	x := &configuratorNotifyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Configurator_NotifyClient interface {
	Recv() (*NotificationResponse, error)
	grpc.ClientStream
}

type configuratorNotifyClient struct {
	grpc.ClientStream
}

func (x *configuratorNotifyClient) Recv() (*NotificationResponse, error) {
	m := new(NotificationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConfiguratorServer is the server API for Configurator service.
type ConfiguratorServer interface {
	// Get is used for listing desired config.
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// Update is used for updating desired config.
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	// Delete is used for deleting desired config.
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// Dump is used for dumping running config.
	Dump(context.Context, *DumpRequest) (*DumpResponse, error)
	// Notify is used for subscribing to notifications.
	Notify(*NotificationRequest, Configurator_NotifyServer) error
}

// UnimplementedConfiguratorServer can be embedded to have forward compatible implementations.
type UnimplementedConfiguratorServer struct {
}

func (*UnimplementedConfiguratorServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedConfiguratorServer) Update(ctx context.Context, req *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedConfiguratorServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedConfiguratorServer) Dump(ctx context.Context, req *DumpRequest) (*DumpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dump not implemented")
}
func (*UnimplementedConfiguratorServer) Notify(req *NotificationRequest, srv Configurator_NotifyServer) error {
	return status.Errorf(codes.Unimplemented, "method Notify not implemented")
}

func RegisterConfiguratorServer(s *grpc.Server, srv ConfiguratorServer) {
	s.RegisterService(&_Configurator_serviceDesc, srv)
}

func _Configurator_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configurator.Configurator/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurator_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configurator.Configurator/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurator_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configurator.Configurator/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurator_Dump_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).Dump(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configurator.Configurator/Dump",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).Dump(ctx, req.(*DumpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurator_Notify_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NotificationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConfiguratorServer).Notify(m, &configuratorNotifyServer{stream})
}

type Configurator_NotifyServer interface {
	Send(*NotificationResponse) error
	grpc.ServerStream
}

type configuratorNotifyServer struct {
	grpc.ServerStream
}

func (x *configuratorNotifyServer) Send(m *NotificationResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Configurator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configurator.Configurator",
	HandlerType: (*ConfiguratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Configurator_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Configurator_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Configurator_Delete_Handler,
		},
		{
			MethodName: "Dump",
			Handler:    _Configurator_Dump_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Notify",
			Handler:       _Configurator_Notify_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ligato/vpp-agent/api/configurator/configurator.proto",
}
