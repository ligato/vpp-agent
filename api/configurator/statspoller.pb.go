// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configurator/statspoller.proto

package configurator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	vpp "github.com/ligato/vpp-agent/api/models/vpp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Stats struct {
	// Types that are valid to be assigned to Stats:
	//	*Stats_VppStats
	Stats                isStats_Stats `protobuf_oneof:"stats"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_70355b0e77c713c0, []int{0}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

type isStats_Stats interface {
	isStats_Stats()
}

type Stats_VppStats struct {
	VppStats *vpp.Stats `protobuf:"bytes,1,opt,name=vpp_stats,json=vppStats,proto3,oneof"`
}

func (*Stats_VppStats) isStats_Stats() {}

func (m *Stats) GetStats() isStats_Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *Stats) GetVppStats() *vpp.Stats {
	if x, ok := m.GetStats().(*Stats_VppStats); ok {
		return x.VppStats
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Stats) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Stats_VppStats)(nil),
	}
}

type PollStatsRequest struct {
	// PeriodSec defines polling period (in seconds)
	PeriodSec            uint32   `protobuf:"varint,1,opt,name=period_sec,json=periodSec,proto3" json:"period_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollStatsRequest) Reset()         { *m = PollStatsRequest{} }
func (m *PollStatsRequest) String() string { return proto.CompactTextString(m) }
func (*PollStatsRequest) ProtoMessage()    {}
func (*PollStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70355b0e77c713c0, []int{1}
}

func (m *PollStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollStatsRequest.Unmarshal(m, b)
}
func (m *PollStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollStatsRequest.Marshal(b, m, deterministic)
}
func (m *PollStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollStatsRequest.Merge(m, src)
}
func (m *PollStatsRequest) XXX_Size() int {
	return xxx_messageInfo_PollStatsRequest.Size(m)
}
func (m *PollStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PollStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PollStatsRequest proto.InternalMessageInfo

func (m *PollStatsRequest) GetPeriodSec() uint32 {
	if m != nil {
		return m.PeriodSec
	}
	return 0
}

type PollStatsResponse struct {
	PollSeq              uint32   `protobuf:"varint,1,opt,name=poll_seq,json=pollSeq,proto3" json:"poll_seq,omitempty"`
	Stats                *Stats   `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollStatsResponse) Reset()         { *m = PollStatsResponse{} }
func (m *PollStatsResponse) String() string { return proto.CompactTextString(m) }
func (*PollStatsResponse) ProtoMessage()    {}
func (*PollStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70355b0e77c713c0, []int{2}
}

func (m *PollStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollStatsResponse.Unmarshal(m, b)
}
func (m *PollStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollStatsResponse.Marshal(b, m, deterministic)
}
func (m *PollStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollStatsResponse.Merge(m, src)
}
func (m *PollStatsResponse) XXX_Size() int {
	return xxx_messageInfo_PollStatsResponse.Size(m)
}
func (m *PollStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PollStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PollStatsResponse proto.InternalMessageInfo

func (m *PollStatsResponse) GetPollSeq() uint32 {
	if m != nil {
		return m.PollSeq
	}
	return 0
}

func (m *PollStatsResponse) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func init() {
	proto.RegisterType((*Stats)(nil), "configurator.Stats")
	proto.RegisterType((*PollStatsRequest)(nil), "configurator.PollStatsRequest")
	proto.RegisterType((*PollStatsResponse)(nil), "configurator.PollStatsResponse")
}

func init() { proto.RegisterFile("configurator/statspoller.proto", fileDescriptor_70355b0e77c713c0) }

var fileDescriptor_70355b0e77c713c0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x50, 0x4d, 0x4f, 0x83, 0x40,
	0x10, 0x6d, 0x4d, 0x6a, 0xcb, 0x54, 0x13, 0x5d, 0x3d, 0xd4, 0x26, 0x56, 0xc3, 0xc9, 0x1e, 0x04,
	0xad, 0x27, 0xc3, 0xad, 0x27, 0x8f, 0x04, 0x4e, 0x7a, 0x21, 0x94, 0x8e, 0x48, 0xb2, 0x65, 0x06,
	0x76, 0xe1, 0xf7, 0x9b, 0x5d, 0x1a, 0xb3, 0x9a, 0x78, 0x20, 0x61, 0xe6, 0x7d, 0xcc, 0xdb, 0x07,
	0xab, 0x82, 0xea, 0xcf, 0xaa, 0xec, 0xda, 0x5c, 0x53, 0x1b, 0x2a, 0x9d, 0x6b, 0xc5, 0x24, 0x25,
	0xb6, 0x01, 0xb7, 0xa4, 0x49, 0x9c, 0xb9, 0xf8, 0xf2, 0xfa, 0x40, 0x7b, 0x94, 0x2a, 0xec, 0x99,
	0xcd, 0x37, 0x70, 0xfc, 0x08, 0x26, 0xa9, 0x11, 0x8a, 0x35, 0x78, 0x3d, 0x73, 0x66, 0x5d, 0x16,
	0xe3, 0xfb, 0xf1, 0xc3, 0x7c, 0x03, 0x81, 0xe1, 0x59, 0xf8, 0x6d, 0x94, 0xcc, 0x7a, 0x66, 0xfb,
	0xbf, 0x9d, 0xc2, 0xc4, 0xd2, 0xfc, 0x67, 0xb8, 0x88, 0x49, 0x4a, 0xbb, 0x4d, 0xb0, 0xe9, 0x50,
	0x69, 0x71, 0x0b, 0xc0, 0xd8, 0x56, 0xb4, 0xcf, 0x14, 0x16, 0xd6, 0xe8, 0x3c, 0xf1, 0x86, 0x4d,
	0x8a, 0x85, 0xff, 0x0e, 0x97, 0x8e, 0x44, 0x31, 0xd5, 0x0a, 0xc5, 0x0d, 0xcc, 0x4c, 0xf0, 0x4c,
	0x61, 0x73, 0x54, 0x4c, 0xcd, 0x9c, 0x62, 0x23, 0xd6, 0xc7, 0x5b, 0x8b, 0x13, 0x1b, 0xe9, 0x2a,
	0x70, 0xdf, 0x34, 0x64, 0x4b, 0x06, 0xc6, 0x26, 0x83, 0xb9, 0x9d, 0x63, 0xdb, 0x81, 0x88, 0xc1,
	0xfb, 0xb9, 0x24, 0x56, 0xbf, 0x75, 0x7f, 0x53, 0x2f, 0xef, 0xfe, 0xc5, 0x87, 0x88, 0xfe, 0xe8,
	0x69, 0xbc, 0x8d, 0x3e, 0x5e, 0xcb, 0x4a, 0x7f, 0x75, 0xbb, 0xa0, 0xa0, 0x43, 0x28, 0xab, 0x32,
	0xd7, 0x64, 0xaa, 0x7c, 0xcc, 0x4b, 0xac, 0x75, 0x98, 0x73, 0x15, 0xba, 0x2e, 0x91, 0x3b, 0xec,
	0x4e, 0x6d, 0xdf, 0x2f, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x44, 0x67, 0x85, 0x32, 0xb5, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatsPollerClient is the client API for StatsPoller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsPollerClient interface {
	// PollStats is used for polling metrics using poll period.
	PollStats(ctx context.Context, in *PollStatsRequest, opts ...grpc.CallOption) (StatsPoller_PollStatsClient, error)
}

type statsPollerClient struct {
	cc *grpc.ClientConn
}

func NewStatsPollerClient(cc *grpc.ClientConn) StatsPollerClient {
	return &statsPollerClient{cc}
}

func (c *statsPollerClient) PollStats(ctx context.Context, in *PollStatsRequest, opts ...grpc.CallOption) (StatsPoller_PollStatsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StatsPoller_serviceDesc.Streams[0], "/configurator.StatsPoller/PollStats", opts...)
	if err != nil {
		return nil, err
	}
	x := &statsPollerPollStatsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StatsPoller_PollStatsClient interface {
	Recv() (*PollStatsResponse, error)
	grpc.ClientStream
}

type statsPollerPollStatsClient struct {
	grpc.ClientStream
}

func (x *statsPollerPollStatsClient) Recv() (*PollStatsResponse, error) {
	m := new(PollStatsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StatsPollerServer is the server API for StatsPoller service.
type StatsPollerServer interface {
	// PollStats is used for polling metrics using poll period.
	PollStats(*PollStatsRequest, StatsPoller_PollStatsServer) error
}

// UnimplementedStatsPollerServer can be embedded to have forward compatible implementations.
type UnimplementedStatsPollerServer struct {
}

func (*UnimplementedStatsPollerServer) PollStats(req *PollStatsRequest, srv StatsPoller_PollStatsServer) error {
	return status.Errorf(codes.Unimplemented, "method PollStats not implemented")
}

func RegisterStatsPollerServer(s *grpc.Server, srv StatsPollerServer) {
	s.RegisterService(&_StatsPoller_serviceDesc, srv)
}

func _StatsPoller_PollStats_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PollStatsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StatsPollerServer).PollStats(m, &statsPollerPollStatsServer{stream})
}

type StatsPoller_PollStatsServer interface {
	Send(*PollStatsResponse) error
	grpc.ServerStream
}

type statsPollerPollStatsServer struct {
	grpc.ServerStream
}

func (x *statsPollerPollStatsServer) Send(m *PollStatsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _StatsPoller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configurator.StatsPoller",
	HandlerType: (*StatsPollerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PollStats",
			Handler:       _StatsPoller_PollStats_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "configurator/statspoller.proto",
}
