// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: models/vpp/l3/route.proto

package vpp_l3

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Route_RouteType int32

const (
	Route_INTRA_VRF Route_RouteType = 0
	Route_INTER_VRF Route_RouteType = 1
	Route_DROP      Route_RouteType = 2
)

var Route_RouteType_name = map[int32]string{
	0: "INTRA_VRF",
	1: "INTER_VRF",
	2: "DROP",
}

var Route_RouteType_value = map[string]int32{
	"INTRA_VRF": 0,
	"INTER_VRF": 1,
	"DROP":      2,
}

func (x Route_RouteType) String() string {
	return proto.EnumName(Route_RouteType_name, int32(x))
}

func (Route_RouteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2da88784f3005a3f, []int{0, 0}
}

type Route struct {
	Type              Route_RouteType `protobuf:"varint,10,opt,name=type,proto3,enum=vpp.l3.Route_RouteType" json:"type,omitempty"`
	VrfId             uint32          `protobuf:"varint,1,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	DstNetwork        string          `protobuf:"bytes,3,opt,name=dst_network,json=dstNetwork,proto3" json:"dst_network,omitempty"`
	NextHopAddr       string          `protobuf:"bytes,4,opt,name=next_hop_addr,json=nextHopAddr,proto3" json:"next_hop_addr,omitempty"`
	OutgoingInterface string          `protobuf:"bytes,5,opt,name=outgoing_interface,json=outgoingInterface,proto3" json:"outgoing_interface,omitempty"`
	Weight            uint32          `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Preference        uint32          `protobuf:"varint,7,opt,name=preference,proto3" json:"preference,omitempty"`
	// (a poor man's primary and backup)
	ViaVrfId             uint32   `protobuf:"varint,8,opt,name=via_vrf_id,json=viaVrfId,proto3" json:"via_vrf_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_2da88784f3005a3f, []int{0}
}
func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetType() Route_RouteType {
	if m != nil {
		return m.Type
	}
	return Route_INTRA_VRF
}

func (m *Route) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func (m *Route) GetDstNetwork() string {
	if m != nil {
		return m.DstNetwork
	}
	return ""
}

func (m *Route) GetNextHopAddr() string {
	if m != nil {
		return m.NextHopAddr
	}
	return ""
}

func (m *Route) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *Route) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Route) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *Route) GetViaVrfId() uint32 {
	if m != nil {
		return m.ViaVrfId
	}
	return 0
}

func (*Route) XXX_MessageName() string {
	return "vpp.l3.Route"
}
func init() {
	proto.RegisterEnum("vpp.l3.Route_RouteType", Route_RouteType_name, Route_RouteType_value)
	proto.RegisterType((*Route)(nil), "vpp.l3.Route")
}

func init() { proto.RegisterFile("models/vpp/l3/route.proto", fileDescriptor_2da88784f3005a3f) }

var fileDescriptor_2da88784f3005a3f = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x41, 0x4f, 0xfa, 0x30,
	0x18, 0xc6, 0xff, 0xe3, 0x0f, 0x13, 0x5e, 0x82, 0xc1, 0x26, 0xea, 0x34, 0x06, 0x09, 0x27, 0x12,
	0xc3, 0x96, 0x38, 0x4f, 0x7a, 0xc2, 0xa8, 0x91, 0x0b, 0x9a, 0x86, 0x70, 0xf0, 0xd2, 0x0c, 0xda,
	0x95, 0xc6, 0xb1, 0x36, 0xa5, 0x1b, 0xf2, 0x0d, 0x8d, 0x5f, 0xc3, 0x2f, 0x62, 0xd6, 0x81, 0xc1,
	0x4b, 0xd3, 0xe7, 0xfd, 0x3d, 0x7d, 0xd3, 0x27, 0x0f, 0x9c, 0x2d, 0x25, 0x65, 0xc9, 0x2a, 0xc8,
	0x95, 0x0a, 0x92, 0x30, 0xd0, 0x32, 0x33, 0xcc, 0x57, 0x5a, 0x1a, 0x89, 0xdc, 0x5c, 0x29, 0x3f,
	0x09, 0xcf, 0x07, 0x5c, 0x98, 0x45, 0x36, 0xf3, 0xe7, 0x72, 0x19, 0x70, 0xc9, 0x65, 0x60, 0xf1,
	0x2c, 0x8b, 0xad, 0xb2, 0xc2, 0xde, 0xca, 0x67, 0xbd, 0xaf, 0x0a, 0xd4, 0x70, 0xb1, 0x06, 0x5d,
	0x41, 0xd5, 0x6c, 0x14, 0xf3, 0xa0, 0xeb, 0xf4, 0x0f, 0xaf, 0x4f, 0xfd, 0x72, 0x9f, 0x6f, 0x61,
	0x79, 0x4e, 0x36, 0x8a, 0x61, 0x6b, 0x42, 0xc7, 0xe0, 0xe6, 0x3a, 0x26, 0x82, 0x7a, 0x4e, 0xd7,
	0xe9, 0xb7, 0x70, 0x2d, 0xd7, 0xf1, 0x88, 0xa2, 0x4b, 0x68, 0xd2, 0x95, 0x21, 0x29, 0x33, 0x6b,
	0xa9, 0xdf, 0xbd, 0xff, 0x5d, 0xa7, 0xdf, 0xc0, 0x40, 0x57, 0x66, 0x5c, 0x4e, 0x50, 0x0f, 0x5a,
	0x29, 0xfb, 0x30, 0x64, 0x21, 0x15, 0x89, 0x28, 0xd5, 0x5e, 0xd5, 0x5a, 0x9a, 0xc5, 0xf0, 0x59,
	0xaa, 0x21, 0xa5, 0x1a, 0x0d, 0x00, 0xc9, 0xcc, 0x70, 0x29, 0x52, 0x4e, 0x44, 0x6a, 0x98, 0x8e,
	0xa3, 0x39, 0xf3, 0x6a, 0xd6, 0x78, 0xb4, 0x23, 0xa3, 0x1d, 0x40, 0x27, 0xe0, 0xae, 0x99, 0xe0,
	0x0b, 0xe3, 0xb9, 0xf6, 0x2b, 0x5b, 0x85, 0x3a, 0x00, 0x4a, 0xb3, 0x98, 0x69, 0x96, 0xce, 0x99,
	0x77, 0x60, 0xd9, 0xde, 0x04, 0x5d, 0x00, 0xe4, 0x22, 0x22, 0xdb, 0x18, 0x75, 0xcb, 0xeb, 0xb9,
	0x88, 0xa6, 0x45, 0x92, 0x5e, 0x08, 0x8d, 0xdf, 0xcc, 0xa8, 0x05, 0x8d, 0xd1, 0x78, 0x82, 0x87,
	0x64, 0x8a, 0x9f, 0xda, 0xff, 0xb6, 0xf2, 0x11, 0x5b, 0xe9, 0xa0, 0x3a, 0x54, 0x1f, 0xf0, 0xcb,
	0x6b, 0xbb, 0x72, 0x7f, 0xfb, 0xf9, 0xdd, 0x71, 0xde, 0x6e, 0xf6, 0x1a, 0x48, 0x04, 0x8f, 0x8c,
	0x2c, 0xfa, 0x1a, 0x44, 0x9c, 0xa5, 0x26, 0x88, 0x94, 0x08, 0xfe, 0x94, 0x78, 0x97, 0x2b, 0x45,
	0x92, 0x70, 0xe6, 0xda, 0x3e, 0xc2, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0x8a, 0x88, 0x2f,
	0xe3, 0x01, 0x00, 0x00,
}
