// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: models/vpp/l3/arp.proto

package vpp_l3

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ARPEntry struct {
	Interface            string   `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	IpAddress            string   `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	PhysAddress          string   `protobuf:"bytes,3,opt,name=phys_address,json=physAddress,proto3" json:"phys_address,omitempty"`
	Static               bool     `protobuf:"varint,4,opt,name=static,proto3" json:"static,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ARPEntry) Reset()         { *m = ARPEntry{} }
func (m *ARPEntry) String() string { return proto.CompactTextString(m) }
func (*ARPEntry) ProtoMessage()    {}
func (*ARPEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_3384c7dc1e772a24, []int{0}
}
func (m *ARPEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ARPEntry.Unmarshal(m, b)
}
func (m *ARPEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ARPEntry.Marshal(b, m, deterministic)
}
func (m *ARPEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ARPEntry.Merge(m, src)
}
func (m *ARPEntry) XXX_Size() int {
	return xxx_messageInfo_ARPEntry.Size(m)
}
func (m *ARPEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ARPEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ARPEntry proto.InternalMessageInfo

func (m *ARPEntry) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *ARPEntry) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *ARPEntry) GetPhysAddress() string {
	if m != nil {
		return m.PhysAddress
	}
	return ""
}

func (m *ARPEntry) GetStatic() bool {
	if m != nil {
		return m.Static
	}
	return false
}

func (*ARPEntry) XXX_MessageName() string {
	return "vpp.l3.ARPEntry"
}
func init() {
	proto.RegisterType((*ARPEntry)(nil), "vpp.l3.ARPEntry")
}

func init() { proto.RegisterFile("models/vpp/l3/arp.proto", fileDescriptor_3384c7dc1e772a24) }

var fileDescriptor_3384c7dc1e772a24 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0xcd, 0x4f, 0x49,
	0xcd, 0x29, 0xd6, 0x2f, 0x2b, 0x28, 0xd0, 0xcf, 0x31, 0xd6, 0x4f, 0x2c, 0x2a, 0xd0, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0x2b, 0x28, 0xd0, 0xcb, 0x31, 0x96, 0xd2, 0x4d, 0xcf, 0x2c,
	0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0x4b, 0x27,
	0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0xa6, 0xd4, 0xc4, 0xc8, 0xc5, 0xe1, 0x18,
	0x14, 0xe0, 0x9a, 0x57, 0x52, 0x54, 0x29, 0x24, 0xc3, 0xc5, 0x99, 0x99, 0x57, 0x92, 0x5a, 0x94,
	0x96, 0x98, 0x9c, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x84, 0x10, 0x10, 0x92, 0xe5, 0xe2,
	0xca, 0x2c, 0x88, 0x4f, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x96, 0x60, 0x82, 0x4a, 0x17, 0x38,
	0x42, 0x04, 0x84, 0x14, 0xb9, 0x78, 0x0a, 0x32, 0x2a, 0x8b, 0xe1, 0x0a, 0x98, 0xc1, 0x0a, 0xb8,
	0x41, 0x62, 0x30, 0x25, 0x62, 0x5c, 0x6c, 0xc5, 0x25, 0x89, 0x25, 0x99, 0xc9, 0x12, 0x2c, 0x0a,
	0x8c, 0x1a, 0x1c, 0x41, 0x50, 0x9e, 0x93, 0xd5, 0x89, 0xc7, 0x72, 0x8c, 0x51, 0x26, 0x48, 0x2e,
	0xcf, 0xc9, 0x4c, 0x4f, 0x2c, 0xc9, 0x07, 0xf9, 0x52, 0x37, 0x31, 0x3d, 0x35, 0xaf, 0x44, 0x3f,
	0xb1, 0x20, 0x53, 0x1f, 0xc5, 0xeb, 0xd6, 0x65, 0x05, 0x05, 0xf1, 0x39, 0xc6, 0x49, 0x6c, 0x60,
	0x7f, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x35, 0x78, 0x04, 0xc0, 0x19, 0x01, 0x00, 0x00,
}
