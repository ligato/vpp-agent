// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: models/vpp/abf/abf.proto

package vpp_abf // import "github.com/ligato/vpp-agent/api/models/vpp/abf"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ACL based forwarding
type ABF struct {
	Index                string                   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	AclName              string                   `protobuf:"bytes,2,opt,name=acl_name,json=aclName,proto3" json:"acl_name,omitempty"`
	AttachedInterfaces   []*ABF_AttachedInterface `protobuf:"bytes,3,rep,name=attached_interfaces,json=attachedInterfaces,proto3" json:"attached_interfaces,omitempty"`
	ForwardingPaths      []*ABF_ForwardingPath    `protobuf:"bytes,4,rep,name=forwarding_paths,json=forwardingPaths,proto3" json:"forwarding_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ABF) Reset()         { *m = ABF{} }
func (m *ABF) String() string { return proto.CompactTextString(m) }
func (*ABF) ProtoMessage()    {}
func (*ABF) Descriptor() ([]byte, []int) {
	return fileDescriptor_abf_30df076d7b46d506, []int{0}
}
func (m *ABF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ABF.Unmarshal(m, b)
}
func (m *ABF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ABF.Marshal(b, m, deterministic)
}
func (dst *ABF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ABF.Merge(dst, src)
}
func (m *ABF) XXX_Size() int {
	return xxx_messageInfo_ABF.Size(m)
}
func (m *ABF) XXX_DiscardUnknown() {
	xxx_messageInfo_ABF.DiscardUnknown(m)
}

var xxx_messageInfo_ABF proto.InternalMessageInfo

func (m *ABF) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *ABF) GetAclName() string {
	if m != nil {
		return m.AclName
	}
	return ""
}

func (m *ABF) GetAttachedInterfaces() []*ABF_AttachedInterface {
	if m != nil {
		return m.AttachedInterfaces
	}
	return nil
}

func (m *ABF) GetForwardingPaths() []*ABF_ForwardingPath {
	if m != nil {
		return m.ForwardingPaths
	}
	return nil
}

func (*ABF) XXX_MessageName() string {
	return "vpp.abf.ABF"
}

// List of interfaces attached to the ABF
type ABF_AttachedInterface struct {
	InputInterface       string   `protobuf:"bytes,1,opt,name=input_interface,json=inputInterface,proto3" json:"input_interface,omitempty"`
	Priority             uint32   `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	IsIpv6               bool     `protobuf:"varint,3,opt,name=is_ipv6,json=isIpv6,proto3" json:"is_ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ABF_AttachedInterface) Reset()         { *m = ABF_AttachedInterface{} }
func (m *ABF_AttachedInterface) String() string { return proto.CompactTextString(m) }
func (*ABF_AttachedInterface) ProtoMessage()    {}
func (*ABF_AttachedInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_abf_30df076d7b46d506, []int{0, 0}
}
func (m *ABF_AttachedInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ABF_AttachedInterface.Unmarshal(m, b)
}
func (m *ABF_AttachedInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ABF_AttachedInterface.Marshal(b, m, deterministic)
}
func (dst *ABF_AttachedInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ABF_AttachedInterface.Merge(dst, src)
}
func (m *ABF_AttachedInterface) XXX_Size() int {
	return xxx_messageInfo_ABF_AttachedInterface.Size(m)
}
func (m *ABF_AttachedInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_ABF_AttachedInterface.DiscardUnknown(m)
}

var xxx_messageInfo_ABF_AttachedInterface proto.InternalMessageInfo

func (m *ABF_AttachedInterface) GetInputInterface() string {
	if m != nil {
		return m.InputInterface
	}
	return ""
}

func (m *ABF_AttachedInterface) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *ABF_AttachedInterface) GetIsIpv6() bool {
	if m != nil {
		return m.IsIpv6
	}
	return false
}

func (*ABF_AttachedInterface) XXX_MessageName() string {
	return "vpp.abf.ABF.AttachedInterface"
}

// List of forwarding paths added to the ABF policy (via)
type ABF_ForwardingPath struct {
	NextHopIp            string                      `protobuf:"bytes,1,opt,name=next_hop_ip,json=nextHopIp,proto3" json:"next_hop_ip,omitempty"`
	InterfaceName        string                      `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	Vrf                  uint32                      `protobuf:"varint,3,opt,name=vrf,proto3" json:"vrf,omitempty"`
	Weight               uint32                      `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Preference           uint32                      `protobuf:"varint,5,opt,name=preference,proto3" json:"preference,omitempty"`
	Afi                  uint32                      `protobuf:"varint,6,opt,name=afi,proto3" json:"afi,omitempty"`
	NextHopId            uint32                      `protobuf:"varint,7,opt,name=next_hop_id,json=nextHopId,proto3" json:"next_hop_id,omitempty"`
	RpfId                uint32                      `protobuf:"varint,8,opt,name=rpf_id,json=rpfId,proto3" json:"rpf_id,omitempty"`
	ViaLabel             uint32                      `protobuf:"varint,9,opt,name=via_label,json=viaLabel,proto3" json:"via_label,omitempty"`
	Local                bool                        `protobuf:"varint,10,opt,name=local,proto3" json:"local,omitempty"`
	Drop                 bool                        `protobuf:"varint,11,opt,name=drop,proto3" json:"drop,omitempty"`
	UdpEncap             bool                        `protobuf:"varint,12,opt,name=udp_encap,json=udpEncap,proto3" json:"udp_encap,omitempty"`
	Unreachable          bool                        `protobuf:"varint,13,opt,name=unreachable,proto3" json:"unreachable,omitempty"`
	Prohibit             bool                        `protobuf:"varint,14,opt,name=prohibit,proto3" json:"prohibit,omitempty"`
	ResolveHost          bool                        `protobuf:"varint,15,opt,name=resolve_host,json=resolveHost,proto3" json:"resolve_host,omitempty"`
	ResolveAttached      bool                        `protobuf:"varint,16,opt,name=resolve_attached,json=resolveAttached,proto3" json:"resolve_attached,omitempty"`
	Dvr                  bool                        `protobuf:"varint,17,opt,name=dvr,proto3" json:"dvr,omitempty"`
	SourceLookup         bool                        `protobuf:"varint,18,opt,name=source_lookup,json=sourceLookup,proto3" json:"source_lookup,omitempty"`
	InterfaceRx          bool                        `protobuf:"varint,19,opt,name=interface_rx,json=interfaceRx,proto3" json:"interface_rx,omitempty"`
	LabelStack           []*ABF_ForwardingPath_Label `protobuf:"bytes,20,rep,name=label_stack,json=labelStack,proto3" json:"label_stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ABF_ForwardingPath) Reset()         { *m = ABF_ForwardingPath{} }
func (m *ABF_ForwardingPath) String() string { return proto.CompactTextString(m) }
func (*ABF_ForwardingPath) ProtoMessage()    {}
func (*ABF_ForwardingPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_abf_30df076d7b46d506, []int{0, 1}
}
func (m *ABF_ForwardingPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ABF_ForwardingPath.Unmarshal(m, b)
}
func (m *ABF_ForwardingPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ABF_ForwardingPath.Marshal(b, m, deterministic)
}
func (dst *ABF_ForwardingPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ABF_ForwardingPath.Merge(dst, src)
}
func (m *ABF_ForwardingPath) XXX_Size() int {
	return xxx_messageInfo_ABF_ForwardingPath.Size(m)
}
func (m *ABF_ForwardingPath) XXX_DiscardUnknown() {
	xxx_messageInfo_ABF_ForwardingPath.DiscardUnknown(m)
}

var xxx_messageInfo_ABF_ForwardingPath proto.InternalMessageInfo

func (m *ABF_ForwardingPath) GetNextHopIp() string {
	if m != nil {
		return m.NextHopIp
	}
	return ""
}

func (m *ABF_ForwardingPath) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *ABF_ForwardingPath) GetVrf() uint32 {
	if m != nil {
		return m.Vrf
	}
	return 0
}

func (m *ABF_ForwardingPath) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ABF_ForwardingPath) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *ABF_ForwardingPath) GetAfi() uint32 {
	if m != nil {
		return m.Afi
	}
	return 0
}

func (m *ABF_ForwardingPath) GetNextHopId() uint32 {
	if m != nil {
		return m.NextHopId
	}
	return 0
}

func (m *ABF_ForwardingPath) GetRpfId() uint32 {
	if m != nil {
		return m.RpfId
	}
	return 0
}

func (m *ABF_ForwardingPath) GetViaLabel() uint32 {
	if m != nil {
		return m.ViaLabel
	}
	return 0
}

func (m *ABF_ForwardingPath) GetLocal() bool {
	if m != nil {
		return m.Local
	}
	return false
}

func (m *ABF_ForwardingPath) GetDrop() bool {
	if m != nil {
		return m.Drop
	}
	return false
}

func (m *ABF_ForwardingPath) GetUdpEncap() bool {
	if m != nil {
		return m.UdpEncap
	}
	return false
}

func (m *ABF_ForwardingPath) GetUnreachable() bool {
	if m != nil {
		return m.Unreachable
	}
	return false
}

func (m *ABF_ForwardingPath) GetProhibit() bool {
	if m != nil {
		return m.Prohibit
	}
	return false
}

func (m *ABF_ForwardingPath) GetResolveHost() bool {
	if m != nil {
		return m.ResolveHost
	}
	return false
}

func (m *ABF_ForwardingPath) GetResolveAttached() bool {
	if m != nil {
		return m.ResolveAttached
	}
	return false
}

func (m *ABF_ForwardingPath) GetDvr() bool {
	if m != nil {
		return m.Dvr
	}
	return false
}

func (m *ABF_ForwardingPath) GetSourceLookup() bool {
	if m != nil {
		return m.SourceLookup
	}
	return false
}

func (m *ABF_ForwardingPath) GetInterfaceRx() bool {
	if m != nil {
		return m.InterfaceRx
	}
	return false
}

func (m *ABF_ForwardingPath) GetLabelStack() []*ABF_ForwardingPath_Label {
	if m != nil {
		return m.LabelStack
	}
	return nil
}

func (*ABF_ForwardingPath) XXX_MessageName() string {
	return "vpp.abf.ABF.ForwardingPath"
}

type ABF_ForwardingPath_Label struct {
	IsUniform            bool     `protobuf:"varint,1,opt,name=IsUniform,proto3" json:"IsUniform,omitempty"`
	Label                uint32   `protobuf:"varint,2,opt,name=Label,proto3" json:"Label,omitempty"`
	TTL                  uint32   `protobuf:"varint,3,opt,name=TTL,proto3" json:"TTL,omitempty"`
	Exp                  uint32   `protobuf:"varint,4,opt,name=Exp,proto3" json:"Exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ABF_ForwardingPath_Label) Reset()         { *m = ABF_ForwardingPath_Label{} }
func (m *ABF_ForwardingPath_Label) String() string { return proto.CompactTextString(m) }
func (*ABF_ForwardingPath_Label) ProtoMessage()    {}
func (*ABF_ForwardingPath_Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_abf_30df076d7b46d506, []int{0, 1, 0}
}
func (m *ABF_ForwardingPath_Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ABF_ForwardingPath_Label.Unmarshal(m, b)
}
func (m *ABF_ForwardingPath_Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ABF_ForwardingPath_Label.Marshal(b, m, deterministic)
}
func (dst *ABF_ForwardingPath_Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ABF_ForwardingPath_Label.Merge(dst, src)
}
func (m *ABF_ForwardingPath_Label) XXX_Size() int {
	return xxx_messageInfo_ABF_ForwardingPath_Label.Size(m)
}
func (m *ABF_ForwardingPath_Label) XXX_DiscardUnknown() {
	xxx_messageInfo_ABF_ForwardingPath_Label.DiscardUnknown(m)
}

var xxx_messageInfo_ABF_ForwardingPath_Label proto.InternalMessageInfo

func (m *ABF_ForwardingPath_Label) GetIsUniform() bool {
	if m != nil {
		return m.IsUniform
	}
	return false
}

func (m *ABF_ForwardingPath_Label) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *ABF_ForwardingPath_Label) GetTTL() uint32 {
	if m != nil {
		return m.TTL
	}
	return 0
}

func (m *ABF_ForwardingPath_Label) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (*ABF_ForwardingPath_Label) XXX_MessageName() string {
	return "vpp.abf.ABF.ForwardingPath.Label"
}
func init() {
	proto.RegisterType((*ABF)(nil), "vpp.abf.ABF")
	proto.RegisterType((*ABF_AttachedInterface)(nil), "vpp.abf.ABF.AttachedInterface")
	proto.RegisterType((*ABF_ForwardingPath)(nil), "vpp.abf.ABF.ForwardingPath")
	proto.RegisterType((*ABF_ForwardingPath_Label)(nil), "vpp.abf.ABF.ForwardingPath.Label")
}

func init() { proto.RegisterFile("models/vpp/abf/abf.proto", fileDescriptor_abf_30df076d7b46d506) }

var fileDescriptor_abf_30df076d7b46d506 = []byte{
	// 675 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcd, 0x6e, 0xdb, 0x38,
	0x10, 0x86, 0xd7, 0xf1, 0xdf, 0x38, 0xfe, 0x09, 0x93, 0xdd, 0xe5, 0x3a, 0x0b, 0xc3, 0xd9, 0xc5,
	0x62, 0xd3, 0x43, 0x6c, 0xa0, 0x05, 0x72, 0x69, 0x2f, 0x31, 0x10, 0x23, 0x06, 0x8c, 0xb6, 0x50,
	0xdd, 0x4b, 0x2f, 0x02, 0x25, 0x51, 0x16, 0x11, 0x59, 0x64, 0x29, 0x4a, 0x71, 0x5f, 0xa6, 0xcf,
	0xd3, 0x57, 0xe8, 0xb9, 0x2f, 0x52, 0x70, 0x24, 0xff, 0xb5, 0x40, 0x0f, 0x02, 0xe6, 0xfb, 0xbe,
	0x99, 0xe1, 0x68, 0xf8, 0x81, 0x40, 0xd7, 0x32, 0xe0, 0x71, 0x3a, 0xc9, 0x95, 0x9a, 0x30, 0x2f,
	0xb4, 0xdf, 0x58, 0x69, 0x69, 0x24, 0x69, 0xe4, 0x4a, 0x8d, 0x99, 0x17, 0x0e, 0x6e, 0x56, 0xc2,
	0x44, 0x99, 0x37, 0xf6, 0xe5, 0x7a, 0xb2, 0x92, 0x2b, 0x39, 0x41, 0xdd, 0xcb, 0x42, 0x44, 0x08,
	0x30, 0x2a, 0xea, 0xfe, 0xf9, 0xdc, 0x84, 0xea, 0xdd, 0x74, 0x46, 0x2e, 0xa0, 0x26, 0x92, 0x80,
	0x6f, 0x68, 0x65, 0x54, 0xb9, 0x6e, 0x39, 0x05, 0x20, 0x7f, 0x41, 0x93, 0xf9, 0xb1, 0x9b, 0xb0,
	0x35, 0xa7, 0xbf, 0xa1, 0xd0, 0x60, 0x7e, 0xfc, 0x9a, 0xad, 0x39, 0x79, 0x03, 0xe7, 0xcc, 0x18,
	0xe6, 0x47, 0x3c, 0x70, 0x45, 0x62, 0xb8, 0x0e, 0x99, 0xcf, 0x53, 0x5a, 0x1d, 0x55, 0xaf, 0xdb,
	0xcf, 0x87, 0xe3, 0x72, 0x9c, 0xf1, 0xdd, 0x74, 0x36, 0xbe, 0x2b, 0xf3, 0xe6, 0xdb, 0x34, 0x87,
	0xb0, 0x1f, 0xa9, 0x94, 0xcc, 0xa0, 0x1f, 0x4a, 0xfd, 0xc4, 0x74, 0x20, 0x92, 0x95, 0xab, 0x98,
	0x89, 0x52, 0x7a, 0x82, 0xdd, 0x2e, 0x8f, 0xba, 0xcd, 0x76, 0x49, 0x6f, 0x99, 0x89, 0x9c, 0x5e,
	0x78, 0x84, 0xd3, 0xc1, 0x47, 0x38, 0xfb, 0xe9, 0x40, 0xf2, 0x3f, 0xf4, 0x44, 0xa2, 0x32, 0xb3,
	0x1f, 0xb5, 0xfc, 0xd1, 0x2e, 0xd2, 0xfb, 0xc4, 0x01, 0x34, 0x95, 0x16, 0x52, 0x0b, 0xf3, 0x09,
	0xff, 0xb8, 0xe3, 0xec, 0x30, 0xf9, 0x13, 0x1a, 0x22, 0x75, 0x85, 0xca, 0x6f, 0x69, 0x75, 0x54,
	0xb9, 0x6e, 0x3a, 0x75, 0x91, 0xce, 0x55, 0x7e, 0x3b, 0xf8, 0x5a, 0x83, 0xee, 0xf1, 0x58, 0x64,
	0x08, 0xed, 0x84, 0x6f, 0x8c, 0x1b, 0x49, 0xe5, 0x0a, 0x55, 0x1e, 0xd6, 0xb2, 0xd4, 0x83, 0x54,
	0x73, 0x45, 0xfe, 0x83, 0xee, 0x6e, 0x94, 0xc3, 0xfd, 0x76, 0x76, 0x2c, 0x6e, 0xb9, 0x0f, 0xd5,
	0x5c, 0x87, 0x78, 0x5c, 0xc7, 0xb1, 0x21, 0xf9, 0x03, 0xea, 0x4f, 0x5c, 0xac, 0x22, 0x43, 0x4f,
	0x90, 0x2c, 0x11, 0x19, 0x02, 0x28, 0xcd, 0x43, 0xae, 0x79, 0xe2, 0x73, 0x5a, 0x43, 0xed, 0x80,
	0xb1, 0x9d, 0x58, 0x28, 0x68, 0xbd, 0xe8, 0xc4, 0x42, 0x71, 0x3c, 0x62, 0x40, 0x1b, 0xa8, 0xec,
	0x46, 0x0c, 0xc8, 0xef, 0x50, 0xd7, 0x2a, 0xb4, 0x52, 0x13, 0xa5, 0x9a, 0x56, 0xe1, 0x3c, 0x20,
	0x97, 0xd0, 0xca, 0x05, 0x73, 0x63, 0xe6, 0xf1, 0x98, 0xb6, 0x8a, 0x15, 0xe5, 0x82, 0x2d, 0x2c,
	0xb6, 0x36, 0x8a, 0xa5, 0xcf, 0x62, 0x0a, 0xb8, 0xa0, 0x02, 0x10, 0x02, 0x27, 0x81, 0x96, 0x8a,
	0xb6, 0x91, 0xc4, 0xd8, 0xb6, 0xc9, 0x02, 0xe5, 0xf2, 0xc4, 0x67, 0x8a, 0x9e, 0xa2, 0xd0, 0xcc,
	0x02, 0x75, 0x6f, 0x31, 0x19, 0x41, 0x3b, 0x4b, 0x34, 0x67, 0x7e, 0xc4, 0xbc, 0x98, 0xd3, 0x0e,
	0xca, 0x87, 0x54, 0x71, 0x4f, 0x32, 0x12, 0x9e, 0x30, 0xb4, 0x5b, 0x54, 0x6f, 0x31, 0xb9, 0x82,
	0x53, 0xcd, 0x53, 0x19, 0xe7, 0xdc, 0x8d, 0x64, 0x6a, 0x68, 0xaf, 0x28, 0x2f, 0xb9, 0x07, 0x99,
	0x1a, 0xf2, 0x0c, 0xfa, 0xdb, 0x94, 0xad, 0x15, 0x69, 0x1f, 0xd3, 0x7a, 0x25, 0xbf, 0xf5, 0x90,
	0x5d, 0x5c, 0x90, 0x6b, 0x7a, 0x86, 0xaa, 0x0d, 0xc9, 0xbf, 0xd0, 0x49, 0x65, 0xa6, 0x7d, 0xee,
	0xc6, 0x52, 0x3e, 0x66, 0x8a, 0x12, 0xd4, 0x4e, 0x0b, 0x72, 0x81, 0x9c, 0x1d, 0x62, 0x7f, 0xc1,
	0x7a, 0x43, 0xcf, 0x8b, 0x21, 0x76, 0x9c, 0xb3, 0x21, 0x53, 0x68, 0xe3, 0x16, 0xdd, 0xd4, 0x30,
	0xff, 0x91, 0x5e, 0xa0, 0xd9, 0xaf, 0x7e, 0x61, 0xf6, 0x31, 0x2e, 0xd9, 0x01, 0xac, 0x7a, 0x67,
	0x8b, 0x06, 0x2e, 0xd4, 0x8a, 0xcd, 0xff, 0x0d, 0xad, 0x79, 0xfa, 0x3e, 0x11, 0xa1, 0xd4, 0x6b,
	0xb4, 0x5b, 0xd3, 0xd9, 0x13, 0xf6, 0x5e, 0x30, 0xad, 0xf4, 0x74, 0x59, 0xd3, 0x87, 0xea, 0x72,
	0xb9, 0xd8, 0xba, 0x6b, 0xb9, 0x5c, 0x58, 0xe6, 0x7e, 0xa3, 0x4a, 0x6b, 0xd9, 0x70, 0xfa, 0xea,
	0xcb, 0xb7, 0x61, 0xe5, 0xc3, 0xed, 0xc1, 0xab, 0x12, 0x8b, 0x15, 0x33, 0xd2, 0xbe, 0x41, 0x37,
	0x6c, 0xc5, 0x13, 0x33, 0x61, 0x4a, 0x4c, 0x8e, 0x1f, 0xa6, 0x97, 0xb9, 0x52, 0x2e, 0xf3, 0x42,
	0xaf, 0x8e, 0xaf, 0xcc, 0x8b, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0xda, 0x56, 0x6a, 0xa1, 0xb9,
	0x04, 0x00, 0x00,
}
